package types.paths;
import elements.SvgElement;
import types.Path;
import visitors.*;
/** 
* @module QuadraticCurveTo.java
* @version 1.0 
* @since 2013-04-22
* @author Jimmy Lin (u5223173) - u5223173@uds.anu.edu.au
*   
* Edited by MacVim
* Class Info auto-generated by Snippet 
*/
public class QuadraticCurveTo extends Path{
    static final int SIZE_QqCOMMAND = 4;

    private Point2D controlPoint;
    private Point2D endPoint;
    public Point2D getControlPoint() { return this.controlPoint; };
    public Point2D getEndPoint() { return this.endPoint; };

    
    public QuadraticCurveTo (SvgElement e, String command, double [] points) {
        super(e);
        this.command = command;
        if (this.command.matches("[Qq]")) {
            if (points.length >= SIZE_QqCOMMAND) {
                this.controlPoint = new Point2D (points[0], points[1]);
                this.endPoint = new Point2D (points[2], points[3]);
            }
            if (points.length > SIZE_QqCOMMAND) {
                double [] newPoints = new double [points.length - SIZE_QqCOMMAND];
                for (int i = 0; i < newPoints.length ; i ++) {
                    newPoints[i] = points[i + SIZE_QqCOMMAND];
                }
                this.next = new CubicCurveTo (e, command, newPoints);
            }

        } 
    }

    // visitor pattern implementation
    public void acceptPV (PathVisitor visitor) {
        visitor.visitQuadraticCurveTo(this);
    }
    public String toString () {
        String str = "QuadraticCurveTo:";
        str += "\t Current Point: " + this.controlPoint.toString() ;
        str += "\t Control Point: " + this.endPoint.toString() ;
        return str;
    }
}
