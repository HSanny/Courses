Ariel Sibille
as53547
ariels
arielsibille@gmail.com
Lecture 1
1. Personal security, communications security, network security, and system security are all relevant to my daily life.
2. They all deal with protecting myself and my assets from outside threats.
3. I have been a victim of lax security in the past; when I was younger I fell for phishing types of stuff all of the time.
4. I would say it's fairly likely that my laptop is infected, just because it's so difficult to keep up with what comes out these days, not to mention that I am not always on the most savory of websites.
5. I have anti-malware and anti-virus programs that I run regularly. I also keep fairly regular backups.
6. They have worked well for me so far, but the programs run the risk of being outdated and the backups run the risk of corruption.
7. I don't really doubt it exactly, but I think it's really dramatically worded. For example, enough leaked information could probably cause wide-scale revolution in some countries, which would definitely meet the criteria for the country to cease to exist. However, I think in terms of other countries using information to destroy us somehow is downright unlikely.
8. As a programmer, I want to make trustworthy products. As a consumer, I want to be able to identify and utilize trustworthy products.

Lecture 2
1. One thing is that an attacker may have more motivation to find a flaw than you have to fix it, or otherwise is not working on a deadline like you are. There are also likely many more malicious people thinking of ways to compromise the program than there are programmers trying to make it safe.
2. I would think so. You could probably look through areas of code that are likely to produce vulnerabilities (i.e. areas requiring user input) and try to at least protect yourself from known threats.
3. The attacker only has to find one vulnerability, whereas the programmer has to think of all possible vulnerabilities in advance.
4. I'd say it depends on your definition of secure. If we're talking relatively secure, then they're obviously extreme. If we're talking completely and utterly secure, then they're maybe less so.

Lecture 3
1. Risk is an assessment of the possibility that something bad will happen as well as an assessment of how negatively that bad thing will affect assets.
2. I would agree that software security is about managing risk, mainly because perfect security is impossible. Risk evaluation and handling is a good way to improve the security of software while keeping in mind the most salient threats.

Lecture 4
1. The list on slide 2 is a list of the goals of security policies, whereas the list on slide 3 is a list of the tools one can use to achieve these goals.
2. For me, confidentiality is the most important in my daily life. I dislike the idea of other people having any information about me especially personal information, unless it is freely given.
3. Grouping and categorizing data refers to separating data by its level confidentiality and by its topic.
4. Authorization may change as, for instance, a person is promoted or demoted within an organization.
5. Reliability and security are related because for every second that a website like Amazon is down, they have the potential to lose a lot of projected assets.
6. Authentication and non-repudiation are important in the case of transactions taking place, for example within the world of online shopping or banking. 

Lecture 5
1. A good metapolicy for a mobile phone network would probably be a goal of availability. Phone users will often drop phone companies with bad coverage. A metapolicy for a military database would be confidentiality.
2. The policy describes the specific steps taken to enforce the metapolicy, whereas the metapolicy is a more vague statement of the main thrust of security.
3. Faculty are not allowed to disclose a student's academic record to anyone except for authorized personnel. Academic records must be kept in a secure place. Anyone seeking these records must come to campus or otherwise use the secure website.
4. Yes; a policy may interfere with the speedy functioning of a program, which would interfere with stakeholders' interest.
5. Confidentiality is the likely metapolicy in this example.
6. The metapolicy is the overarching goal of security for a project. The policy is the way of enforcing the metapolicy. Without consideration of the metapolicy, or the goal, it is therefore difficult to understand the components of the policy as a cohesive whole.

Lecture 6
1. The military has a lot of information that it needs to keep secret in order avoid that information falling into the wrong hands and jeopardizing national security. Integrity and availability are also important, naturally, but not of the same level of importance as confidentiality.
2. The major threat in the MSL thought experiment is a data leak of confidential information to unauthorized individuals.
3. Because the policy for enforcing the confidentiality metapolicy produces results that may make the system seem useless, and may contradict any goals of availability and integrity (for example, an employee with lower-level authorization may compromise the integrity higher-level data through this system. 
4. The labels have both information on the sensitivity of the information and the category of the data. This prevents as many people as possible from seeing information for which they have no real need.
5. That's an issue for integrity; our metapolicy is confidentiality.
6. The cafeteria is serving chopped beef on toast today.
The base softball team has a game tomorrow at 3pm.
Col. Smith didnt get a raise.
Col. Jones just got a raise.
The British have broken the German Enigma codes.
The Normandy invasion is scheduled for June 6.
7. The base softball team has a game tomorrow at 3pm. -unclassified, management
The Normandy invasion is scheduled for June 6. -top secret, war efforts
The cafeteria is serving chopped beef on toast today. -unclassified, management
Col. Jones just got a raise. -secret, management
Col. Smith didnt get a raise. -secret, management
The British have broken the German Enigma codes. - top secret, war efforts
8. If someone has clearance for one category but not another, they should not be able to see any information in any documents for which they have no clearance, so they should not be able to see the file at all. Likewise, if an employee has clearance for lower-level but not higher-level information in a file, they should not be able to see any information on the level for which they have no clearance, so they should also be unable to see the file.

Lecture 7
1. Individuals are assigned authorizations and clearance levels.
2. The labels for people differ from the labels for documents because the labels for people characterize their trustworthiness or what they need to know, whereas the labels for documents characterize their sensitivity and what they contain.
3. Documents are data, humans can be humans or programs with the authorization to look at certain data.
4. The Principle of Least Privilege makes sense because you don't want to give people less information than they need to do their jobs so you do have to tolerate possible leaks on those fronts, but you don't want to run the risk of them leaking any unrelated information that they don't need.
5.
	1. The access here makes sense because the person has more than adequate clearance 	hierarchically and is cleared for the correct category.
	2. The denial of access here makes sense because the person has inadequate hierarchical 	clearance, even though they are cleared for the category.
	3.  This access makes sense because the person here has more than adequate hierarchical 	clearance and 	the document has no required category.

Lecture 8
1. These terms represent the accepted way of talking about security issues and allow for more abstraction in the discussion of problems. 
2.
{Top Secret: Crypto} {Top Secret: Crypto}
In this reflexive relation, these labels dominate one another because their levels are equal and the set of categories for each is the same. 
{Top Secret: Crypto, Nuclear} {Top Secret: Crypto} {Secret: Crypto}
When a subject has sufficient clearance for the second object, they will also have clearance for any object dominated by that object. 
When one label dominates another, that label does not dominate backwards. Only one label in a relationship can dominate unless it is reflexive.
3. {Top Secret, Crypto} {Top Secret, Nuclear}
Neither of these dominates the other, therefore the relation is partial. If it were total, by necessity each pair would have to have a dominates relation.
4. They would have to be the same label. 
5. A subject can only access an object if they have a higher hierarchical level than the level of the object.
6. It's necessary but not sufficient for a subject to access an object. There may be other constraints imposed on a subject's access to an object.

Lecture 9
1. It is not sufficient to prevent all possible leaks of information; it only makes certain that access to objects by subjects is controlled within the system.
2. Because by not denying write access in addition to denying certain read access, information may still leak downwards, granted someone with read access writes what they have read into a lower area.
3. In terms of computers, a subject may be a program, and programs may not be trusted to not copy unauthorized info to places where it shouldn't be because they may have been compromised.
4. The *-Property says that a subject can only write to an object that is at an equal or higher level than it.
5. The subject must be at the exact same level on the sensitivity hierarchy as the object to both read and write to it.
6. The General can use two different accounts.
7. It is indeed a problem, unless the corporal has a better war plan. To prevent this from happening, we we have to create an integrity metapolicy.

Lecture 10 
1. You wouldn't want a level change to contradict the purpose of your security policy, but it's still allowed. So in BLP, you would want to demote subjects, not demote them. 
2. Strong tranquility does not allow labels to change for the duration of the system, which does not allow for anything along the lines of declassification of information that is no longer as sensitive. 
3. You may declassify very sensitive information, which would violate the security policy.
4. Information would have to be able to be written down within the system.

Lecture 11
1. Subjects would all be high level and objects would all be low level.
2. Because there are too many objects and subjects in a BLP system for that to be feasible in terms of scale.

Lecture 12
1.
{H, (A)}
   ^
   |
{L, (A)}
2. For either GLB or LUB, find the intersection of the categories of the labels. Then, for LUB, take the level of the lowest label and combine it with the intersection of the categories. For GLB, take the level of the highest label and combine it with the intersection of the categories.
3. Upward flow in the lattice represents flow from a lower level to a higher level of security. This means information should flow upwards, either by a write from a low level to a high or a read from a low level to a high.

Lecture 13
1. BLP rules prevent information from flowing downwards by preventing reads and accesses from happening by the wrong subjects.
2. READ prevents a low-level subject from reading above itself and WRITE prevents a high-level subject from writing below itself. Both of these keep the information flowing upwards.
3. CREATE can only create an object at its own level, and DESTROY can only destroy an object of a higher level. Create keeps information at the same level, whereas destroy keeps high-level subjects from modifying lower-level files.
4. There has to be a system attribute to be manipulated, and that system information about the high-level channel has to be communicated to the low-level subject somehow.
5. So that you can do this over and over again in a loop.
6. The contents of the files are the same.
7. SL does the same thing in both cases because it makes it easier to loop the process, but I don't imagine that it's completely necessary as long as you're still getting system information.
8. SH does different things and it definitely has to, because the change in state is necessary to communicate the information.
9. Although it does not use the typical routes, SH still can communicate information to SL through covert channels. This information flow from high to low level violates the metapolicy that states that information should only flow from low to high.

Lecture 14
1. Covert channel implies that the flow is between two subjects within the system; this conversation is outside of the system.
2. No; the only thing that is different is the data within F0. SL checks F but cannot read it due to its security level.
3. The bit of information lies in whether or not the attempted access of a file returns a Resource Not Found or an Access Denied from the system (the status of SH's resource).
4. The information is in whether or not SH has relinquished the processor early.
5. The information is in the area on the disk at which SH left the read head.
6. The information is in a boolean statement that resolves differently in different situations.
7. This channel depends on computations completing or not, so it may be waiting on a bunch of timeouts. This would decrease the speed at which messages could be transmitted.
8. You would have to have a way to monitor the power used by the SL as well as to modulate the power used by the SH.
9. Mobile and other devices with batteries, particularly energy-efficient devices which monitor their energy usage closely.

Lecture 15
1. Real covert channels can operate very quickly on  real processors.
2. System information still needs to be communicated somehow; the only way to completely eliminate these channels would be to eliminate system information.
3. You can change the system implementation, reduce the bandwidth of the channel with the introduction of noise, or just watch it to see if it's even being used.
4. When a low level subject can access information about files created by high level subjects, this is a covert storage channel. For example, if the system returns either a file not found or unable to access message when a low level subject attempts to access a file created by a high level subject.
5. The sender can either create or not create the file in order to send messages to the receiver. The receiver must perform the same functions over and over again, but can use the information about the existence of a file as a bit. 

Lecture 16
1. Because it creates the file, which modifies the existence of the file. Even though it can be used as a reference, the creation part is more important. 
2. If something in the system can modify an attribute and another thing in the system can reference that modification, that could allow communication via that modification and reference.
3. No, because files would have to be at the same level to perform the same operation. That they would be the same level contradicts the basis of a covert channel. 
4. It helps to keep track of vulnerabilities.

