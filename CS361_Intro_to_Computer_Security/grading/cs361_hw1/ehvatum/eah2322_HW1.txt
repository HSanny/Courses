Questions Week 1

Even Hvatum
UT EID: eah2322
CS Login: ehvatum
Email: ehvatum@utexas.edu

Lecture 1

1. All three security metapolicies are relevant to my daily life. I trust that my online information and activities on sites such as Google and Amazon will remain confidential as well as offline such as my medical records. I also trust that the integrity of my information such as my grades at UT or my purchased songs on iTunes will not be affected. Finally, to a lesser degree I trust that I will be able to do such things as access my accounts online or use credit cards in person.

2. I would say that the most important thing that all of the above have in common is that I am forced to trust that another party (Google, Amazon, Netflix, Bank of America, etc) will not compromise my personal information maliciously or otherwise.

3. My credit card was one of the ones affected by the recent Target security breach. I have also experienced fraudulent charges after using my credit card with online retailers and once had it replaced due to Sony’s PlayStation Network being hacked.

4. It is very likely that my laptop is infected with some of the more common and less malicious smaller trojans but not so likely that I have a more threatening virus present. I regularly scan my laptop with two of the best Anti-Virus programs as well as do a complete operating system flush (wipe the drive and reinstall) once a year which should help to mitigate that I spend a lot of time on the internet although I am picky about the sites I visit.

5. As mentioned above, I use two Anti-Virus programs and annual drive wipes as a countermeasure to anything I may come across online. I also use a strong password to log onto my laptop, another administrator password to install or change programs, and I don’t leave my laptop out of my sight when I am not home.

6. I believe that these countermeasures are somewhat effective at catching or removing malware within a timely manner, at worst annually, and that I am almost completely protected against someone with poor intent getting physical possession of my laptop which should limit their accessibility.

7. I believe the FBI quote demonstrates a worst case scenario but one that could come to pass; therefore, I do not believe it overstates the case. A simultaneous attack that targets banking, the stock market, transportation, and energy all at the same time could cripple the economy and throw the general population into a panic. Combine that with an attack that targets our military infrastructure, and it is possible although unlikely that such an attack would change the political landscape as we know it.

8. I believe it is two-pronged. First, we should become more aware of our own activities and how we may put ourselves at risk through nonchalance. Secondly, it should also make us better programmers who develop programs with security as part of the main features rather than as an afterthought.

Lecture 2

1. The human element to security will always result in an imperfect system; there is no way to ensure that a user isn’t careless and gives away their security credentials or that someone with access maliciously causes damage. It is often extremely difficult to punish the offender due to the difficulty of tracking them down and not having jurisdiction in other countries which may not be too concerned with the security of your company.

2. No. To enumerate the bad things that could happen to a program would be to discount the possibility of an unexpected vulnerability and that is an extremely extremely dangerous assumption. History has also proved that there exists no program that is 100% secure and therefore you cannot enumerate the weaknesses of a system.

3. A defender has to think of and defend against every possible weakness in the system both the anticipated and unanticipated while also making sure that the threats that aren’t stopped cause the minimal possible damage. An attacker only has to find and exploit a single weakness in the armor to cause damage. 

4. Yes, I agree with Morris and Chang that the only way to ensure that your computer is not vulnerable to any security threat is to disconnect it from all communication with the internet, prevent any new software from interacting with it, and to keep it away from human hands as well. Obviously this isn’t a very convenient solution, but it illustrates the point they are both making which is that security is an ongoing issue with no actual solution without completely ditching your computer. And even then your confidential information stored on other computers are still at risk.

5. For the same reasons as discussed above, a computer is only under no risk of a security threat when it is also removed from almost all functionality. More realistically, there has to be a balance between maintaining as much security as possible without impeding the usability of the machine or there would be no reason to use the computer in the first place. Making it impossible for your employees to do their jobs is more likely to lead to a failed product as a security threat.

Lecture 3

1. Risk is the potential of a threat causing unwanted damage or consequences in a system through taking advantage of a vulnerability in the system.

2. Yes, I agree that since it is impossible to prevent all threats, software security is about managing risks by thoughtfully accepting those you cannot avoid, avoiding those you can, and mitigating the effects of any that you are unable to stop.

3. I accept the risk of viruses associated with installing popular modifications to games that I play on my computer even though I do not know the publisher or developer of those modifications. I avoid the risks associated with opening emails from sources I do not know or going to websites I do not trust. I mitigate the risks of opening software I do not know on my home computer by scanning it with my virus programs first. Other than car insurance and home insurance, I transfer the risk of opening files and programs I do not trust on my roommate’s computer instead of mine.

4. ALE is a good tool for predicting the losses associated with each type of risk or threat in the coming year, but I also believe that one should not rely only on the ALE to decide where to spend the whole security budget. As seen in the slides, even if teller fraud may cost a bank more money each year that SWIFT fraud, one occurrence of SWIFT fraud could cripple the bank and therefore should receive a large amount of focus where is security is concerned. There is also the question of expected losses versus the realistic ability to prevent such losses which may make spending in another area a better logical decision.

5. Rational risk assessment should factor in the expected losses from a threat, the expected vulnerability of the system, how crippling such a threat could be to the system, the ease or lack thereof of defending against the threat, and the impact on the functionality of the system to implement stricter security.

Lecture 4

1. The list on slide 2 is the encompassing metapolicies of the system while the list on slide 3 are the specific policies that can be implemented to achieve the metapolicies.

2. Confidentiality is the most important metapolicy for my use of personal computing which consists mostly of shopping, video games, and school work. It bothers me if I am not able to access my favorite webpages or online retailers, but I would much rather have them be unavailable than leaking my personal information such as credit cards or my history of purchases. Likewise, I am more concerned with my information staying confidential than than the integrity of the system, although that comes in at a close second.

3. In security, grouping data is to divide it up according to the security level of the data. Categorizing the data is a more distinct division of the data at a specific security level into different categories all separate from each other and with different permissions required to view each category.

4. Some data may become declassified over time while some subjects may reach a higher level of security access or a lower one. Subjects may also need to view different categories over time in order to do their job.

5. In a denial of service attack, the attacker is not after information or attempting to modify your data but only attempting to prevent you from accessing your own resources or reaching customers. This falls under the robustness and reliability of the system while still being a security issue since an outside attacker is targeting your system in an attempt to cause unwanted consequences.

6. One example of a situation where authentication and non-repudiation could be considered critical would be for online purchases on such sites as Amazon. You want Amazon to authenticate that it really is you who is logging on to order something on your credit card and you don’t want Amazon to be able to claim that you never ordered what you paid for. Meanwhile, Amazon wants to prevent unauthorized use of customer accounts or for customers to claim that they never ordered the items through Amazon’s service.

Lecture 5

1. For a cell phone network, one would expect a metapolicy of availability to take precedence in order to provide good service for their customers. On the other hand, a military database would most likely target a metapolicy of confidentiality as the database is likely to contain a large amount of top secret information.

2. A policy is the tool or implementation used to achieve the target metapolicy. The metapolicy is the goal but the policy is the way to achieve that goal.

3. Three possible rules could be: no other student is allowed to see a student’s academic record, a student’s academic record must require authentication to view, a student is only allowed to view but no modify their own record.

4. Certainly, UT and a student at UT would vehemently disagree on whether a student should have the ability to modify their own academic records or not.

5. The likely overarching metapolicy is confidentiality of SSNs belonging to students.

6. Without a clear idea of what the overall goal is, it is difficult to tell how good a job the individual contributions and decisions are doing. It is also difficult to evaluate their effectiveness if you don’t know what you are trying to achieve.

Lecture 6

1. One would expect that the military keeps a substantial amount of top secret or confidential information such as defense projects and war plans. That is not to discount that they are also very interested in maintaining the integrity of their information as it would not be in their interest to have the war plan changed without their knowledge. There is also an aspect of availability involved as those with the necessary clearance should be able to view all of this information. Keeping it secret from everyone is no more helpful to the leadership than sharing it with the enemy.

2. The major threat in our thought experiment is that the enemy will find out what the war plan is. In other words, we are concerned with a breach of confidentiality.

3. The proviso is telling us that we do not need to be concerned with the other consequences of our confidentiality metapolicy such as the lack of attention to the integrity of the information or making sure that it is easily available to those who should be able to view it. Basically, the proviso allows us to only focus on how to keep the information as confidential as possible as our only goal without the need to compromise.

4. The labels have a security level, meaning that an individual must have that level of clearance or above to view that information. The labels are then supplemented by categories which further divide the information based on a need-to-know basis. An individual must have express permission to view that category in order to see the information regardless of how high their level is.

5. How the labels are picked seems like a question of availability and doesn’t fall under the scope of confidentiality as that metapolicy only seeks to maintain the confidentiality of the information and not decide how to categorize it. Our concern is to implement the desired level of security, not to question the levels decided upon by the interested party.

6. Highest sensitivity:
	1. British have broken German enigma codes
	2. The invasion of Normandy is on June 6th
	3. Col Jones got a raise
	4. Col Smith didn’t get a raise
	5. Cafeteria is serving chopped beef today
	6. The softball team has a game at 3 tomorrow
   Lowest Sensitivity

7. (Top Secret: {Crypto}) - British have broken German enigma codes
   (Secret: {War Plan}) - The invasion of Normandy is on June 6th
   (Classified: {Payroll}) - Col Jones got a raise
   (Classified: {Payroll}) - Col Smith didn’t get a raise
   (Unclassified: {}) - Cafeteria is serving chopped beef today
   (Unclassified: {}) - The softball team has a game tomorrow at 3

8. If a document contains two categories but an individual who is only cleared to view one of those categories is able to see that document then they will have gathered information they are not supposed to see and you have a breach of confidentiality. Therefore, although it will make it harder for them to do their job, an individual must not be allowed to see a document that contains any information they are not cleared to view and a mixed document must be rated at the highest level of security that the information within it dictates and with all applicable categories required. We can ignore the problems in availability caused by this since we are only concerned with confidentiality in this case.

Lecture 7

1. Humans have security clearance levels and a set of need-to-know categories that are the minimum required to effectively do their job.

2. Labels on documents indicate the level of sensitivity of the information contained while security clearances for humans indicate the level of classified material they are authorized to view.

3. In terms of computers, documents are files while programs replace humans. That is, files can only be acted on by programs if those programs have the necessary permissions. Another way to view it would be that files and programs are both documents while the users are the humans who are only able to view and run files and programs with their level of access or higher.

4. A subject should only have the minimum clearance required to do their job and no higher. This makes sense because giving a subject access to something that they don’t need to know compromises the security of the whole system. The idea is to minimize the exposure of sensitive material as much as possible and giving access to those who don’t need it does the opposite.

5. Secret crypto has access to confidential crypto: yes, they should have access since they are authorized to view the crypto category and their secret level access is higher than confidential but there may still be something in confidential files that they need to do their job.

   Secret crypto nuclear does not have access to top secret crypto: yes, this subject should not have access to any documents that are labeled top secret since they only have a secret level of clearance.

   Secret nuclear has access to unclassified: yes, any level of clearance, even those without any level, should have access to unclassified documents as they are by their very nature not something to be hidden.

Lecture 8

1. Subjects, objects, and actions are introduced as vocabulary terms to generalize the different entities involved in security and to define these entities more formally.

2. When both an object and a subject have security label A, then both dominate each other. That is, O >= S and S >= O, and so dominates is reflexive. Dominates is also transitive since if A >= B and B >= C, then A >= C. That is, if A dominates B and B dominates C then A also dominates C. Finally, dominates is antisymmetric since if A is not equal to B and A dominates B, then B cannot dominate A. Thus, dominates ensures an order that cannot be reversed unless labels are equal.

3. When you have different labels such as (Secret: {Crypto, Nuclear}) and (Top Secret: {Nuclear}) then you have a situation in which neither dominates the other. (Secret: {Crypto}) cannot dominate (Top Secret: {Nuclear}) since secret is dominated by top secret. But (Top Secret: {Nuclear}) cannot dominate (Secret: {Crypto, Nuclear}) since the category of crypto and nuclear dominates nuclear.

4. For two labels to dominate each other, those two labels must be exactly identical as shown in the answer to question 2. This falls under the reflexive property of dominates.

5. The Simple Security property states that for a subject to read an object, the subject must have a security level which is higher than or equal to the object’s level and need-to-know access to all of the categories which the object has been classified as.

6. There may be additional considerations in the system for whether the subject is allowed to read the object. In other words, it is always the case that the subject may only read the object if the subject dominates the object, but it is not always the case that this is enough to actually have that access and therefore the “if” is left out as it would indicate these are the only necessary requirements.

Lecture 9

1. Simple Security does not prevent a subject with access from copying the information to an object with lower security or sharing it with another subject with a lower level of clearance.

2. We need constraints on write access to prevent a subject from writing information that they are privy to in a manner so that a subject of lower clearance level is able to read that information. In other words, to prevent information from flowing down in the system.

3. Any program that runs under a user also runs at that user’s clearance level so even if a user does not intend to do anything malicious, their level of access can be used by a trojan. This means that this trojan has access to everything that the user does and can cause the same level of damage if not more since a program will never tire and can run even when the user is not present.

4. The *-Property says that a subject can only write to an object that dominates it. That is, the object must be at the same level or above for the subject to write to it. This ensures that information can only flow upwards in the system.

5. For a subject to have both read and write access to an object, that object has to be at exactly the same level as the subject. This includes the need-to-know categories being identical. In other words, both must dominate each other.

6. In this system, a general is not allowed to send orders to a private. The only workaround would be for the general to write it at his level and then changing the level of the object later if possible so that the private could read it.

7. Yes, it is a problem that there is nothing preventing a corporal from overwriting the war plan but this is an integrity problem. Therefore, there should be a check to prevent a subject from overwriting an object at a higher clearance level which would mean that subjects are only allowed to write new information above their level, not change anything.

Lecture 10

1. Downgrading a subject’s clearance level could lead to a loss in productivity as they might be prevented from accessing some information they need to do their job. On the other hand, upgrading a subject’s clearance level could cause a breach of confidentiality so that should only be done if it doesn’t violate the spirit of the security policy.

2. Strong tranquility prevents anyone from being promoted to a higher clearance level, prevents removing someone’s clearance level, and causes objects to remain exactly at the level they were created at regardless of how outdated that level is. As a result, it is easier to maintain confidentiality but makes it more difficult for all involved to adapt to changing requirements.

3. Lowering the level of an object is a serious risk to confidentiality as it may make information available to subjects which are below the intended sensitivity of the material in the object. Such an action should be strongly thought through before doing it.

4. Lowering an object’s level should only be done when it doesn’t violate the spirit of the security policy and when all information contained in the object has been deemed to be at a sensitivity level no higher than the level that the object is being lowered to.

Lecture 11

1. Using the BLP Model, one could simply introduce a maximum object level and a minimum subject level such that all subjects are at a  higher level than any object. This would ensure that all subjects are able to read all objects but due to the *-Property no subject is able to write to any object.

2. A BLP System’s access control matrix would be too enormous to be useful for any practical application while not being necessary for a BLP system since the access permissions can be computed in real time by the dominates relation.

Lecture 12

1.                       (H: {A})
                          ^   ^
                          |   |
               (H: {})————-   —————- (L: {A})
                  ^                     ^
                  |                     |
                  —————————   ——————————-
                          |   |
                         (L: {})

2. For any 2 labels in a BLP system, an algorithm for finding the LUB would be to pick the higher of the 2 levels of the labels as the level of the upper bound and the categories would be the union of the two categories from the labels. In this way you get a level that will dominate both and categories that are a superset of the 2 individual sets of categories. To find the GLB pick the lower of the 2 levels as the level of the GLB while the GLB categories are going to be the set of the intersection of the 2 categories from the labels. In this way you get a level that both labels dominate with a category set they also both dominate.

3. Upward flow in a lattice indicates that information is only flowing upwards. In other words, elements at a higher level dominate those below them and so when you apply the Simple Security property and the *-property you should be able to tie read and write privileges to this dominates relationship to enforce confidentiality.

Lecture 13

1. The metapolicy here is that information should only flow from L to H. By the Simple Security property H can read L but L is unable to read H because H > L. At the same time, L can write to H but not vice versa since H > L by the *-property. Combined these two rules should keep information flowing from L to H but never the other way.

2. READ satisfies BLP since it will only return the read value from the object to the subject when the subject dominates the object. Likewise, WRITE also satisfies BLP since it will only write the new value to the object if the object dominates the subject.

3. CREATE can be thought of as a WRITE at the level of the subject creating it since it will only create a new object if none exist with that name already in the system and therefore it satisfies BLP. In other words, it will never write to an object below its own level. DESTROY also satisfies BLP since it is only able to destroy objects that dominate the subject and therefore can also be thought of as a WRITE but this time above your own level which is legal by BLP rules.

4. SH and SL must be colluding to transfer information from a higher sensitivity level to a lower one. In addition, this scheme will not work if the object F0 already exists in the system and at a lower level than SL as it will not have any ability to write to the object in that case or the ability to destroy it.

5. If SL did not destroy the object each time then SH would never be able to create it and thus fail to transmit that one bit of information to SL as it would not be able to make a change in the system.

6. No, the contents of the files are identical between the two paths. The difference lies in whether SL has the permission to read the recently modified contents or not. Therefore the bit of information is never transmitted by content but rather by using the system state itself.

7. SL does the same thing in both cases because it has no way of knowing which information it is about to receive. Doing something different would imply a knowledge of the events to come and then it would be pointless to go through the trouble to do this. So yes, for the change that SH makes to transmit a bit of information, SL must not vary its behavior.

8. SH does different things in order to transfer that one bit of information. If SH always did the same thing then it would not be communicating anything to SL as it is in varying its behavior that the information is transferred.

9. If SL is able to detect in any way that SH has made a change to its behavior or system state then this can be used to transfer information one bit at a time. All it takes to send a single bit of information is for SL to be able to see 2 distinct system states or detect that 2 different behaviors has occurred. Therefore if SL ever sees varying results from SH this can be seen as a security vulnerability as information is flowing downwards in the system.

Lecture 14

1. Two humans sharing company secrets between each other is an overt channel and not a covert one. A covert channel by definition involves using system resources in ways they were not intended.

2. No, objects were always intended as communication channels so if both subjects can read the same object and send information that way, then that is not a covert channel. That is a problem with access control or rather lack thereof since a low subject can read a higher level object.

3. The bit of information in this case resides in the system state. The system is unwittingly transmitting information to a low subject by informing it of why its attempt at accessing an object failed which means that a higher subject can send this information simply by creating or deleting the object at its level.

4. This bit of information is contained in the system clock. A low subject can simply read the system clock to find out how long it has been since it last had CPU time and a higher subject can vary the amount of its time slice it uses to hide information in the timing of system resources.

5. I would argue that this is a covert storage channel as the state of the disk drive is used to relay information. But one could also call it a timing channel since the low subject knows which data it’s looking for and based on the one it receives first that tells it something about the behavior of the higher subject.

6. In this case, the bit of information is hidden in the behavior of the program based on what the program sees the value of h as. One could call this the control flow of the program, although that is not really where the information is hidden but rather in the original value of h itself which the program is able to use as a boolean to vary the value of l.

7. Since it could take a long time (relatively for a computer) to determine the termination of a program, it is unable to transfer bits back and forth as quickly as varying system state for example. When the computation does not terminate, that indicates a long wait in computer time so that drastically reduces the effective bandwidth of information flow.

8. The high subject would have to have access to some way to use a noticeable higher amount of system power. Certainly the CPU would be capable of being pushed to use more power, but if a high subject could tax the GPU in one case and not in another than that would lead to a much more noticeable increase in system power.

9. The CPU is certainly able to be run to draw some more power in some cases than others, but other notable candidates are the GPU for its high power usage potential and any fans and peripherals that the program has access to. When there are other programs running on a system which may also cause power draw during their time slice, the more power a program can make the system draw the easier it is to convey that bit of information. Therefore, it is the devices which consume the most amount of power which are most easily targeted.

Lecture 15

1. If the computer is left on the covert channel can operate indefinitely and due to the extremely fast nature of a computer which can complete thousands and thousands of tasks in a second, changing a few things around will not affect the system speed in any noticeable way and can therefore go undetected by a user. Basically, the covert channels don’t tire, can transmit thousands of bits every second, and don’t induce a tax on the system to a point where anyone would notice.

2. The only guaranteed way to prevent covert channels would be to lock down the entire system and prevent any kind of modification or reading and if that is the case then system functionality takes a massive hit too. Basically, preventing all covert channels would lead to a system that is completely unusable and defeats the purpose of the system existing to begin with.

3. You can eliminate the potential covert channel by changing system implementation to remove that channel, you can introduce some kind of noise in the system to effectively limit the potential bandwidth of the channel, or monitor it for repetitive patterns that would indicate a transfer of information by system behavior.

4. Two levels of subjects must have access to a shared resource (object), the high subject must have a way to modify this object such as creating or destroying it, the low subject must have a way to view the state of this object such as whether it exists or not, and the two subjects must have a way to coordinate their actions to transmit this information.

5. For the covert storage channel above, the high subject would make some change to the shared object such as creating it or changing the permissions on it, then the low subject would come along and attempt to modify or read the object and based on what it receives back, it can tell what change the high subject made. For example, if the high subject creates the object and the low subject tries to create it too, write to it, and then read it, it would fail to read since it does not have the permissions required. On the other hand, if the high subject never created the object then the low subject would be able to read the one it created. In this way, the low subject is able to see two distinct variations in behavior from the high subject and one bit of information has been transferred.

Lecture 16

1. Create does not return feedback to the subject about whether or not the object was actually created so there is no reference associated with it. This means that the subject does not know whether it just made a new object or if that object already existed so it learned no new information about the system.

2. If there is an R and an M in the same row for an attribute then that indicates that there is a way for that attribute to be used to modify and then reference information, which is another way of saying that two of the four requirements for a covert storage channel have been identified. That means a high subject could make a modification that a low subject could reference to learn something about the state of the system.

3. An R and an M in the same column of a SRMM table does not necessarily indicate any covert channels since the ability to read an attribute is useless if there is no way for a high subject to modify it to send the information. This also goes the other way, if you can modify the attribute but there is no way to reference it then no information is transmitted. Both are required for a covert channel.

4. An SRMM table helps you identify potential covert channels so that you can take steps to deal with them. It’s a systematic way to see where the vulnerabilities lie in the system.
