Why isn’t Simple Security enough to ensure conﬁdentiality?
	Because take this example: A subject with top secret clereance reads a top secret object. He then writes the contents of it in a separate object and saves as an unclassified object. In this scenario a subject with unclassified clearance will be allowed to read it so the principle of confidentiality was violated

Why do we need constraints on write access?
	Because the principle of confidentiality might be broken. For example a subject with top secret clearance reads a top secret object. He then writes it into a secret container thus violating the principle of confidentiality. To get around it, the subject should only be able to write to his level or above.

What is it about computers, as opposed to human beings, that makes that particularly important?
	You can trust a human being to a certain degree. A computer however, might have malware such as Trojan horses. If this is the case a human with good intentions might read an object, but his infected computer can distribute the object to unwanted sources.

State informally what the *-Property says.
	That a subject can only write objects to his level of clearance or above

What must be true for a subject to have both read and write access to an
object?
	He has the same clearance level as the objects sensitivity

How could we deal with the problem that the General (top secret) can’t send
orders to the private (Unclassified)?
	The object can have its label temporarily changed. For example a General writes a top secret message, then a special down-grader subject changes the label of it to unclassified

Isn’t it a problem that a corporal can overwrite the war plan? Suggest how
we might deal with that.
	It is, however this doesn't violate confidentiality; only integrity. A simple work around is to deny overwriting objects.


