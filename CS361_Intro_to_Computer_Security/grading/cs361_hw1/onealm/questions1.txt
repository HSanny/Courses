 Name: Melanie O'Neal
 EID: mfo264
 CS Login: onealm
 Email: melanie_oneal@yahoo.com

Lecture 1:
	1. Based on the list on slide 3, personal security, communications
	security/network security, and system security seem to be relevant
	to my everyday life.

	2. All of these terms are referring to protections of my private
	data against malicious activity.

	3. I have been the victim of lax security. I have had many requests
	from websites to change my password because the website security had
	been compromised.

	4. My computer is almost definitely infected. If there may be millions 
	of unique malware samples and nearly 97% of sites carry severe
	vulnerabilities which probably are more worried about security than
	I, then my computer is very likely infected.

	5. Security measures I use include having scans performed semi regularly,
	and trying to check if the source of my downloads/software is reliable.

	6. The security measures I employ are probably not nearly as effective
	as they should be. They are certainly not nearly as effective as I 
	would like them to be.

	7. I don't think the quote overstates the case. If there exists
	dedicated enough people with malicious intent, it seems very 
	likely that they could find a way to do anything they wanted.
	Everything is connected somehow, so nothing is perfectly safe.
	
	8. It is important to learn about computer security to better protect
	myself against malicious activity and so that I can protect others
	within the programs that I will write in the future.

Lecture 2:
	1. Security is also difficult because the average person doesn't know
	how to protect themselves. 

	2. There isn't a systematic way to enumerate the "bad things" that might
	happen to a program. You can't always know every bad thing that could
	happen until it happens.

	3. A defender needs to try to get rid of all possible vulnerabilities 
	and protect against every threat. An attacker only needs to exploit 
	one vulnerability to cause damage.

	4. I agree. Perfect security is impossible because there is always 
	something new that could go wrong and by preventing more and more 
	threats, there is less flexibility a program could have. Perfect security
	would mean that nothing good would even happen either.

	5. The closer you get to perfect security, the more you have to sacrifice 
	for it in terms of things like functionality and efficiency.

Lecture 3:
	1. Risk is the possibility that a particular threat will adversely impact an
	information system by exploiting vulnerabilities.

	2. Yes, software security is about managing risk. Since perfect security is
	unattainable in software, the best we can to is decide which risks need more
	focus and lowering or handling the risk as much as possible, hopefully without
	impeding functionality.

	3. Risks that I...
	   Accept: I accept the risk that I have to drive.
	   Avoid: I avoid the risk of drinking alcohol.
	   Mitigate: I mitigate the risk of crashing by wearing a seatbelt.
	   Transfer: I transfer risk by having insurance.
	
	4. Annualized loss expectancy doesn't factor how big of a risk something might be.	
	It is an ok tool to analyze risk management but it shouldn't be the only one.	
	
	5. Some factors include how much a risk could ruin a company if it actually 
	happens or what unquantifiable risks may occur (psychological).
	
Lecture 4:
	1. Slide 2 lists things you want to protect (aspects), while slide 3 lists
	mechanisms for protecting the things on slide 2.

	2. In my personal life, availability is the most important. The majority of my
	use of computing relies on being able to access websites or software. I need
	to be able to order things on amazon or download a game off steam, or use
	a shell to do my homework. I don't have much that needs to be kept confidential
	and it won't matter if the information I get has integrity if I can't even
	get it it (availability).

	3. Grouping and categorizing data means being able to label data into different	
	levels so that more sensitive assets are more secure.

	4. Authorizations may change over time because assets can become more sensitive or 
	even less sensitive over time.
	
	5. Availability is what you want to protect to make sure that you are reliable.

	6. Autentication on non-repudiation would be considered important in bank transfers
	or other types of payments.

Lecture 5:
	1. Cell phone network metapolicy: Texts and calls must remain only accessible by 
	those making them.
	   Military database metapolicy: Individuals may only access information at 
	authorized security levels.

	2. A metapolicy can be too general and open to interpretation. Policies help specify
	rule for developers to follow.
	
	3. Only students and authorized staff may view a student's academic record. Only the	
	instructor responsible for a particular class may change grades. Directory information
	is public access unless specified.
	
	4. Yes. Stakeholders could agree on a metapolicy but the policies put in place could	
	represent different interpretations on the metapolicy which could conflict with	
	the interests of stakeholders.

	5. SSNs must not be visible to public access.

	6.If you don't understand the metapolicy, which are the general goals for a system, then
	you can't make more specific rules, also known as the policy.

Lecture 6:
	1. Military secure is mostly about confidentiality because it has very valuable data that 
	could be dangerous in the wrong hands. They need to make sure that only authorized people
	are able to see certain bits of information. There are definitly aspects of integrity
	and availability, but they are more concerned with guarding what they have. Lack of	
	confidentiality has more dire consequences than the other two.
	
	2. The major threat is that people could let lower security levels know about higher 
	sensitivities (writing down is possible).

	3. The proviso shows that at the moment we are only concerned with one aspect of 	
	security and that there are other things we need to think about for availability
	and integrity.

	4. We are using a two-tiered labeling system with a hierarchy for different levels of 
	sensitivity and categories for groups within the different sensitivity levels.

	5. We're not concerned with how the labels get there because people will be assigned 
	security levels according to what is appropriate.

	6. Highest to lowest rank: Top Secret(2,6), Unclassified(1,3,4,5)

	7. Labels: War plans, Crypto, Public Access Schedules, Personnel.

	8. Mixed must be given the sensitivity of the highest contained sensitivity because
	you don't want people with lower levels of security to see the higher levels.
	The labels must be shared so that only those with access to both may see the documents,
	this way only people with clearance for every single part may see it.

Lecture 7:
	1. Labels are given to humans by giving them authorization or clearances according to 
	what they are allowed to see.

	2. Labels for documents are the sensitivities of the documents. Labels for humans are
	their clearance levels.
	
	3. Documents on computers are files and humans are either users or programs.

	4.The principle of least privilege makes sense because it makes sure that people can't 
	access any more than they need to do their work. If they could access more, it would
	mean that there is information that can be seen by eyes that don't need them and 
	that gives more possibilities for leaks.

	5. The first pair makes sense because the clearance is higher than the sensitivity and
	in the same category. The second makes sense because the clearance is lower than the 
	sensitivity. The third makes sense because the clearance is higher than the sensitivity
	and there is no category.


Lecture 8:
	1. The vocabulary terms help give general definitions that can apply to both humans,
	computers, and whatever else we could apply security to.

	2. Dominates is partical order because there are some elements that can be unrelated in 
	a set. The conditions of reflexivity, transitivity and antisymmery also hold.

	3. Dominates isn't total order because of labels like Secret(Crypto) and Secret(Nuclear).
	Neither dominates the other but can be in the same set. They can't be ordered and therefore
	are not total order.

	4. Two labels woiuld dominate each other if they were equal.

	5. The simple security property syas that people can only read data if they have greater
	or equal clearance.

	6. "Only if" implies that there may be other constraints. Dominating isn't neccessarily the 
	the only condition or a sufficient one.

Lecture 9:
	1. Simple security doesn't ensure that dangerous writes don't happen.
	
	2. Higher clearances could write higher sensitivity material to lower 
	clearances. That would give unauthorized access to assets and essentially
	violate confidentiality.
	
	3. People can be trusted not to write information down, but programs may
	have bad logic or trojan horses.

	4. The *-Property says that subjects can only write to equal or above their clearance.

	5. The subject and object must be equal.

	6. You either have to make exceptions or allow the general to log in to an unclassified 
	account and trust that he won't spill information that he's not supposed to.

	7. It is a problem. One way to fix it would be to not allow for writing up as well or
	have separate labels for integrity.

Lecture 10:
	1. It's a trust issue. You can't violate the spirit of security but it's better than not
	being able to at all. 
	
	2. You would lose functionality with only strong tranquility. Higher ups couldn't give
	orders and information could get stuck at levels even when it is no longer sensitive.

	3. Lowering the level of an object may be dangerous because the object may have information 
	that is of a higher sensitivity and was missed in allowing it to be lowered.

	4. The information must be cleared for lower level access.

Lecture 11:
	1. Subjects would all dominate objects but none would be equal.

	2. The matrix would be too big for most realistic systems and it can be computed
	on the fly anyway.

Lecture 12:
	1. (L,A) -> (H,A)
	     ^        ^
             |        |
           (L,{})-> (H,{})   
	
	2. Make a tree of elements and find the first one both have in common from either end.
	
	3. BLP only wants info to flow upard, just like in a lattice.

Lecture 13:
	1. BLP doesn't allow for write downs, so in a lattice, all the arrows point or lead
	to dominating elements.

	2. The READ and WRITE operations do not explicitly allow for writing down or reading up.

	3. CREATE and DESTROY also don't allow for writing down or reading up. If it's allowed
	to happen, then it does and vice versa. The system doesn't tell you directly if it 
	happens or not.

	4. SL has to do the same thing and SH has to vary.

	5. The destroy statement is there to allow for a loop to happen so that an arbitrary
	amount of information can be sent on the channel.

	6. No. Both paths write the same thing to the file successfully.

	7. SL must do the same thin in both cases in order to determine if SH is varying.
	If SL changes, it can't tell what SH is doing.

	8. SH must do different things to be able to give out different bits. SL can 
	interpret what SH wants to sent based on getting varying responses to its
	own continuous actions.
	
	9. Varying results mean that a person could gain a bit of knowledge at a time.
	The reciever could interpret different responses as a bit which violates the metapolicy
	even if it doesn't violate any policies.

Lecture 14:
	1. Covert channels use resources that aren't designed to be used for intersubject
	communication. 

	2. It is not a covert channel becaue both transactions give the same result. Neither
	can read and get a 0.

	3. It resides in the error message stored.

	4. It resides in the variances in timing.

	5. It resides in both timing and storage. It seems more timing since the result is based on
	what the last use was.

	6. The control structure.

	7. Termination channels might have low bandwidth because the information is gathered by lack
	of things being sent.

	8. The lower level needs to be able to sense changes in power level, and the higher level needs to 
	be able to manipulate power level.

	9. Smartcards are an example of a device where power channels might arise.

Lecture 15:
	1. Even though covert channels see to have a low bandwidth, they still operate at thousands of bits 
	per second.

	2. Nothing would ever get done. Eliminating every covert channel would mean you would have to 
	eliminate many operations.

	3. One could modify system implementation, reduce bandwidth by introducing noise, or monitor for 
	patterns of ussage.

	4. As in lecture 14, SL could attempt access and get one of two error messages, which would represent
	a bit of information.

	5. The sender can manipulate what messages are seen by the receiver by varying their actions. 

Lecture 16:
	1. It modifies if it exists or not, but doesn't directly tell you if it's created.
	
	2. It means that the conditions for covert storage exist.

	3. No. The conditions must hold for a particular attribute.
	
	4.It is useful to look for potential covert channels, which are vulnerabilities.

