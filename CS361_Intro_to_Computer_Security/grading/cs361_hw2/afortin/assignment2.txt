Lecture 17
1. Yes,	any BLP	can be turned into a NI, just not vice versa
2. A->B
3. Yes it could, even though NI	is more	strict.	It can essentially be a	BLP, which has covert channels
4. A and B high, A and B low, A	high B low
Lecture 18
1. It has no rules abuot reads/writes. It is just a general policy that matches the confidentiality metapolicy
2. l1, l2, l3....lk
3. We would have to have a model of the	system at a low	level of abstraction, which is hard to come by
Lecture 19
1. You want to protect your assets from	being messed with within your own system. You wouldnt want the bank to mess up how much money you have in your account 
2. You trust the commercial software more. You believe it has more integrity
3. Seperation of duty deals with several different subjects, seperation	of function only deals with one	subject
4. If something	 does happen to your data, you want a way to recover what was lost. Thats when audits come in
5. Programmers cant be trusted.	Testing	   is done  on a nonproduction system. All processes must be audited
6. The database	    that keeps all records of the grades of	       UT students. It	     would be bad if	people hacked and saw what grades others had, but it would be much worse if they changed grades
Lecture		    20
1. Information on cs website has high reliablity and low sensitivity, documents	for a top secret document has low reliablility but high sensitivity
2. Row 1 - same	  labels so both dominate	 each other. Row      2 - Expert is higher than novice so no domination. Row 3 - Student is > novice and art is superset of nothing
3. Dont	 allow bad information to tain good information.     Dont allow information to flow up
4. Neithe have anything	       to do with each		     other which is why you need seperate labels
Lecture	  21
1. The same as BLP except the arrows are reversed, so dual
2. {B,C} is not	   a superset of {A,B} and	   vice versa
3. if you are using both policies, no
Lecture	  22
1. Subjects can	read anything
2. They	    are not, which is why the state	goes down
3. Subjects that read lower level information can censor out anything that is bad
4. More	    trustworthy than in LWM
Lecture	    23
1. Yes both have to do with development
2. So they can move something from development to production. To do this, you have to change the label
3. Yes
4. Weak	tranquility
Lecture	24
1. Concerns that you should consider when created a  commercial	model for security
2. Bank balances, checks
3. Snacks at the office meant for everyone
4. Enforcement checks how things are being modified, certification checks whether it is allowed to or not 
5. Teller can access a persons credit card information if she is within the set of people allowed to use the bank
Lecture 25
1. They	could take information about AA and give them to UA. Conflict of interest
2. Yes
3. All of them	
4. Bank of America, Wells Fargo, Citicorp
5. Designed for a very specific security problem which is conflict of interest
Lecture 26
1. More	appropriate fro	commercial settings
2. Authorized is a set of roles	   he can fill, active role is the	current	role he	is partaking
3. Transaction is the activity you can do with a certain role he is authorized to do
4. Harder to administer, less appropriate permissions, doesn’t recognize subjects have various functions
Lecture 27
1. Most subjects don’t have any access to most objects in majority of systems
2. Maintain set of rules that compute access permissions on the fly Access 
control list, capability-based system
Lecture 28
1. A communication channel
2. Knowing the bandwidth of a channel for example a covert channel. See how much information is flowing across
3. So you can communicate successfully
4. You might lose data if you send too much
5. 1 bit of data
Lecture 29
1. n bits, 4 bits, 7 bits
2. Depends on what information is needed. If you only need to know whether dusk or dawn, just 1 bit. If its attack any time during the day, 7 bits
3. 4 bits
4. 8 bits
5. You always have unused bits, nothing fits perfectly in a log based 2 container
Lecture 30
1. One is discrete, one is continuous
2. 000, 100, 110, 111, 101, 011, 001, 010
3. If it starts with a 0, you already know its message 10, otherwise you have to check all of the other possibilities. 995 comes from 99.5%, 5 from the last 5 error messages
4. Knowing the higher probably messages lets you optimize and cut down on bits since you know most the time it will be a certain message
5. Just throw in random numbers. So m1 = 0000111, m2 = 001100, m3 = 110001 m4 = 100011111
6. Best encoding you can possibly have
Lecture 31
1.26822
2. Roll 1 = 000 Roll 2 = 001 Roll 3 = 010 Roll 4 = 011 Roll 5 = 100 Roll 6 = 101
3. So it is unambiguous
4. So you can recover the information if lost from transmission
5. If you have 3 dots in a row, you dont know if its an 3 e's or an s. Also its not streaming
Lecture 32
1. 3
2. .722
4. I sets a lower limit on encoding efficiency. Tell you the optimal bits for encoding a certain message
Lecture 33
1. IF you flip 32 times, it is 16 2flips and on average we expect HH to appear 9 times, HT and TH 3 times, and TT once
2. HH is 1 bit used 9 times so 9 bits + HT is 2 bits seen 3 times so 6 bits Th is3 bits used 3 times so 9 bits + TT being3 bit used 3 times so 27 buts
3. 1-0 2-10 3-110 4-111 5-1110 6 -1111
4. 2.87
5. group 1,2 3,4 and 5,6 together
6. New entropy is now 1.1, which is an improvement
