Name: Andrew RubinettEID: ar37846CS Login: ar37846Email: arubinett@gmail.comLecture 171. Yes, any BLP system can be rewritten as a NI system, so it must comply.2. Neither subject could interfere with the other3. No, the policy describes the flow of information, but not the mechanisms for how the flow is implemented, so information cannot flow the wrong way4. A is low and B is highLecture 181. It describes more the goals of a system rather than the mechanisms for how those goals are achieved.2. The same as if only the following actions happened: l1, l2, l3,…, lk3. Most real systems involve many interferences, which makes it near impossible to completely prove that no interferences happen that shouldn’t.Lecture 191. If data is not correct, it can’t be used for anything productive.2. To ensure the separation of the creation of the software and the people using the software3. Separation of duty is when multiple subjects need to work together to complete an objective, where separation of function means that one subject cannot perform different functions on the same object.4. It creates a system of checks and balances.5. There is a high risk of collusion between subjects to taint the data.6. NYSE trends.Lecture 201. Newspaper articles in the WSJ have high integrity and low sensitivity. Horse racing handicaps are not reliable but are more sensitive.2. In rows 1 and 3, label 1 has a higher level and the same or more categories, so it dominates label 2. In row 2, the security level of label 1 is lower than the security level in label 2, but label 2 categories is a superset of label 1 categories, so neither label dominates the other.3. Subjects can only interfere with information at a lower or equal level of integrity.4. They have no relation to each other.Lecture 211. The same rules are applied, but in the opposite order.2. Neither Subj3 nor Obj3 dominate the other.3. NoLecture 221. Subjects cannot filter by integrity of information on their own.2. Not particularly, they have access to read anything but their integrity level is affected by anything they read below them.3. Yes, it assumes the subject has the good sense to know when information is low integrity and treat it appropriately.4. YesLecture 231. Somewhat, a confidentiality label SD must have an integrity label ID, but integrity level ID can be on roles without confidentiality label SD.2. To be able to move software from development to production, the label has to be changed, and so the system controller must be able to downgrade.3. No4. Some sort of weak tranquilityLecture 241. To ensure consistency of data between states.2. Account data, leads, opportunities, invoices.3. Message boards, store refreshments, flyers.4. Certification rules must hold after an operation is performed, while enforcement rules must hold for an operation to be performed.5. (Marketing Rep, Change product info, {Set of all products})Lecture 251. The information learned by working with AA could also help United, thereby making it a conflict of interest.2. Yes3. Microsoft, GM, Bank of America, Wells Fargo, Citicorp4. Objects are not categorized by security level, but rather groups, which must have exclusivity within the group.Lecture 261. It is easy to assign similar roles to users, and to give users the ability to act as a variety of roles.2. Authorized roles that are not active cannot be used to perform actions, and active roles must be a subset of the user’s set of authorized roles.3. Role authorization verifies that a user is allowed to act as the role they are attempting to act as, and transaction authorization verifies that the user is allowed to perform the transaction they are attempting to perform.4. Standard policies are much harder to scale towards a large-scale commercial company and much less flexible in terms of implementation.Lecture 271. It is expensive and usually unnecessary.2. Access Control List, Capability System, computing permissions on the flyLecture 281. The sender and receiver must agree on what values of the bit will represent “yes” and “no”.2. To know how much information can be sent through the channel.3. So the message will be able to convey a message.4. To make the channel as efficient as possible.5. 0 bits, since the receiver already knows the answer, no message will have to be sent.Lecture 291. n bits, 4 bits, 7 bits2. It is unknown how much information needs to be sent to reduce all uncertainty about the message. It matters greatly if there are 2 possibilities or 20 possibilities.3. 4 bits, there are 16 different possible permutations of 4 bits, with each permutation corresponding to one message.4. 8 bits5. There is usually not a predetermined set of possible messages that each party knows about, so messages usually have to represent one of a very large number of possible messages.Lecture 301. The first definition refers to a binary digit representing a 0 or a 1, while the second definition refers to a unit of information, or a number of those binary digits.2. 1=000  2=001  3=010  4=011  5=100  6=101  7=110  8=1113. 995 times out of 1000, the message only needs to be sent as 1 bit, hence 995. 5 times, the message needs to be 5 bits, hence (5*5).4. The most likely messages can be sent using a more efficient number of bits.5. 1=”one”  2=”two”  3=”three”  4=”four”6. It means that each message can be sent with the absolute least amount of data, which means the receiver likely has a pretty good idea of what the message will be and there isn’t much uncertainty that needs to be resolved.Lecture 311. “284662”2. 1=00  2=11  3=001  4=111  5=0101  6=010013. If a message can have multiple possible meanings, the receiver won’t know which meaning was meant to be sent, so the message doesn’t accomplish it’s goal of removing all ambiguity.4. If data is lost, part of a message may not be sent.5. It is not streaming, as it has pauses between each letter.Lecture 321. Log 8 = 3 bits2. -(4/5 x log(4/5) + 1/5 x log(1/5) = approx. 0.722 bits3. It can show the lower bound of how efficient an encoding can be.Lecture 331. The probability of each 2flip is just the probability of the first flip multiplied by the probability of the second flip.2. For each of the 9 expected HH 2flips, 1 bit is needed for 9 total bits. For each of the 3 expected HT 2flips, 2 bits are needed for 6 total bits. For each of the 3 expected TH 2flips, 3 bits are needed for 9 total bits. For the 1 expected TT flip, 3 bits are needed. 9+6+9+3=27 total bits needed.3. 1=000  2=001  3=010  4=011  5=100  6=1014. –(2(6/20 x log(6/20)) + 2(3/20 x log(3/20)) + 2(1/20 x log(1/20))) = approx. 2.295 bits5. 1=0  2=10  3=110  4=1110  5=11110  6=111116. My encoding using an average of 2.45 bits per symbol, whereas the naïve encoding uses an average of 3 bits per symbol.