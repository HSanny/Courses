Lecture 17
1. Yes, by definition a BLP system is a NI system.
All information flows in one direction.
2. These subjects can not communicate.
3. In a perfectly implemented NI policy, no. But most systems
are too complex to perfectly implement a NI policy.
4. A[L]->B[L], A[L]->B[H], A[H]->B[H]

Lecture 18
1. In most systems, subjects and objects will interfere and
need to so it is not 
2. L should only be able to see the L actions.
3. It would require to prove that for every subject/object that
they can only view what is at their level and below.

Lecture 19
1. Integrity is more important in commercial applications
where the credibility of information is imperative.
2. By purchasing the software, they are transferring risk to the 
company designing the software as opposed to taking it themselves
using freeware.
3. Seperation of duty distributes tasks needed to complete an action
to different people while seperation of function prohibits one 
person from doing multiple of those tasks.
4. Auditing makes sure that all actions are accounted for and allows
for the recognition of irregularities.
5. Making sure that different branches interact as little as possible
to reduce the negative impact on the integrity of data
6. Amazon.com would want to make sure that their purchase orders
are not compromised.

Lecture 20
1. Highly reliable and little sensitivity: 
	The Constitution of the United States of America
   Highly sensitive and little reliablility: 
	credit card information with online retailers
2. The level must be greater than or equal and the category must be
a superset of the other.
3.  Subjects can only interact with objects below their level of 
trustworthiness, this way the integrity of the system doesn't creep down
but up.
4. They are concerned about the opposite things. In an integrity policy,
you want information to flow down while in a confidentitiality policy 
that would be horrible.

Lecture 21
1. All you do is reverse the signs of BLP to get Biba.
2. Neither dominates the other because their categories are neither a
subset or superset of eachother.
3. In a BLP system, yes. Since Biba and BLP are duals you cannot pass 
both unless the subject and object have the same label and categories.

Lecture 22
1. They assume that if they access a higher object they will ruin it.
2. Not at all.
3. They assume that if they access a higher object they will use their
discretion with this new information knowing it is lower than their
trustworthiness.
4. Yes, well they assume they will use their discretion with the info.

Lecture 23
1. They are the equivalents of each other for confidentiality and 
integrity.
2. Someone has to move the software from development to production.
3. No.
4. Weak tranquility, it doesn't violate the 'spirit' of the system

Lecture 24
1. creating a commercial security policy
2. bank balances and checks
3. candy from the counter bowl
4. Certification deals with making sure the procedures are legal,
enforcement deals with making sure the users executing the procedures
are allowed to make said procedures
5. A bank teller allowed to withdraw money from the client's account

Lecture 25
1. They are competing companies and may know confidential information
that would help United or vice versa.
2. Yes because they are not competing.
3. Ford, Chrysler, GM, Bank of America, Wells Fargo, Citicorp
4. It ensure that conflicts of interest do not arise.

Lecture 26
1. You only have to assign each subject a role instead of multiple 
permissions. It's just easier, like making a method instead of rewriting
the same code over and over
2. authorized roles are what the subject is allowed to do, active roles
are what they are currently doing.
3. Role authorization makes sure the subject's active role is an
authorized role and transaction authorization makes sure the subject's
transactions are legal within their active role.
4. easier to administer in large organizations, RBAC recognizes that
subjects may have various functions within the organization and allows
for transfers much easier.

Lecture 27
1. Most subjects don't have access to most objects so a lot of the matrix
would be empty. You can store it implicitly and compute the APs on the
fly.
2. Access control list, capability-based system, on the fly with implicit
relationships

Lecture 28
1. the receiver and send must agree on an encoding scheme.
2. so they know how much is being sent/over how much time.
3. otherwise the receiver wont know what to do with the information
4. the receiver would be confused
5. 1, true or false bit.

Lecture 29
1. n bits, 4 bits, 7 bits, depends on receiver's level of uncertainty
2. if there is only two options, you only need one. if you don't know the
day or time it could be much larger
3. 4
4. 8
5. There is always uncertainty so you must do what is best given the 
circumstances.

Lecture 30
1. binary digit(discrete), quantity of information(continuous)
2. 	M0	000	|	M4	100
	M1	001	|	M5	101
	M2	010	|	M6	110
	M3	011	|	M7	111
3. Because since 10 has a 99.5% probability of occuring, you can reduce
bits by making its message flag a 0. Then the other 5 out of 1000 require
a 5 bit message or 5*5.
4. 	M0	111000
	M1	1001001
	M2	111010010
	M3	11101011010011
5. The information transfer bitrate would be the fastest it could be.

Lecture 31
1. 2
2. 	1	0
	2	01
	3	011
	4	0111
	5	01111
	6	011111
3. So the receiver can be sure that the message is correct
4. So the receiver gets the entire message
5. It is not streaming

Lecture 32
1.  h = -(log1/8) = log 8 = 3
2.  h = -(1/5log(1/5) + 4/5log(4/5)) = .723
3. Calculates the information content of an average symbol.

Lecture 33
1. Since heads is more probable, over half the time you flip twice you
get two heads. Since this pair is more probable denote it as a 0 and you
save bits.
2. You are saving a bits on double heads which happen most often which 
cancel out the bits you lose from the less likely TH and TT. 
3.	1	6/18	000		=18 bits			= 60 bits used
	2	6/18	001		=18 bits
	3	3/18	010		=9 bits
	4	3/18	011		=9 bits
	5	1/18	100		=3 bits
	6	1/18	101		=3 bits
4.
	h = -2(1/3log(1/3) + 1/6log(1/6) + 1/18log(1/18))
5.
	1	6/18	0		=6 bits				= 40 bits used
	2	6/18	10		=12 bits
	3	3/18	11		=6 bits
	4	3/18	110		=9 bits
	5	1/18	111		=3 bits
	6	1/18	1110	=4 bits
6. It makes the most likely outcomes use the least amount of bits since
they appear the most.