David Barrón (db25633)
CSf361 Young
Homework 2
L17
1.	No, in non-interference the interactions between subjects are non-transitive. 
2.	Neither should be able to interfere with each other, just themselves.
3.	No, that is the basis for an NI policy.
4.	A is low, B is high.
L18
1.	Ni policy is abstract and more difficult to prove.
2.	L would only be able to see its own actions, and what L sees after running alongside H is the same as if it were running by itself. 
3.	What a view of a system is varies from system to system. If you expand the view, then proving NI policy is impossible.
L19
1.	When addressing integrity, one has to determine who has write access to data, how to separate and organize data, and how one would detect or correct erroneous data.
2.	It’s easier to tell who has been writing the software. You don’t want a teller at a bank writing the banking software and expose yourself to potential fraud. 
3.	In separation of duty, different subjects must be involved to complete a task, but in separation of function one subject cannot complete complementary tasks in a more broad process.
4.	If we are able to audit our information, we can catch errors and reverse them or at least cut our losses and stop them from happening in the future. 
5.	Lipner says users should not write their own software, developers test using contrived data, moving from development to production requires a special process, and managers should have a way to access the system state and logs to facilitate data audits. 
6.	An online folder containing all of a classes’ homework assignments. It’s really not a problem if anyone in particular is able to read the assignments, but it would be a problem if a student could go in and change other student’s submissions to bring down the class average. 
L20
1.	High reliability, little sensitivity: A Wikipedia page covering some scientific topic. Virtually anyone can edit, but it also means many people can proofread and correct any false information. Low Reliability, high sensitivity: A group of CS students working on a project. The data on a document may not be entirely correct and change often, but only those students should be able to modify the document.
2.	Physics expert dominates the physics student (can provide corrections on assignemnts). A novice in physics and art cannot dominate a physics expert, he’s just a novice. An art student dominates a novice, may be the relationship between an older brother and a toddler. 
3.	Lower, less reliable data should not flow up into more reliable objects.
4.	They’re orthogonal issues because a change in one does not mean a change in the other will take place.  
L21
1.	When you can read in one model, you can write in the other instead, and vice-versa. 
2.	Subject does not dominate object, so it cannot read, and the Object isn’t at a lower level to be able to be written to.
3.	No, both confidentiality and integrity requirements must be met for a subject to have access. 
L22
1.	A subject can only write to subject it dominates, and if the subject reads low level data, the subject is pulled down to that level as well.
2.	No, reading bad information (low level) can lead to them being corrupted.
3.	Yes, in Ring policy the subject is more trustworthy and its level is not knocked down to lower levels after low reads because it can filter information being taken in.
4.	Yes, see above
L23
1.	SD is a confidentiality category, and ID is an integrity category.
2.	To be able to move from development to production.
3.	No, just labels.
4.	Weak Tranquility.
L24
1.	To be able to apply a security metapolicy to commercial settings, as the BLP + Biba model is better fitted for a military setting.
2.	Bank Accounts, Academic Records.
3.	 Can’t really think of one…
4.	Certification determines the integrity of a CDI, while enforcement maintains the integrity of the CDI.
5.	(individual person, withdraw $50,{personal bank accounts})
L25
1.	AA is a competitor to UA, and confidential information may flow over to UA which may give them a competitive edge over AA.
2.	Yes, they’re in different conflicting classes.
3.	Only files from GM, McD, and any other files from different conflict classes.
4.	Chinese Wall addresses  conflict of interests without much regard to levels.
L26
1.	You don’t have to keep track of what permissions an individual subject has.
2.	Authorized roles describe what a subject may be able to do now or in the future and active roles describe what the subject is able to only do now.
3.	RAuthorization determines if a subject can take on a certain role, but TAuthorization checks a transaction against the active role.
4.	Harder to administer, more complex when dealing with big organizations, and subjects must change identities to transfer between roles.
L27
1.	 ACMs can be very big, and most subjects don’t have access to objects.
2.	ACL, Capability based system, and computation on the fly can be done with ardware or software, but can also be expensive.
L28
1.	Receiver must know which is yes and which is no.
2.	To determine the most efficient mechanism for sending information.
3.	To be able to send information more securely and then be able to interpret once receiver.
4.	Maybe sending the data is expensive, or worse, the data is intercepted and copied and now someone else has your data.
5.	1 bit, bc binary.
L29
1.	N bit, 4 bits, 7 bits, depends on the encoding.
2.	Because it depends on the agreed upon encoding scheme. It could be receiving ascii values, or it could already know the message and could be receiving a number to specify which message was sent. 
3.	4, because 2^4 = 16.
4.	Again, depends. How are the messages encoded? Receiver’s level of uncertainty?
5.	We usually don’t know how much information will be sent. Messages can vary in length and content.
L30
1.	 Bit can mean 1 or 0 in binary (discrete), or generally some quantity of information (continuous). 
2.	Using 3 bits, number the 8 possible messages from 000 to 111.
3.	Because 99.5% of the time message 10 is sent, then 5 bits are required to send the other 5 messages.
4.	You can assign fewer bits to encode the more likely messages. 
5.	Just add more bits to the encoding. No real reason neded.
6.	It implies that we know something about the message sent before it is sent.
L31
1.	“2468”
2.	0,10,110,1110,11110,111110,11111
3.	You want to know exactly what message you are getting, otherwise what’s the point.
4.	So you don’t lose information.
5.	It’s not streaming, there are breaks.
L32
1.	–(1/8)(SUM(log2(1/8))) = -(1/8)*8*(-3) = 3
2.	–((4/5)*(log2(4/5) + (1/5)*( log2(1/5)) = 0.7219
3.	It sets the lower bound of efficiency.
L33
1.	Basic probability 101. Multiply probabilities.
2.	By probability, you can get a count of how many times you’d get a result, then you can assign bits to represent each depending on the probability, then just add the bits for all the probabilities.
3.	000 to 101
4.	About 3.
5.	.
6.	.We use less bits for the more probable outcomes. 
