me: Hanah Luong
EID: hkl289
CS login: hanahx3
Email: hanah.luong@utexas.edu

LECTURE 17
1. Yes, you can take any MLS policy like BLP and turn it into NI
2. They would not be able to interfere each other
3. No, they are bit suppose to; the purpose of NI is preventing this
4.one, information flows up and never down

LECTURE 18
1. They reflect the confidentiality metapolicy, oppose to the actual rules L->H
2. only the 1 actions 
	l2, l3, lk, ... //the same as it viewed before the run
3. interfeaces are very common in real systems, and are benign. Most computers use low level attributes

LECTURE 19
1. who can modify/ supply data 
2. we could have trust issues with a free version's creator
3. -seperation of duty: more than one subject needs to be involved to complete a critcal task.
	-seperation of functions: no one subject has control of two critical task
4. to record transactions and have the ability to go back later and find the culpret of any
corrupted data or task.
5. programmers should not program using actual data
6. A bank

LECTURE 20
1. wikipedia or a police informant, someone who keeps his identity secret but you trust his information.
2. -the expert can write to the student but not the other way around
	- row 2 neither
	- student of art dominates the novice 
3. Don't want information to flow up in integrity
4. They don't really relate to one another, you can have one higher label and it won't effect the other

LECTURE 21
1. The same rules are applied but in the opposite order; it flows n the opposite direction but with the same simple security model
2. they do not have any access to those
3. no

LECTURE 22
1. They all tend to sink down to lower levels
2. Not really; if you read down you are moved down
3.The ring policy assumes it can filter out bad information
4. no; they are alll considered potentially

LECTURE 23
1. Yes they are both applied by the application developers
2. We need the ability to move software from developers to production
3. No, they should not be able to, but in some cases this is allowed "down-grade"
4. The weak tranquility property hyybrid of BLP and Biba's strict policy

LECTURE 24
1. -authentication
	-audit
	-well-formed transaction
	-seperation of duty
2. bank balance, checks
3. candy from free bowl
4. certification; makes things certifiable and enforcement rules keep certification rules in check
5. When you return an item, the cashier needs the managers key to refund your money

LECTURE 25
1. They are both of the same sort of company and a member could bring back sensitive information to the new company
2. Yes, Microsoft and GM are nt in the same conflict class
3. Company files of another conflict class, but we shouldn't really be able to view other companies within their conflict class
4. The *property in chinese wall is more complicated for writes. Designed to address conflicts of interest

LECTURE 26
1. In large organizations, it is a lot more organized to assign permissions by roles rather than subjects
2. active roles is a subset of authorized roles
3. (role authorization): must be of that roles to do any actions
	(transaction authorization): must be actions you are authorized to do as that role to do them
4. standard access control policies require excess overhead compared to RBAC

LECTURE 27
1. because the subject can change all the time, like a UNIX system
2. (1) store them with the objects (ACL)
	(2) store them with the subjects; capabilities based sys.
	-hardware: each word had a capatibilty bit
	-softwaare: store in memory and OS controls them

LECTURE 28
1. The distingusishing of a yes-bit and a no-bit
2. ex. we can find covert channels by bandwidth so its nice to be able to see the size of messages.
3. at bare minimum the reciebeer should know how to interpret messages. otherwise no commucation will occur. 
4. because you want to be able to quantify messages.
5. 1 bit; either a yes or a no

LECTURE 29
1. - n bits
	- 4 bits, the binary form of 10 digits, but technincally 3.something
	- 7 bits
2. 8^21: is too much, but to find out exactly how much can be difficult
3. 4 bit string; you can divide the info of 2^4 4 times before getting to 1 msg. a binary search tree of depth 4.
4. 2^8 = 256; 8 bits will give us 256 msg.
5. you have to be able to know exactly how many messages there are and previously decide what value represents what message.

LECTURE 30
1. - a binary digit (discrete) 
	- a quantity of information content (coninuous)
2. 3 bits
3. 1000 messages sent * the probabability of msg 10 (99.5) + the 5 bits it takes to represent the other 15 messages * the 5 bits.
4. You can give the more common msg a smaller bit representation; gets us closer to entropy
5. use long codes for each msg, oppose to the minimal number of bits it takes to represent the msg
6. You can get arbritrarily close to the optimal encoding, but at some point you will be approching infinity, similar to entropy

LECTURE 31
1. "12576463498734"
2. 1:1 2:01 3:33 4:001 5:101 6: 011 ; This is indistinguishable when the binary values are bunched together
3. You only want one way of reading something, so it can't be wrong
4. so yo can retrieve it lost/enable recovery
5. it is not streamingl it has breaks between each letter

LECTURE 32
1. -(LOG2(1/8))
2. -(1/5LOG2(1/5) + 4/5LOG2(4/5))
3. entropy measures the average information content of symbols in the language, which helps us jkeep track of information storage/ flow; AND also sets a lower limit enociding efficiency

LECTURE 33
1. You multiply the induvidual probabilities if H and T to get he probability of the combined variables.
2.YOu take the nominators of all the probabilities and multiply that with the number of bits in the code for each of those  and then add them all up to get 27 bits
3. 6 possibiities; 3 bits necessary
4. (6/20log6/20)2 + (3/20log3/20)2 + (1/20log1/20)2
5. send a code after 2 rolls occur
6. you send the code less often by grouping them




