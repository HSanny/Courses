Name: Jeremy Bouzigard
EID: jdb2999
CS Login: jeremy
Email: jbouzigard@gmail.com

CS361 Questions Week 2

--------------------

Lecture 17

1. Yes, it complies with non-interference because non-interference is more general than BLP and other MLS policies. Any MLS policy can be written in terms of non-interference.

2. Neither subject dominates, so either subject can interfere with the other.

3. If the system fully satisfies non-interference, no covert channels can exist. However, the difficulty is in creating a system that fully satisfies the requirements of non-interference.

4. B must be "high" and A must be "low."

--------------------

Lecture 18

1. Because NI as a policy is very abstract. NI policies say what subjects can interfere with what others, in total almost a restatement of the metapolicy, but does not explicitly state how to achieve these goals.

2. L's view of the given actions is exactly the same as the following actions: l1, l2, l3, ..., lk.

3. It is difficult to prove NI for realistic systems because of the complexity of such systems, where interferences are very common and most involve low-level system attributes.

--------------------

Lecture 19

1. Integrity of the subject that is writing is important. For example, The New York Times would likely prefer a reporter applicant with experience from The Washington Post than one with experience from The National Enquirer. Integrity of the object being read is important as well. For example, you are more likely to believe a story from The New York Times than one from The National Enquirer.

2. The integrity of the commercial software is likely to be greater than the integrity of the freeware. Possible reasons for this include: 1) the performance of the individuals who wrote the commercial software is evaluated by employers, which may give those individuals incentive to perform well and increase their integrity; 2) the commercial software likely underwent more rigorous trial phases and testing, increasing its integrity.

3. Separation of duty is the principle that integrity of a critical functions when two or more different subjects are both required to complete it. The idea is that multiple subjects are more reliable than one.
Separation of function is the principle that integrity increases when a single subject is not allowed to complete complementary roles within a critical process. The idea is to prevent any conflict of interest that may arise from one subject completing both tasks.

4. Auditing is important so that if integrity is compromised, it is possible to hold the responsible party accountable and recover from the integrity breach.

5. Integrity is particularly important in a commercial setting, where consumers expect a high level of performance from software but the expected integrity can be undermined by just a single party. Lipner applies multiple and redundant layers of the principle of integrity, including separation of duty, separation of function, and auditing, to increase integrity.

6. In the bank setting, it is important that the confidentiality of customer information and account balances is protected, but it is even more important to maintain the integrity of that information so that account balances cannot be arbitrarily changed and possibly put the bank out of business.

--------------------

Lecture 20

1. The Encyclopedia Britannica is a highly reliable source of information with little sensitivity. An anonymous tip that only a general or above has access to is very unreliable, but highly sensitive.

2. 
- (Expert: {Physics}) dominates (Student: {Physics}) because Expert is a higher hierachival level of trustworthiness than Student and {Physics} is a superset of itself.
- (Novice: {Physics, Art}) does not dominate (Expert: {Physics}) because Novice is a lower hierarchical level of trustworthiness than Expert. But (Expert: {Physics}) does not dominate because {Physics} is not a superset of {Physics, Art}.
- (Student: {Art}) dominates (Novice: {}) because Student is a higher hierachival level of trustworthiness than Novice and {Art} is a superset of {}.

3. The NI policy for integrity is that lower levels of integrity cannot interfere with higher levels of integrity.

4. It means to say that the two are related in that they are both aspects of security, but function completely independent of each other.

--------------------

Lecture 21

1. Biba Integrity is called the "dual" of the BLP model because it is its inverse. The metapolicy of BLP is to protect the confidentiality of information by restricting the flow of information upward, the metapolicy of Biba is to protect the integrity of information by restricting the flow of information downward.

2. Because the subject does not dominate the object and the object does not dominate the subject. Therefore, by Strict Integrity the subject can neither read nor write to the object.

3. No, access is allowed only if the subject satisfies both the confidentiality requirements and the integrity requirements.

--------------------

Lecture 22

1. The assumption about subjects in Biba's low watermark policy is that they are unable to distinguish good information from bad information and thus are tainted by reading bad information.

2. No, subjects are not considered trustworthy in the Biba's low watermark policy. If they read information of a lower integrity level, their level will drop to that level of the information they read.

3. Unlike the LWM policy, the Ring policy assumes that subjects can filter good information from bad information.

4. Yes, the subjects are considered trustworthy. They are able to read information of any integrity level and trusted to distinguish the good information from the bad information.

--------------------

Lecture 23

1. Yes, they both refer to categories of programs that are under development. The SD category helps protect confidentiality and the ID category helps protect integrity.

2. Because in a commercial environment, it must be possible to move software from development to production. This is equivalent to changing the label of an object, which BLP and Biba Integrity do not allow for, hence the need for a special downgrade action.

3. Yes, because their integrity label dominates all other labels.

4. Weak tranquility underlies the downgrade ability; ideally, all downgrades will preserve the metapolicy of BLP and Biba Integrity.

--------------------

Lecture 24

1. The purpose is to identify the fundamental concerns in the specific domain of commercial security. By doing so, it is possible to formulate a metapolicy to properly address these concerns.

2. CDIs may include revenue, inventory, balance owed to employees, customer information.

3. UDIs may include weekly flyers and pamphlets.

4. Certification rules are aimed at monitoring the state of integrity and enforcement rules are aimed at preserving the integrity of the state.

5. In a retail setting, only certain employees may be allowed to complete a customer transaction, and the cash drawer only opens if the customer needs change.

--------------------

Lecture 25

1. Because those two companies are in the same conflict class. That is, the two companies are competitors and for one company to have access to the other's files would grant the reading company's a competitive advantage.

2. Yes, because Microsoft is not in a conflict class with GM.

3. For the previous example, both GM's and Microsoft's files are available for access.

4. The BLP model is a very general model of security designed to address the broad goal of computer security. The Chinese Wall Policy is designed to address a very specific concern in commercial security, namely the conflicts of interest by a consultant or contractor.

--------------------

Lecture 26

1. It is much easier to manage than the alternative. It is easier to administer, recognizes that a subject may have many rules in an organization, and allows for a subject to change between roles without having to change identities.

2. Authorized roles encompass all roles that a subject may need to take on, but active roles are a subset of authorized roles and include the roles that a subject is currently assuming.

3. Role authorization is the idea that a subject's active role must be a subset of the authorized rules that the subject may assume, whereas transaction authorization is the idea that any transaction a subject executes must be authorized for one of the subject's active roles.

4. In comparison to RBAC, standard access control policies are harder to administer because permissions must be assigned to the individual, have only a limited number of possible actions, restrict subjects to a rigid subset of possible actions, and do not accomodate a subject's need to transition between roles in an organization.

--------------------

Lecture 27

1. Because it is difficult and expensive to store and maintain a large sparse matrix of this sort, particularly when there are easier and more adapatable alternatives.

2. 
  - Storing permissions with objects: access control list (ACL)
  - Storing permissions with subjects: capability-based system.
  - Computing permissions on the fly: maintain set of rules to compute access permissions based on attributes of subjects and objects, such as in BLP

--------------------

Lecture 28

1. The sender and the receiver must have some shared knowledge, at least including an agreed encoding scheme.

2. Because it is useful to know how much information can be transmitted in a message. For example, knowing the bandwidth of a covert channel is useful to decide whether the channel is small enough to ignore or represents a threat worth addressing.

3. Because the receiver must know how to interpret information sent from the sender. If the receiver has no way to interpret information from the sender, then it does not matter how much information is sent, the receiver will have no way of knowing what it means.

4. Because it is not an efficient way to communicate. If the sender is sending more information than necessary, then it is occupying bandwidth that could otherwise be used to send useful information.

5. If the sender wants to transmit enough data, but no more, to resolve entirely the receiver's uncertainty, and the receiver already knows the answer to a question, then the sender must send 0 bits of information content because the receiver's uncertainty is resolved before the transmission is ever sent.

--------------------

Lecture 29

1.
- n-bit binary number: n-bits
- single decimal digit: 4 bits
- two digit decimal number: 7 bits

2. Beacuse the amount of information that must be sent increases with the uncertainty as to what message will actually be sent. For example, if the receiver knows that the attack is either at dawn or dusk (and has an agreed encoding with the sender), then the sender need send only one bit of information to signify either "dawn" or "dusk." But if the receiver knows only the day of the attack, then the sender needs to send enough information to explicitly state the attack is at dawn, and so on. The less certain the receiver, the more information the sender must send to remove the uncertainty.

3. Four bits. With every bit sent, the number of possible messages is reduced by half. If the receiver is completely uncertain, one bit reduces possible messages to eight, two bits reduces to four possible messages, three bits to two possible messages, and four bits to one possible message.

4. Eight bits.

5. Because there are few cases where there is little enough uncertainty to agree upon an exact set of possible messages.

--------------------

Lecture 30
1. One connotation refers to a discrete binary digit, while the other refers to a quantity of continous information.

2. 
Message 0: 000
Message 1: 001
Message 2: 010
Message 3: 011
Message 4: 100
Message 5: 101
Message 6: 110
Message 7: 111

3. There are 1000 messages. 995 messages will be 10, which requires a transmission of 1 bit. The remaining 5 messages will be other messages and any other message requires 5 bits to transmit. 
(995 * 1) + (5 * 5) = 995 + (5 * 5)

4. Because if you know the prior probabilities of messages, then you can design a more targeted encoding around the common case rather than a more general encoding that must handle all messages equally.

5. Just append a 1 to the front of every code in the naive case. This extra bit will serve no purpose but increase the cost of every message by 1 bit.

6. If it is possible to find an optimal encoding, then you can maximize bandwidth and send more messages more cheaply than with other encodings.

--------------------

Lecture 31

1. "4246264268"

2. 
1: 1
2: 10
3: 11
4: 100
5: 101
6: 110

3. Because if there are multiple possible decodings, there is no way for the receiver to be sure of the sender's intent and thereby remove uncertainty.

4. Because if an encoding is not lossless, some of the information from the sender is lost when the message reaches the receiver.

5. Because Morse code is not uniquely decodable with streaming. Either there is a break in the encoding, which violates the streaming requirement, or the message violates the requirement of being uniquely decodable.

--------------------

Lecture 32

1. h = - log(1/8) = log8 = ~ 2.079

2. h= - (4/5 * log(4/5) + 1/5 * log(1/5)) = ~0.217

3. Entropy is important because it gives the lower bound for the efficiency of an encoding, which gives us a clear goal for the optimal encoding.

--------------------

Lecture 33

1. The idea is that to come closer to the optimal encoding it's better to transmit information about pairs of flips rather than single flips. This means an encoding must reflect four possible pairs of flips. The odds for any flip are independent, so finding the odds for a given pair of flips is a matter of multiplying the probability of the first flip by the probability of the second.
HH = (3/4) * (3/4) = 9/16
HT = (3/4) * (1/4) = 3/16
TH = (1/4) * (3/4) = 3/16
TT = (1/4) * (1/4) = 1/16

2. The total number of expected bits is the expected count of each combination multiplied by the number of bits in its respective code.
HH = 9 * 1 = 9, HT = 3 * 2 = 6, TH = 3 * 3 = 9, TT = 1 * 3 = 3
Total = 9 + 6 + 9 + 3 = 27

3.
Result | Probability | Code | Bits
------------------------------
1      | 6/20        | 000  | 18 
2      | 6/20        | 001  | 18
3      | 3/20        | 010  | 9
4      | 3/20        | 011  | 9
5      | 1/20        | 100  | 3
6      | 1/20        | 101  | 3
Total bits: 60

4. - [ (6/20) * log(6/20) + (6/20) * log(6/20) 
     + (3/20) * log(3/20) + (3/20) * log(3/20)
     + (1/20) * log(1/20) + (1/20) * log(1/20) ]
  = ~ 2.295

5.
Result | Probability | Code  | Bits
------------------------------------
1      | 6/20        | 0     | 6
2      | 6/20        | 10    | 12
3      | 3/20        | 110   | 9
4      | 3/20        | 1110  | 12
5      | 1/20        | 11110 | 5
6      | 1/20        | 11111 | 5
Total bits: 49

6. For the naive encoding, efficiency is 60 bits/20 rolls = 3 bits/roll.
For the second encoding, efficiency is 49 bits/20 rolls = 2.45 bits/roll.
Therefore, the seconding encoding is more efficient and closer to the entropy of the language.