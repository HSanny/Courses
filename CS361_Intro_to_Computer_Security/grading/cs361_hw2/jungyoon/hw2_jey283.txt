Name: JUNG YOON
EID: JEY283
CS Login: jungyoon	
Email: jungyoon@utexas.edu

****************************
****************************
NOTE TO TA: This isn't late! What happened was that I got confused about what the professor had said to us about a new turnin command not working or something and so I sent the assignment straight to his e-mail instead. He asked me to try submitting it via turnin. Thanks!
****************************
****************************

→ LECTURE 17:
1. If a computer system complies with the BLP model, does it necessarily comply with non-interference? Why or why not?
→No, the BLP system allows for covert channels but the NI policy doesn't. 

2. What would the NI policy be for a BLP system with subjects: A at (Secret: Crypto), B at (Secret: Nuclear)?
→ Neither subjects dominate each other so the policy would be that A dominates itself and that B dominates itself (reflexive) 

3. Can covert channels exist in an NI policy? Why or why not?
→No, the NI policy is very strict and its purpose is to restrict interferences between subjects, meaning that a covert channel can not exist. Assuming the NI policy is strong (the view is very inclusive) then there should be no methods of sending information in violation of the policy, including covert channels 

4. If the NI policy is A− > B, in a BLP system what combinations of the levels “high” and “low” could A and B have?
→ A is low and B is high. 

-------------------------------
→ LECTURE 18:
1. Why do NI policies better resemble metapolicies than policies? 
→ The NI policy closely mimics the confidentiality metapolicy. It's very much general/abstract and it's not specific enough to be like policies. 

2. What would be L’s view of the following actions: h1, l1, h2, h3, . . . , hj, l2, l3, . . . , lk 
→ L can only see the l1, ...l2, l3, lk. There's nothing h can do that is visible to L. 

3. What is difﬁcult about proving NI for realistic systems?
→ Realistic systems have too many potential inferences to actually prove NI. 

-------------------------------
→ LECTURE 19:

1. Explain the importance of integrity in various contexts.
→In a real life setting, you want to know which newspaper to go for credibile news. In a commercial setting, you want to make sure that your product is free of human errors (i.e. dividing up tasks in the programming world).  

2. Why would a company or individual opt to purchase commercial software rather than download a similar, freely available version?
→Because of the commercial software's integrity. That is, the commercial software is more trustworthy because of its reputation and value. Something that has market value must be trustworthy. 

3. Explain the difference between separation of duty and separation of function.
→ Separation of duty is more like splitting up a function among subjects whereas separation of function is like not allowing a single subject to perform more than one function.

4. What is the importance of auditing in integrity contexts?
→ If something bad does happen then you can roll back and assign responsibility / take care of whatever the problem was. 

5. What are the underlying ideas that raise the integrity concerns of Lipner?
→People inherently make mistakes and that could potentially be a huge integrity problem. You have to protect the system against that. 

6. Name a common scenario where integrity would be more important than confidentiality.
→Generally in the commercial enviorment, perhaps at Apple when they are building a new iOS system.


-------------------------------
→ LECTURE 20:
1. Give examples of information that is highly reliable with little sensitivity and information that is not so highly reliable but with greater sensitivity.
→High reliability with little sensitivity: The President said that he wants us to have a nice day. Low reliability with high sensitivity: A rumor is going around that Al Qaeda is still alive and that ISIS is just a ruse. 

2. Explain the dominates relationships for each row in the table on slide 4.
→First row: Expert > Student and Physics is a superset of Physics so L1 dominates L2. Second row: Novice < Expert so L1 does not dominate L2. Third row: Student > Novice and the art is a superset of empty set so L1 dominates L2.  

3. Construct the NI policy for the integrity metapolicy.
→Information can only flow up. That is, low data shouldn't be able to taint high data. High subjects can't read down and they can't write up. 

4. What does it mean that confidentiality and integrity are “orthogonal issues?”
→It means that they have nothing to do with eachother. That is, their confidentiality label and their integrity label should be separate from each other.



-------------------------------
→ LECTURE 21:
1. Why is Biba Integrity called the “dual” of the BLP model?
→The biba integrity policy is just the BLP with a change in direction of the arrows; it's exactly the "dual" of the BLP model. 

2. Why in the ACM on slide 5 is the entry for Subj3 - Obj3 empty?
→Though they have the same integrity level, neither of the sets is a superset of the other so neither R nor W can take place.

3. If a subject satisfies confidentiality requirements but fails integrity requirements of an object, can the subject access the object?
→No, both rules need to be met to gain access, though the confidentiality labels and the integrity labels are separate entities.  


-------------------------------
→ LECTURE 22:
1. What is the assumption about subjects in Biba’s low water mark policy?
→The subjects are not trustworthy and can be corrupted "easily", just by reading corrupted information.  

2. Are the subjects considered trustworthy?
→ He is not giving much credit to the subject. He's saying that if a subject accidentally reads a corrupted information then that subject would also be corrupted and that subject's integrity level should move down.

3. Does the Ring policy make some assumption about the subject that the LWM policy does not?
→The subjects have enough common sense to filter out bad information.

4. Are the subjects considered trustworthy?
→In this case, yes. They are able to read from any object so we are assuming that these subjects are trustworthy and that they know how to filter out bad information. 


-------------------------------
→ LECTURE 23:
1. Are the SD and ID categories in Lipner’s model related to each other?
→ No, they are separate from each other. SD is for confidentiality and ID is for integrity. 

2. Why is it necessary for system controllers to have to ability to downgrade?
→We need to downgrade in order to give the ability of using production software to system programmers. The BLP rules and the Biba Strict rules don't allow for that so we need to create this hybrid to allow for downgrades. 

3. Can system controllers modify development code/test data?
→No, they can read but not modify. 

4. What form of tranquility underlies the downgrade ability?
→Weak tranquility underlies the downgrade ability because it allows for change in labels as long as it doesn't go against the "spirit" of either BLP or Biba Strict. 


-------------------------------
→ LECTURE 24:
1. What is the purpose of the four fundamental concerns of Clark and Wilson?
→Consistency among the components of the system state.

2. What are some possible examples of CDIs in a commercial setting?
→In terms of banking, bank balances and checks. 

3. What are some possible examples of UDIs in a commercial setting?
→In terms of banking, candy from a candy bowl at the bank and the pen you use to sign a check. 

4. What is the difference between certification and enforcement rules?
→Certification: given a static state, does it meet all the invariants; making sure that you're in a good state. Enforcement: about operations on a state; is a good state maintained. Certification is about meeting requirements whereas Enforcement is keeping those requirements. 

5. Give an example of a permission in a commercial setting.
→In terms of banking, (banker Amy, validate,{checks, money orders}). That is, banker Amy can validate checks and money orders.


-------------------------------
→ LECTURE 25:
1. Why would a consultant hired by American Airlines potentially have a breach of confidentiality if also hired by United Airlines?
→The consultant could give information to United Airlines about American Airlines, both intentionally and inadvertently.

2. In the example conflict classes, if you accessed a file from GM, then subsequently accessed a file from Microsoft, will you then be able to access another file from GM?
→Yes, you can access multiple files in a single conflict class, given that it's from the same company. 

3. Following the previous question, what companies’ files are available for access according to the simple security rule?
→For the same subject in the previous question, the subject would be able to access GM, Microsoft, and one of the three: Bank of Amerca, Wells Fargo, and Citicorp. 

4. What differences separate the Chinese Wall policy from the BLP model?
→The Chinese Wall policy is specifically designed to address a specific concern: conflicsts of interest by a consultant or contractor. The BLP model is very general, though they are both access control policies. 


-------------------------------
→ LECTURE 26:
1. What benefits are there in associating permissions with roles, rather than subjects?
→ It's much easier to administer; it is more real-world friendly in that you don’t have to litearlly assign specific permissions to every single worker at a bank (for example).

2. What is the difference between authorized roles and active roles?
→Authorized roles are the set of roles you are allowed to fill whereas active roles are the ones you are currently filling. Authorized roles are a superset of active roles. 

3. What is the difference between role authorization and transaction authorization?
→Role authorization is making sure that a subject's active roles are in its set of authorized roles whereas transaction authorization makes it so that the subject's transactions have to be authorized by one of its active roles.

4. What disadvantages do standard access control policies have when compared to RBAC?
→It's much easier to administer RBAC and much more flexible than the standard access control policies. Also, permissions are more appropriate to each different organization with the RBAC. Standard access control policies are more confining. 


-------------------------------
→ LECTURE 27:
1. Why would one not want to build an explicit ACM for an access control system?
→Because in realistic systems, most subjects don't have access to most objects. It would be a waste of time to build an explicit, giant ACM. 

2. Name, in order, the ACM alternatives for storing permissions with objects, storing permissions with subjects and computing permissions on the fly.
→Storing permissions of objects: access control list. Stroing permissions with subjects: capability-based system. Computing permissions on the fly: you just compute them on the fly using the various rules we have learned thus far (i.e. simple security and *-property). That is, you maintain a set of rules to compute access permissions “on the ﬂy” based on attributes of subjects and objects. 2 Store the permissions with objects. This is called


-------------------------------
→ LECTURE 28:
1. What must be true for the receiver to interpret the answer to a “yes” or “no" question?
→The sender has an answer. The receiver belives that the sender has an answer. There must be a channel between the sender and the receiver. The send and receiver have to have some shared knowledge, including an agreed encoding scheme.

2. Why would one want to quantify the information content of a message?
→It affects communication, hardware design, protocol designs, etc. You want to know how much information can be pushed through a channel to get it to work efficiently. 

3. Why must the sender and receiver have some shared knowledge and an agreed encoding scheme?
→If the sender and receiver don't have an agreed encoding scheme, the sender can send all the data it wants to the receiver but the receiver won't know what to do with it; the receiver will still be in the dark. 

4. Why wouldn’t the sender want to transmit more data than the receiver needs to resolve uncertainty?
→The passage of information should be as efficient as possible. Sending more than necessary will clog up the system and confuse the receiver. 

5. If the receiver knows the answer to a question will be “yes,” how many bits of data quantify the information content? Explain.
→There are only 2 answers possible so you only need 1 bit, 1 and 0 representing yes and no. Of course, the receiver and the sender have to be aware of the encoding scheme.  


-------------------------------
→ LECTURE 29:

1. How much information is contained in each of the first three messages from slide 2?
→n-bits, 4 bits, 7 bits, and 22*8 bits since there are 22 chars and each char is 8 bits long for the last one, assuming that the sender and reciever don't have an agreed upon encoding scheme.

2. Why does the amound of information contained in “The attack is at dawn” depend on the receiver’s level of uncertainty?
→Should the reciever and sender have an agreed upon encoding scheme, the message could be contained in less bits (i.e. it would be 4 bits if there was only 16 possible times; it would be 1 bit if the attack could only be at dawn or dusk). Assuming that they don't have an ecoding scheme, it would be 22*8 bits of information, which is far from efficient. It all depends on the reciever's level of uncertainty.

3. How many bits of information must be transmitted for a sender to send one of exactly 16 messages? Why?
→4. There are exactly 16 combinations of 1 ands 0s with 4 bits of code. 

4. How much information content is contained in a message from a space of 256 messages?
→8 bits. Log base 2(256) = 8.  

5. Explain why very few circumstances are ideal, in terms of sending information content.
→Only in an ideal situation could you reduce certainty in half with each bit transmitted. However, that rarely happens in the real world. You can very well get cases where the reciever doesn't know how many message possibilities there are.  


-------------------------------
→ LECTURE 30:

1. Explain the difference between the two connotations of the term “bit.”
→In a discrete setting, it is a binary digit, meaning a 0 or a 1. In a continuous setting, we're measureing the quantity of information. 

2. Construct the naive encoding for 8 possible messages.
→M1 = 000; M2 = 001; M3 = 010; M4 = 011; M5 = 100; M6 = 101; M7 = 110; M8 = 111.

3. Explain why the encoding on slide 5 takes 995 + (5 * 5) bits.
→995 times out of 1000, the message will be 0, meaning that it can be represented by 1 bit, which is where the 995 comes from since 995 * 1 = 995. 5 times out of 1000, the message will be a 5-bit encoding, meaning that it would be 5*5. Putting these together, the encoding takes 995+*5*5) = 1020 bits or 1.02 bits per message.

4. How can knowing the prior probabilities of messages lead to amore efficient encoding?
→You can come with an encoding that makes it more efficient to transmit the more probable messages. For example, let's say that we have 2 messages that come up 99.5% of the time out of 20 total messages. Then, we could make a separate encoding for the 2 messages (i.e. 1 bit, 1 for the first message and 0 for the second message). This would make ecoding much more efficient.

5. Construct an encoding for 4 possible messages that is worse than the naïve encoding.
→M1 = 11111111; M2 = 00001111; M3 = 11110000; M4 = 11111111;

6. What are some implications if it is possible to find an optimal encoding?
→It has to be the most efficient, the best possible encoding that we can possibly have. 


-------------------------------
→ LECTURE 31:

1. Name a string in the language consisting of positive, even numbers.
→Drawing from a sack with balls labeled with positive, even numbers ranging from 2 to 8. In this case, a string might be: 2684468222486624.

2. Construct a non-prefix-free encoding for the possible rolls of a 6-sided die.
→ Using naïve encoding: 1: 0, 2: 1, 3: 10, 4: 11, 5: 110, 6: 101.

3. Why is it necessary for an encoding to be uniquely decodable?
→ So that there aren't multiple ways in which the system could decode the encryption. You want to be as efficient as possible while being as clear as possible. 

4. Why is a lossless encoding scheme desirable?
→We want to be able to send the complete encoding so that the reciever gets the whole information; there's no loss of information. 

5. Why doesn’t Morse code satisfy our criteria for encodings?
→If you have three dots in a row, how do you kno if it's one S or three E's? We can't so it doesn't satisfy our criteria for encodings. 


-------------------------------
→ LECTURE 32:

1. Calculate the entropy of an 8-sided, fair die (all outcomes are equally likely).
→Entropy = - (8 * (1/8 log (1/8)), given that each side has a 1/8 probability of being landed on. 

2. If an unbalanced coin is 4 times more likely to yield a tail than a head, what is the entropy of the language?
→Entropy = -(4/5 log(4/5) + 1/5 log(4/5))

3. Why is knowing the entropy of a language important?
→It lets you know theoretically how many bits on average you need to transmit the information/results.


-------------------------------

→ LECTURE 33:
1. Explain the reasoning behind the expectations presented in slide 3.
→The probabilities of each toss are indepenedent of each other so you just multiply the individual probabilities. So, HH: (3/4)*(3/4) = 9/16, HT = TH = (3/4)*(1/4) = 3/16,  and TT = (1/4)*(1/4) = 1/16. This means that you'll likely get 9 HH, 3 HT, 3 TH, and 1 TT in a case where we flip the coin 32 times.

2. Explain why the total expected number of bits is 27 in the example presented in slide 4.
→Total bits = (count_of_result1 * bits_in_code1) + (count_of_result2 * bits_in_code2) + (count_of_result3 * bits_in_code3) + (count_of_result4 * bits_in_code4) = (9*1) + (3*2) + (3*3) + (1*3) = 9+6+9+3 = 27. 

3. What is the naive encoding for the language in slide 5?
→1: 000, 2: 001, 3: 010, 4: 011, 5: 100, 6: 101.

4. What is the entropy of this language?
→
1,2: 6/20
3,4: 3/20
5,6: 1/20
Thus, entropy: -( (2*(6/20 log 6/20)+ (2*(3/20 log 3/20) + (2*(1/20 log 1/20))

5. Find an encoding more efficient than the naive encoding for this language.
→ 1: 0, 2: 10, 3: 110, 4: 1110, 5: 11110, 6: 11111

6. Why is your encoding more efficient than the naive encoding?
→1 and 2 are rolled most often so they're represented by 1 bit and 2 bit encodings. 3 and 4 are rolled next most often so they are represented by 3 and 4 bits respectfully. The most probable rolls are thus represented by less bits, meaning that it will be more efficient in the long run.
