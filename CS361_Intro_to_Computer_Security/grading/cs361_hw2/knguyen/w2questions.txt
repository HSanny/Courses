Name: Kevin Nguyen
EID: kn6347
CS Login: knguyen
Email: KevinNguyenn@utexas.edu

/************************************************************/
Lecture 17
1. If a computer system compiles with the BLP model, it does comply with non-interference because the dominates relation in the BLP model is synonymous with the non-interference “interferes with”  relation. For example, in the simple security property, a higher level subject reads a lower level object. The higher level subject dominates the lower level object as outlined in the simple security model while the non-interference policy states that the lower level object interferes with the higher level subject when the higher level subject dominated the lower level object.

2. There would be no NI policy because the conditions of the BLP system is not satisfied. With Subject A having (Secret: Crypto) and Subject B having (Secret: Nuclear), neither subjects dominate the other because neither contains a superset of the other.

3. Covert channels cannot exist in the NI policy because the policy states that a low level can interfere with a high level if the high level dominates the low level. The mechanism for covert channels is that the low level can sense the varying actions of the high level.

4. A would be a low level and B would be a high level in order to satisfy the BLP system since A |→ B. This means A interferes with B since B dominates A.
/************************************************************/


/************************************************************/
Lecture 18
1. NI policies better resemble metapolicies than policies because there is no mechanism/rules to indicate read/write permissions. The NI policy does not state anything about objects nor subjects.

2. L’s view would be l1, l2, l3, … lk.

3. Proving NI for realistic systems is difficult because there are subtleties such as: interferences, low-level system attributes, and benign interferences.
/************************************************************/


/************************************************************/
Lecture 19
1. In various contexts, integrity deals with who is authorized to supply or modify data, separating and protecting assets, detecting and/or correcting erroneous or unauthorized changes to data, and if authorizations can change over time. Integrity is important in these contexts because it preserves the state of the data from unaccounted changes by the user. For example, a bank strives to protect and separate assets so that each individual user only has access and can modify its own bank account. No other user can have access to another person’s account. Unlike confidentiality, integrity does not require two parties to commit a breach of an asset; an integrity issue can lie within a small error in computation.

2. A company would opt to purchase commercial software rather than a free version of the software because the commercial software generally has more security built-in into the software, while the free version may have some loopholes that can be exploited, thus breaching the security of the system.

3. Separation of duty deals with several different subjects that must be involved to complete a critical function in the system while separation of function states that a single subject cannot complete complementary roles within a critical process.

4. The importance of auditing in integrity contexts is that if something bad goes wrong in the system, then that system can be recovered by restoring the previous state checkpoint.

5. The underlying idea that raise from the integrity concerns of Lipner is that in a commercial setting, there are specific cases that deem necessary to develop security policies that cater specifically to the commercial environment. For example, users will not write their own programs, but use existing production software. Also programmer develop and test applications on a nonproduction system, possibly using contrived data.

6. A common scenario where integrity would be more important than confidentiality is a bank teller that manages the accounts of each individual customer. To the customer, they entrust to bank teller to view their account information, but put more trust that the bank teller will not change their information/account balance.
/************************************************************/


/************************************************************/
Lecture 20
1. Information that is highly reliable with little sensitivity is a reputable newspaper, such as the New York times. They will give reliable information versus a person who is not up to date with the news. Information that is not highly reliable with high sensitivity is social media who talks about the illuminati or terrorist bomb attacks. The sensitivity of the information is high since they’re regarded as sensitive topics that the government deals with.

2. Dominates relationships for each row such that Label 1 dominates Label 2
	-Row one: Expert is a higher level than Student so Expert dominates Student
	-Row two: Novice is a lower level than Expert so Novice does not dominate Expert
	-Row three: Student is a higher level than Novice so Student dominates Novice

3. The NI policy for the integrity metapolicy is that B | → A if B dominates A. The integrity metapolicy requires information to flow down.

4. Confidentiality and Integrity are “orthogonal issues” because their policies are opposite from each other. Confidentiality aims to prevent information from flowing down while integrity aims to prevent information from flowing up.
/************************************************************/


/************************************************************/
Lecture 21
1. Biba Integrity is called the “dual” of the BLP model because is the the opposite of the BLP system. The simple integrity property states that a subject can read an object if the object dominates the subject. The integrity *-property states that a subject can write to an object if the subject dominates the object.

2. The entry for Subj3 - Obj3 is empty because the categories from both labels are not a superset of one another.

3. The subject cannot access the object because the subject needs to satisfy both the confidentiality and integrity requirements.
/************************************************************/


/************************************************************/
Lecture 22
1. The assumption about subjects in Biba’s low water mark policy is that if a subject reads an object that is below its level, then the level of the subject is brought down to the level of the object.

2. Subjects are not considered trustworthy because the consequence of a subject reading a lower level object is bringing down the level of the subject to match the object’s level.

3. The Ring policy makes the assumption that the subject can property filter out the information it receives, regardless if its a low level information. The LWM policy does not make this assumption.

4. Subjects are considered trustworthy by the Ring policy.
/************************************************************/


/************************************************************/
Lecture 23
1. The SH category deals with the confidentiality of the model while the ID category deals with the integrity of the model.

2. System controllers need to have the ability to downgrade because the development and production levels are different from each other. The controllers need to have the capability to switch environments.

3. System controllers can modify development code/test data.

4. The weak tranquility underlies the downgrade ability because it the system controller can change its labels if it does not violate the “spirit” of the security policy.
/************************************************************/


/************************************************************/
Lecture 24
1. The purpose of the four fundamental concerns of Clark and Wilson is that it highlights the issue of maintaining consistency among various components of the system state.

2. Some possible examples of CDIs in a commercial setting include bank balances, user personal information, and business transactions.
3. Some possible examples of UDIs in a commercial setting include the bank account number, authorization IDs, and identification IDs.

4. The difference between certification and enforcement rules is that certification rules layout the foundation of what should be expected when undergoing a transaction procedure. The enforcement rules explicitly filter out unauthorized users from performing specific actions.

5. An example of a permission in a commercial setting is a system programmer having access to the production code in order to update the transaction procedures in a retail store.
/************************************************************/


/************************************************************/
Lecture 25
1.A consultant hired by American Airlines could potentially have a breach of confidentiality if also hired by the United Airlines because the consultant may bring confidential information to United that would put American at a disadvantage.

2. You will be able to access files because Microsoft and GM are two different conflict classes.

3. According to the (Chinese Wall) simple security rule, companies’ files are available to access if the files are already in the same dataset previously accessed by the users (“within the Wall”) or belong to an entirely different conflict of interest class.

4. The Chinese Wall Policy is designed to address a very specific scenario, the conflicts of interest by a consultant or contractor. The BLP model is applied to a very general security setting of read/write access permissions
/************************************************************/


/************************************************************/
Lecture 26
1. A benefit of associating permissions with roles, rather than subjects is that the management of the workers of a company is possible. Also many subjects share a specific role, so the assignment of security labels on roles is easier.

2. Authorized roles allow an individual to perform at a certain/various time frames while active roles is the individual’s current role that it occupies.

3. Role authorization requires that a subject’s active role must be an authorized role while transaction authorization requires that a subject can execute a transaction only if that transaction is authorized for one of the subject’s active roles.

4. A disadvantage of standard access control policies is that each individual must have their own security label assignment, which is a hassle is realistic systems. Also permissions such as “read a file” are not appropriate for the context of an organization. Restricting an individual to a certain identity is a hassle if they need to switch roles for the sake of maintaining the system.
/************************************************************/


/************************************************************/
Lecture 27
1. One would not want to build an explicit ACM for an access control system because in most realistic systems, most subjects do not have any access to most objects.

2. ACM alternatives: 
	-for storing permissions with objects: ACL or access control list
	-storing permissions with subjects: capability-based system
	-computing permissions on the fly: maintaining a set of rules based on the attributes of subjects and objects
/************************************************************/


/************************************************************/
Lecture 28
1. What must be true for the receiver to interpret an answer for the “yes” or “no” question is that both the sender and receiver must have some shared knowledge, included in an agreed encoding scheme.

2. Quantifying the information content of a message is important because it aids in the design of many components of computer science, such as hardware and protocol.

3. The sender and receiver must have some shared knowledge and an agreed encoding scheme because if they don’t have shared knowledge, then the receiver might not be able to interpret the sender’s message correctly.

4. The sender would not want to transmit more data than the receiver needs in order to resolve uncertainty because sending more data consumes more bandwidth and thus slowing down the rate of message transmission across a network.

5. If the receiver knows the answer to a question will be “yes”, there would be a variable number of bits to quantify the information content depending on the shared knowledge of the sender and receiver. The shared knowledge could establish that a yes or no is a 0 or 1, or the shared knowledge would be a string representing a yes or no. However, for the most efficient management of the bandwidth, there would only be one bit to represent the “yes”.
/************************************************************/


/************************************************************/
Lecture 29
1.How much information is contained in each of the first three messages
	-n number of bits
	-at minimum 4 (assuming the number of bits is whole) bits to cover single digits 1-9
	-at minimum 8 bits (assuming the number of bits is whole) bits to cover two digit decimal number

2. The amount of information contained in “The attack is at dawn” depends on the receiver’s level of uncertainty because if the receiver only needs to know if its at dawn or dusk, then one bit of information is required. If the receiver does not know the attack could occur at anytime during the day, then there could be a variable number of bits to inform the receiver. If the receiver does not know if the attack occurs at a certain day, there would also be a variable number of bits to inform the receiver.

3. There would be 4 bits of information to be transmitted from the sender because the possibility of 0-15 (16 choices) would have a binary representation spanning 0000-1111.

4. There would be 8 bits of information contained in a message from a space of 256 messages.

5. Very few circumstances are ideal in terms of sending information content because in realistic situations, you do not know how many messages are being sent. That is why a less efficient encoding scheme is used to send the information content.
/************************************************************/


/************************************************************/
Lecture 30
1. A bit can represent a binary digit (discrete number) or a quantity of information (continuous number).

2. Naive encoding for 8 possible messages
	-0: 0000
	-1: 0001
	-2: 0010
	-3: 0011
	-4: 0100
	-5: 0101
	-6: 0110
	-7: 0111

3. The encoding on slide 5 takes 995 + (5 * 5) bits because assuming 99.5% of 1000 messages will be a single message (message 10), that single message is encoded by a single bit. The rest of the messages other than message 10 is encoded by 5 bits. Therefore the total number of bits is 995 (for 99.5% of 1000 messages sent is message 10) plus the 5 other messages which are 5 bits each.

4. Knowing the prior probabilities of messages can lead to a more efficient encoding since the most frequent message sent will have the least number of bits to send. Reducing the number of bits for the most frequent message sent optimizes the bandwidth of the network.

5. Construct an encoding for 4 possible messages that is worse than the naive encoding (extra zeros)
	-0: 0000
	-1: 0001
	-2: 0010
	-3: 0011

6. An implication for finding an optimal encoding means that a message uses fewer bits, on average, to transmit messages in a particular language.
/************************************************************/


/************************************************************/
Lecture 31
1. “2464246”

2. Construct a non-prefix-free encoding for the possible rolls of a 6-sided die
	-1: 1
	-2: 11
	-3: 111
	-4: 1111
	-5: 11111
	-6: 111111

3. It is necessary for an encoding to be uniquely decodable so that the receiver and interpret unanimously what the sender sent. There is no ambiguity for what the receiver can interpret the sender’s message.

4. A lossless encoding scheme is desirable because in case of a failed transmission, the message can be fully recovered and resent across the network.

5. Morse code does not satisfy our criteria for encodings because its encoding is not streaming. There are breaks in the scheme that distinguish the letters. The coding scheme could also not be uniquely decodable because one dot represents an E while three dots represent an S. There is not a way to determine whether the 3 dots represent three E’s or one S.
/************************************************************/


/************************************************************/
Lecture 32
1. Entropy of an 8-sided fair die
	-(⅛ log(⅛) + ⅛ log(⅛) + ⅛ log(⅛) + ⅛ log(⅛) + ⅛ log(⅛) + ⅛ log(⅛) + ⅛ log(⅛) + ⅛ log(⅛))

2. Entropy if 4 times likely to yield a tail than head
	-(⅘ log(⅘) + ⅕ log(⅕))

3. Knowing the entropy of a language is important because it measures the average information content of symbols in the language. It also sets the lower limit on encoding efficiency. In other words, entropy optimizes the bandwidth of the messages being sent by finding the lowest number of bits that can be transmitted over the network.
/************************************************************/


/************************************************************/
Lecture 33
1. The expectations presented in slide 3 are encoded by using a 2flip coin scheme because with the 1 flip coin scheme in the unbalanced coin scenario, there would be 0.811 bits per symbol which is impossible to encode. In the 2flip coin scheme, the expectations are calculated by multiplying the the probability of each independent coin flip to all the possible outcomes in a 2flip coin scheme.

2. The total expected number of bits is 27 in slide 4 because the average number of counts in each possible result is multiplied by the number of bits in the encoding scheme. The number of bits that each possible result generates are then added together.

3. Naive encoding for the language in slide 5
	-1: 00000
	-2: 00001
	-3: 00010
	-4: 00011
	-5: 00100
	-6: 00101

4. Entropy of the language
	-(5/18 log(5/18) + 5/18 log(5/18) + 3/18 log(3/18) + 3/18 log(3/18) + 1/18 log(1/18) + 1/18 log(1/18))

5. Find encoding more efficient than the naive encoding for the language
	-1: 00
	-2: 01
	-3: 111
	-4: 110
	-5: 101
	-6: 100

6. My encoding is more efficient than the naive encoding because it requires less number of bits for the result that occurs most often, compared to the naive encoding that sends the same number of bits for every possible result.
/************************************************************/	

	
