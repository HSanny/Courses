Name: Perry Feng
EID: pf4736
CS Login: maxilius
Email: perry_feng@hotmail.com

HOMEWORK 2

/*separation of function: a teller can't be an auditor. like steal money during the day and cover it up during the night. integrity relates to how much we trust an entity to produce, protect, or modify data.*/

Lecture 17
1. If a computer system complies with the BLP model, does it necessarily
comply with non-interference? Why or why not?
Yes. A BLP Model can be turned into a non-interference, which creates a lattice model essentially, which we learned in a few lectures back. However, a non-interference can not necessarily be turned into a BLP model because BLP model is by definition transitive.

2. What would the NI policy be for a BLP system with subjects: A at (Secret: Crypto), B at (Secret: Nuclear)?
There wouldn't be anything since neither of them could interfere with one another. I guess you'd have two subjects A and B with no line between both of them.

3. Can covert channels exist in an NI policy? Why or why not?
It depends on how strong the NI policy is, or in other words, how much information is in the view of L for H. The more information, aka the stronger the policy, the less likely convert channels can exist. If you include everything in the view, there shouldn't be any covert channels or in other words any illegal secret ways of communication from H to L.

4. If the NI policy is A |−> B, in a BLP system what combinations of the levels “high” and “low” could A and B have?
Combinations are A can be low and B can be low OR A can be low and B can be high.

Lecture 18
1. Why do NI policies better resemble metapolicies than policies?
Because it's essentially stating the same thing as the metapolicy of confidentiality, or in other words, the system goal in that information can flow upwards but not downwards. There's no rules about which subjects can read/write which objects. Nothing about objects or actions is mentioned.

2. What would be L’s view of the following actions: h1, l1, h2, h3, . . . , hj, l2, l3, . . . , lk
Given the fact that H cannot pass information to L, L should act independently of whatever H does. So should be:
l1,l2,l3...lk.

3. What is difﬁcult about proving NI for realistic systems?
The thing for realistic systems is that there are too many potential interferences which makes it difficult to prove. For example, H can encrypt a file and put it in a place where L can see. Even though L can't do anything with it because it's encrypted, it's still a interference. 


Lecture 19
1. Explain the importance of integrity in various contexts.
Integrity is important because we don't want to read information from unreliable resources.
Neither don't we want to supply bad information to reliable sources. It's like reading
"Hilary Clinton to have Alien's Baby". No one's going to believe it because it is clearly false 
and probably from an integrity of joke from the Onion.

2. Why would a company or individual opt to purchsae commercial software rather than download a similar, freely available version?
A certified commercial software may have more integrity than freeware downloaded from the Internet.

3. Explain the difference between separation of duty and separation of function.
Separation of duty is where several different subjects must be involved to complete a critical function. For example to retrieve 10k from the bank you want to have 2 people involved not just 1 to increase the integrity level and make it more secure. Separation of function is where a single subject cannot complete complementary roles within a critical process. So a bank teller in the morning cannot become a auditor at night because he could steal $10k and audit it to make it seem as if the $10k never left in the first place in order to cover his own tracks.

4. What is the importance of auditing in integrity contexts?
Auditing is important because it provides recoverability and accountability for an audit trail. Makes sure that things can be recovered and that we can have someone be accountable for their actions.

5. What are the underlying ideas that raise the integrity concerns of Lipner?
Pretty much where one person doing one must be separate from another. For example, a user that uses a program cannot code it himself. There must be a user who uses a software created in another department. Having collusion happen definitely can hamper the integrity status and if this happens, there is no checks and balances to keep things in check/place.

6. Name a common scenario where integrity would be more important than confidentiality?
A common scenario where integrity would be important than confidentiality would be the banking system.

Lecture 20
1. Give examples of information that is highly reliable with little sensitivity and information that is not so highly reliable with greater sensitivity.
Information that is highly reliable with little sensitivity would be Wikipedia. Information that is not so highly reliable with greater sensitivity would be that of a politician that is corrupt but the public doesn't know that he's corrupt, somoeone who is not so reliable because he's corrupt and also has greater sensitivity in order to hide his corruptness. 

2. Explain the dominates relationships for each row in the table on slide 4.
So for the first row the expert has a greater level of trustworthiness than the student and both are in physics. So the expert knows more than the student and dominates him. In the second one, the novice is by default does not have a higher trustworthiness than the expert so we can automatically say right there it does not dominate the expert. The last one the student dominates the novice because the student has a higher trustworthiness than the novice and because it's categories is a superset of the categories of Novice therefore the student dominates the novice.

3. Construct the NI policy for the integrity metapolicy.
Information can flow down but it cannot flow up. Information can be written downwards but information cannot be written upwards because we don't want information of lower integrity to taint the higher integrity information.

4. What does it mean that confidentiality and integrity are "orthogonal issues?"
It means that they are pretty much opposites of each other and therefore should be looked as two separate things. To assume the integrity based on its confidentiality would be a serious issue.

Lecture 21
1. Why is Biba Integrity called the "dual" of the BLP model?
Because they go hand in hand only. They are essentially the same except the opposite of each other. In Biba you read up and can only write down. In BLP, it's the opposite.

2. Why in the ACM on slide 5 is the entry for Subj3 - Obj3 empty?
It's empty because the categories of one aren't a superset (or subset) of the other.

3. If a subject satisfies confidentiality requirements but fails integrity requirements of an object, can the subject access the object?
No, because it must satisfy both the BLP rules and the Biba rules.

Lecture 22
1. What is the assumption about subjects in Biba's low water mark policy?
The assumption is that as soon as subjects read lower level integrity information they are instantly tainted which not may be always the case. Which the Ring policy solves which is saying that the subject have some common sense and can filter the bad from the good even if they read the bad.

2. Are the subjects considered trustworthy?
Subjects are not considered trusthworthy because as soon as they read less less integrity information they also go their level and become tainted and less trustworthy.

3. Does the Ring policy make some assumption about the subject that the LWM policy does not?
The Ring policy makes the assumption that the subject won't get corrupted and tainted and that the subject can filter out the bad stuff and won't get corrupted.

4. Are the subjects considered trustworthy?
Yes the subjects are considered trustworthy and "untaintable" in a sense.

Lecture 23
1. Are the SD and ID categories in Lipner's model related to each other?
Yes and no. They both pertain to development. SD are the programs that are under development which the user can access. ID is the integrity category which the user knows about. Confidentiality and Integrity are separate ideas and should be treated separately.

*********

2. Why is it necessary for system controllers to have the ability to downgrade?
The point of Lipner is to have software written on the development side of the shop and then moved to production. Suppose you had strong tranquility in place, you could never move anything from development to production.

3. Can system controllers modify development code/test data?
Yes because they have a higher trustworthiness being ISP. Their categories is also a superset of the development code/test data's catgories.

4. What form of tranquility underlies the downgrade ability?
The weak tranquility property is the one that underlie sthe downgrade ability.

Lecture 24
1. What is the purpose of the four fundamental concerns of Clark and Wilson?
You consider them metapolicies. Specific concerns that attention and care should be put into. Policies are thought up to maintain those metapolicies.

2. What are some possible examples of CDIs in a commercial setting?
Bank balances, checks etc things that you are about.

3. What are some possible examples of UDIs in a commercial setting?
Things that you aren't as concerned about like a bowl of candy on the table. No one cares what happens to it.

4. What is the difference between certification and enforcement rules?
Certification is checking if given a static state if it meets variance and all the requirements or not. Enforcement is changing something of a state and making sure it doesn't change it's integrity. 
*************REMEMBER THIS**************

5. Give an example of a permission in a commercial setting.
So an example would be a teller would have the permission to login and access customer information.

Lecture 25
1. Why would a consultant hired by American Airlines potentially have a breach of confidentiality if also hired by the Ufted Airlines?
Because he could carry some trade secrets/important information and files specific to American Airlines over to United Airlines and obviously American Airlines want to prevent that from happening.

2. In the example conflict classes, if you accessed a file from GM, then subsequently accessed a file from Microsoft, will you then be able to access another file from GM?
That would be fine because those two are in an entirely different conflict of interest class since GM and Microsoft are not competing against each other.

3. Following the previous question, what companies' files are available for access according to the simple security rule?
If it is in the same company data sets as the objects already accessed by the subject (aka within the wall) or belongs to an entirely different conflict of interest class.

4. What differences separate the Chinese Wall policy from the BLP model?
The differences is that it is designed to address a very specific concern which is conflicts of interest by a consultant or contractor. Also, accesses are sensitive to the history of past accesses.

Lecture 26
1. What benefits are there in associating permissions with roles, rather than subjects?
It makes managing roles so much more easier if you're trying to manage a company with thousands of people where there are roles that are the same.

2. What is the difference between authorized roles and active roles?
Authorized roles are roles which an individual is allowed to fill at various times. Active roles are a subset of authorized roles and which the individual is currently occupying.

3. What is the difference between role authorization and transaction authorization?
Role authorization is where a subject's active role must be an authorized role for that subject. It must be something that's it is authorized to do. A transaction authorization is where a subject can execute a transaction only if the transaction is authorized for one of the subject's active roles. It's essentially a subject of all the transactions allowed by the subject's active roles just like how the active roles of the individual must be a subset of his/her authorized roles. RBAC(Role-based access control).

4. What disadvantages do standard access control policies have when compared to RBAC?
RBAC is easier to administer. Permissions are appropriate to the organization like open an account or cash a check. RBAC recognizes that a subject often has various functions within the organization and the system allows you to transition between roles without changing identities and that makes managing easier and more flexible.

Lecture 27 (Module 6, slide 6)
1. Why would one not want to build an explicit ACM for an access control system?
Because in realistic systems most subjects don't have any access to most objects. It's also normally pretty big and better to do just store it implicitly by storing in the rules and just calculating on the fly.

***(ACL) store permissions with objects. capabilities- store permissions with subjects***
2. Name, in order, the ACM alternatives for storing permissions with objects, storing permissions with subject and computing permissions on the fly.
ACL (Access control list) is storing permissions with objects. Storing permissions with subject is called capabilities. Computing permissions on the fly would be the result of implicit calculation as a result of a series of rules.

Lecture 28
1. What must be true for the receiver to interpret the answer to a "yes" or "no" question?
They have to agree in advance whether a 0 means a yes or no and same goes with 1. It requires a share knowledge and that both understand the encoding scheme.

2. Why would one want to quantify the information content of a message?
It would be nice/useful to quantify information such as the bandwidth, like how much bits is passed per second from H to L for example for specific purposes like testing or to help secure certain areas of the system.

3. Why must the sender and receiver have some shared knowledge and an agreed encoding scheme?
They have to agree on an encoding scheme otherwise no communication can occur if the information cannot be understood between them.

4. Why wouldn't the sender want to transmit more data than the receiver needs to resolve uncertainty?
Because we want to send it in the most efficient way possible and if we care about bandwidth and want to send the most information over a second, the more information sent the better.

5. If the receiver knows the answer to a question will be "yes," how many bits of data quantify the information content? Explain.
1 bit because that is the amount of information for the sender to send to the receive to remove all uncertainty about whether the answer was yes or no.

Lecture 29
1. How much information is contained in each of the first three messages from slide 2?
For the first, n bits of information is contained. For the second, it would be log2(10). For the third, 7 bits of information is contained. (Although there are 100 possibilities and 7 bits is the most minimum required to send them).

2. Why does the amount of information contained in "The attack is at dawn" depend on the receiver's level of uncertainty?
If the only uncertainty were whether at dawn or dusk then you only need 1 bit. If the attack could have come at anytime during the day then you who knows depending how specific it would take ? bits. If the day was uncertain it would take ? bits. ? being unknown unless we know the answers to those questions. We definitely need more than 1 bit because 1 isn't enough to remove the amount of ambiguity in the transmission.

3. How many bits of information must be transmitted for a sender to send one of exactly 16 messages? Why?
4 bits because 2^4 is 16 possibilities. 

4. How many information content is contained in a message from a space of 256 messages?
8 bits because you can put in those 8 bits essentially how to reach the message in your tree you created. The tree must be created in advanced between shared knowledge so this is the encodin scheme pretty much.

5. Explain why very few circumstances are ideal, in terms of sending information content.
Because in most scenarios/communication situations we don't know how many possibilities of messages could be sent. 

Lecture 30
1. Explain the difference between the two connotations of the term "bit."
Bit can be in terms of a binary digit as in a 0 or a 1 (discrete). The other definition is a quantity of information and it is continous. This measures the amount of quantity that flows through the communication channel. 

2. Construct the naive encoding for 8 possible messages.
M0 - 000
M1 - 001
M2 - 010
M3 - 011
M4 - 100
M5 - 101
M6 - 110
M7 - 111

3. Explain why the encoding on slide 5 takes 995 + (5*5) bits.
Because according to our calculations we know that message 10 is going to be sent 99.5% of the time so we can give that just 1 bit. The other 15 messages we slap a 1 at the beginning to differentiate message 10 from the other 15 messages. Knowing that 99.5% of the time message 10 we want to send 1000 messages so 99.5% of 1000 is 995. We know the other 5 messages are of 5 bits each so 995 + (5*5) bits is the total bits sent or in other words 1020 total bits are sent.

4. How can knowing the prior probabilities of messages lead to a more efficient encoding?
If we know a particular message has a higher probability to be sent, we can give it a shorter bit encoding and therefore lead to more efficient and faster message passing because the total bits sent will be shorter.

5. Construct an encoding for 4 possible messages that is worse than the naive encoding.
message 1 - 000 
message 2 - 001
message 3 - 010
message 4 - 111

6. What are some implications if it is possible to find an optimal encoding?
An optimal encoding is one whose efficiency matches the entropy.  That may be possible.  For example, with a fair coin, encode head as 0 and tail as 1.  That's optimal since it uses 1 bit / flip, and the entropy is 1.   You can always get arbitrarily close to optimal, but may not reach it in some cases because it would require encoding infinitely long strings so it's not feasible.


Lecture 31
1. Name a string in the language consisting of positive, even numbers.
246886442864486482486

2. Construct a non-prefix-free encoding for the possible rolls of a 6-sided die.
1 - 0
2 - 01
3 - 001
4 - 001001
5 - 001001001001
6 - 0010010010011

3. Why is it necessary for an encoding to be uniquely decodable?
Because it removes ambiguity and allows the full understanding/decoding of the message without it being read for example two different ways. 

4. Why is a lossless encoding scheme desirable?
It makes it easier because you're able to recover the entire original sequence of symbols from the transmission in case anything horribly goes wrong.

5. Why doesn't Morse code satisfy our criteria for encodings?
Because it's not uniquely decodable because it's non-prefix-free. For example if you had three dots in a row how do you know if three e's were sent of an s was sent. It's also not streaming because there is a break between each letter so receiver can't distinguish those letters/possibilities and that is what we want to avoid.


entropy - The entroy of a language is a measure of the information content of an average symbol in the language.
Lecture 32
1. Calculate the entropy of an 8-sided, fair die(all outcomes are equally likely).
-(((1/8)*log2(1/8))*8) = -(log2(1/8))= 3

2. If an unbalanced coin is 4 times more likely to yield a tail than a head, what is the entropy of the language?
-(((8/10)*log2(8/10))+((2/10)*log2(2/10))) = 2.3794705708

3. Why is knowing the entropy of a language important?
Entropy is important because it measures the average information content of a symbol of a language. It gives the minimum amount (the lower limit) of information per symbol sent. It sets a lower limit on encoding efficiency and can be used as a benchmark on improving our encoding mechanisms.

Lecture 33
1. Explain the reasoning behind the expectations presented in slide 3.
Because H happens 3/4 of the time. T happens 1/4 of the time. If you have two independent events, just multiply both of the probabilities together and you get the conbination probability.

2. Explain why the total expected number of bits is 27 in the example presented in slide 4.
Because since we decided to flip twice and base our encoding on two flips together instead of just one flip, since HH happens 9 times (1 bit), HT occurs 3 times (represented with 2 bits), TH occurs 3 times represented by 3 bits per occurance, TT same as TH, 3 bits per occurance and happens once. so calculation is:

(9*1) + (3*2) + (3*3) + (1*3) = 27 total bits sent 

3. What is the naive encoding for the language in slide 5?
3 bits

4. What is the entropy of this language?
-(((1/20)*log2(1/20))*2 + ((3/20)*log2(3/20))*2 + ((6/20)*log2(6/20))*2) 
= -(-0.43219280948 - 0.82108967825 - 1.0421793565)
= 2.29546184423

5. Find an encoding more efficient than the naive encoding for this language.
1 - 0 (00)
2 - 10 (01)
3 - 110 (10)
4 - 1110 (110)
5 - 11110 (1110)
6 - 11111 (1111)

6. Why is your encoding more efficient than the naive encoding?
Given 1000 rolls for example, I'm able to send only 2500 bits instad of the 3000 bits I would have to send if I used the naive encoding.

(300 * 1) + (300 * 2) + (150 * 3) + (150 * 4) + (50 * 5) + (50 * 6)
= 300 + 600 + 450 + 600 + 250 + 300 = 2500 bits.


