Name: Mallory Koai
EID: MJK567
CS Login: mkoai
Email: mkoai@utexas.edu

Lecture 17

1. If a computer system complies with the BLP model, it doesn’t necessarily comply with non-interference because MLS policies like BLP are transitive by definition while NI policies are intransitive.

2. If we are given subjects A at (Secret: Crypto) and B at (Secret: Nuclear), there would be no NI policy in place because neither subject dominates the other. There is no flow of information.

3. Covert channels cannot exist in an NI policy because the policy ensures that certain subjects (e.g., SH) don’t interfere with other subjects (e.g., SL). Otherwise, SH can’t do anything that has effects visible to SL.

4. B can be “high” and A can be “low” if only write access is involved. B can be “low” and A can be “high” if we’re only dealing with read access.

Lecture 18

1. NI policies better resemble metapolicies because they are very abstract and more general than MLS policies like BLP. Furthermore, NI policies have no rules about which subjects can read or write which objects. There is no notion of “labels”.

2. L’s view would ultimately be the same sequence of instructions but with the H’s actions removed: l1, l2, l3, … lk… 

3. It is difficult to prove NI for realistic systems because interferences are plenty and common in real systems. Also, most interferences involve low-level system attributes and many are benign.

Lecture 19

1. In a bank, we might be concerned with individuals modifying their accounts to reflect a higher balance. In a college setting, we want to protect the integrity of students’ academic records.

2. The commercial software probably has more credibility than a free version floating around online.

3. Separation of duty states that several different subjects must be involved to complete a critical function, while separation of function states that a single subject cannot perform complementary tasks within a critical process.

4. Auditing ensures that the records being maintained are in fact legitimate and all accounted for, and in case of a breach in integrity, that information can be recovered.

5. Commercial settings involve many individuals working on a single project, and the integrity of the product relies on the development process’ adherence to separation of duty, separation of function, and auditing. 

6. Banks want to protect the integrity of their customers’ accounts. 

Lecture 20

1. The articles in a credible source like the New York Times are highly reliable but have very little sensitivity since they are published and distributed to the general public. Something that is not highly reliable but with greater sensitivity might be the girl’s number you got last night.

2. Label 1 (Expert: {Physics}) | Label 2 (Student: {Physics})
An expert in physics will have more credibility than a physics student. Therefore, Label 1 dominates Label 2.

Label 1 (Novice: {Physics, Art}) | Label 2 (Expert: {Physics})
A novice does not dominate an expert. Therefore, Label 1 does not dominate Label 2.

Label 1 (Student: {Art}) | Label 2 (Novice: {})
An art student will have more knowledge than a pure novice. So Label 1 dominates Label 2.

3. High Integrity → Low Integrity; Otherwise, high integrity information can flow to low integrity sources, but not vice versa.

4. Confidentiality and integrity are “orthogonal issues” which means they are not related. We have to treat them separately (i.e., provide separate labels for confidentiality and integrity).

Lecture 21

1. The Biba Integrity is called the “dual” of the BLP model because we apply the same rules, Simple Security and *-Property, but in the opposite order.

2. A subject with the label (L, {A, B}) does not dominate an object with the label (L, {B, C}) nor does the object dominate the subject. Neither set of categories is a subset or superset of the other.

3. No, a subject that satisfies the confidentiality requirements but fails the integrity requirement of an object cannot access the object. Access is allowed only if both rules are satisfied.

Lecture 22

1. The assumption about subjects in Biba’s LWM policy is that they can make mistakes and they are punished for it. For example, if a subject accidentally reads bad, low integrity information, their own level drops.

2. No, the subjects in Biba’s LWM policy are not considered trustworthy.

3. The Ring policy assumes that the subject has enough common sense to filter out bad information.

4. The Ring policy is more generous than the LWM policy and places more trust in the subject.

Lecture 23

1. The SD and ID categories both pertain to development, but the former is used for confidentiality while the latter is used for integrity.

2. Downgrading requires changing the label on an object from development to production. Under the BLP policy and Biba’s Strict Integrity, there is no clear way to do this. Therefore, this functionality is given to the system controller in Lipner’s model.

3. Since we are still applying BLP’s security policy, the *-Property still holds. System controllers, who are at the top of the hierarchy, can read development code/test data but cannot modify it.

4. The weak tranquility property underlies the system controller’s downgrade ability.

Lecture 24

1. Commercial security (versus military security) has its own unique concerns. The purpose of Clark and Wilson’s four basic concerns is to offer all commercial environments a common starting point of issues to address.

2. Possible examples of CDIs are bank balances or checks.

3. Possible examples of UDIs are the candies at a restaurant’s register or the newspapers in front of a grocery store.

4. Certification rules ensure that the system is in a consistent state, while enforcement rules are mostly concerned about proper authorization and operations on the state.

5. An example of a permission would be a programmer (subject) developing and testing applications (TP) on a nonproduction system {CDI}.

Lecture 25

1. A consultant hired by American Airlines would potentially have a breach of confidentiality if also hired by United Airlines because he or she could carry proprietary information from one to the other.

2. Since GM and Microsoft are in separate conflict classes, you can in fact access another file from GM.

3. By accessing a file from GM, you are blocked from accessing files from other companies within the same conflict class (i.e., Chrysler, Ford). You can, however, access Microsoft’s files since it is in a separate conflict class. The banks comprise another conflict class. At this point, you are initially allowed to access any bank’s files. Upon selecting one, however, you are subsequently barred from viewing the other companies’.

4. Permissions change dynamically in the Chinese Wall Policy depending on the history of past accesses. This separates the Chinese Wall Policy from the BLP model.

Lecture 26

1. Associating permissions with roles rather than subjects saves us the tedium of repeatedly assigning the same labels to individuals within a group who would be given the same permissions anyways. For example, instead of assigning separate, identical labels for Teller Sue and Teller Sam, we can establish one label for the entire group of tellers.

2. Authorized roles are the roles which an individual is allowed to fill at various times, whereas active roles represent a subset of the authorized role that the individual currently holds.

3. Role authorization ensures that a subject’s active role is one he or she is authorized to take while transaction authorization allows a transaction only if it is an authorized one for one of the subject’s active roles. In short, role authorization checks if the active role is legal, and transaction authorization checks if the transaction being executed is legal in context.

4. RBAC is easy to administer for large administrations. Actions in standard access control policies constrain actions to just “read” and “write”, while RBAC allows permissions that cater to the organization. Standard access policies do not allow transition between roles without changing identities while RBAC does. Furthermore, RBAC recognizes that a subject can have various roles within an organization.

Lecture 27

1. One would not want to build an explicit ACM for an access control system because there could be thousands of subjects and thousands of objects. Furthermore, most subjects don’t have access to most objects. The resulting ACM would be very large and sparse.

2. Three ACM alternatives are access control list (storing permissions with objects), capability-based system (storing permissions with subjects), and storing permissions implicitly (computing permissions on the fly).

Lecture 28

1. For the receiver to interpret the answer to a yes/no question, it must share a common encoding scheme with the sender.

2. One would want to quantify the information content of a message to infer the bandwidth of a channel (e.g., in the case of covert channels, how much information can potentially be leaked and at what rate).

3. The sender and receiver need to have some shared knowledge and an agreed encoding scheme, otherwise communication wouldn’t be possible (e.g., the receiver would not know how to interpret a message from the sender if they didn’t share a common encoding scheme).

4. The sender doesn’t want to transmit more data than the receiver needs because it’s not efficient, and the extraneous bits only add to the uncertainty of the receiver.

5. If the receiver already knows the answer to a question will be "yes", then no bits of data are needed to quanitfy the information content because there is no information content to send. In other words, there is no uncertainty at the receiver's end.

Lecture 29

1. 
n-bit binary number - n bits
single decimal digits - 4 bits
two digit decimal number - 7 bits (or 8, if each digit coded individually)

2. The attack could have been during one of two possibilities: dusk or dawn. In this case, the amount of information would simply be contained in one bit. If the attack could have occurred at any time during the day, however, then the number of bits varies more to accommodate all of those possibilities (i.e., down to the minute or even to the second).

3. If there are exactly 16 messages/possibilities, they can be encoded as four-bit strings (2^4). Each message can be uniquely identified by four bits.

4. 8 bits of information is contained in a message from a space of 256 messages (2^8).

5. Realistically, we don’t know how many possible messages can be sent, in which case we resort to more inefficient methods of encoding such as ASCII.

Lecture 30

1. A bit can be a binary digit (discrete) or a measure of information content (continuous).

2. 
M0: 0000
M1: 0001
M2: 0010
M3: 0011
M4: 0100
M5: 0101
M6: 0110
M7: 0111

3. Since the message has a 99.5% chance of being M10, we can make the encoding more efficient by denoting M10 with a single bit. The remaining fifteen messages retain the same code as before but with an extra 1 bit appended to the front. .995 * 1000 = 995 messages encoded with a single bit. That leaves five messages that are five bits long, hence 995 + (5 * 5).

4. If the frequency of one message being sent is higher than the others, this message can be encoded more efficiently by representing it with fewer bits.

5. The naive encoding for four possible messages would utilize two bits per message. For example, M0: 00, M1: 01, M2: 10, and M3: 11. This encoding can be made worse simply by throwing in an extra third bit.

6. Finding an optimal encoding suggests that it uses the minimal amount of bits to transfer information.

Lecture 31

1. Symbols in a language consisting of positive, even numbers would be “2”, “4”, “6”, and so on. One possible string in this language could be “6482264282446286…”

2. NON-prefix-free encoding for the possible rolls of a 6-sided die:

Roll	Code
1	1
2    	0
3    	10
4    	11
5    	100
6    	101

3. Uniquely decodable encodings leave no room for ambiguity when interpreting information.

4. A lossless encoding scheme is desirable because loss of information would obstruct the flow and raise receiver uncertainty.

5. Morse code doesn’t satisfy our criteria for encodings because there is a break between each letter for users to distinguish the non-prefix-free encodings from one another. In other words, Morse code is not streaming.

Lecture 32

1. Given the following equation: h = - (log 1 / n) = log n, if n = 8 for an 8-sided, fair die, then the entropy for the die would be log (8) which is 3.

2. h = -(4/5 * log 4/5 + 1/5 * log 1/5) 

3. Knowing the entropy of a language is important because it sets a lower limit on efficient coding. Otherwise, if you know the entropy for a given encoding, you can measure its efficiency.

Lecture 33

1. Each coin flip is independent of the others. Since each trial now involves two flips instead of one, the resulting probability of the “2flip” will be the product of the probabilities of each individual flip. Therefore, we have the following:

HH = 3/4 * 3/4 = 9/16
HT = 3/4 * 1/4 = 3/16
TH = 1/4 * 3/4 = 3/16
TT = 1/4 * 1/4 = 1/16

2. After calculating the the total count out of each result out of 16 trials, we can multiply the count by the number of bits in the result’s corresponding code:

HH = 9 * 1 bit (0) = 9
HT = 3 * 2 bits (10) = 6
TH = 3 * 3 bits (110) = 9
TT = 1 * 3 bits (111) = 3

9 + 6 + 9 + 3 = 27 bits

3. Since there are six possibilities, we will need three bits for the naive encoding:

1: 000
2: 001
3: 010
4: 011
5: 100
6: 101

4.

Result	Prob.	Code
1	6/20	000	
2	6/20	001
3	3/20	010
4	3/20	011
5	1/20	100
6	1/20	101


h = -(2 * (6/20 * log6/20) + 2 * (3/20 * log3/20) + 2 *(1/20 * log1/20))
h = 2.3

5. For the naive encoding, we would expect 3 bits per roll. If there are 20 trials, 3 * 20 = 60 bits. The following encoding takes into account that some rolls are more probable than others:

Result	Prob.	Code
1	6/20	00	6 * 2 = 12
2	6/20	01	6 * 2 = 12
3	3/20	10	3 * 2 = 6
4	3/20	110	3 * 3 = 9
5	1/20	1110   	1 * 4 = 4
6	1/20	1111  	1 * 4 = 4
				47 bits

6. With the new encoding, we  only need 47 bits for 20 rolls (as calculated in the previous question). The efficiency under the new encoding is 47/20 = 2.35 bits per roll which is very close to our calculated entropy. Compared to the 3 bits per roll under the naive encoding, our new encoding is more efficient. 


