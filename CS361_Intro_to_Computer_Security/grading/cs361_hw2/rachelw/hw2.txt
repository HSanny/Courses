Rachel Wong
rcw96
rachelw
rachelcwong168@gmail.com

Lecture 17:
1. Yes, if a computer system complies with the BLP model, it complies with NI. Information will only flow from the lower level to the higher level as long as it satisfies the dominance relation.
2.There would not be an NI policy because A and B do not dominate each other.
3. No, because according to NI, the high level subject must never communicate with the lower level subject. 
4. A must be low, B must be high.

Lecture 18:
1. Because NI policies are simple and there are no specifics about reading and writing. It's abstract, and you don't know how to implement.
2. l1, l2, l3, ...., lk
3. In realistic systems, there are lots of intereferences, if you made the view that inclusive, it would be impossible for real systems to prove it was non interfereing. Most involve low-level system attributes, many interferences are benign.

Lecture 19:
1. The integrity in various contexts helps us determine if data/subject is trustworthiness or not.
2. The commercial software has more integrity than a free available version online.
3. Separation of duty is several different subjects must be involved to complete a cirtical function while separation of function is a single subject cannot complete multiple complementary roles within a critical process. 
4. Auditing is recoverability and accountability require maintaining an audit trail. Keeping records so If something bad does happen, you can go back and assign responsibility and take care of whatever the problem was.
5. a) users will not write their own programs, but use existing production software. b) programmers develop and test applications on a nonproduction system, possibly using contrived data. c) Moving applications from development to production requires a special process. this process must be controlled and audited. d) managers and auditors must have access to system state and system logs.
6. In the commercial world, integrity is more important than confidentiality. Ex: which newspaper you decide to trust.

Lecture 20:
1. 
2. Row one: Expert >= Student and object is the same. Dominates. Row two: Novice < Expert. No Dominates. Row 3: Student >= Art, {} is a subset of Art. Dominates.
3. Don't allow information to flow up in integrity.A subject shouldn't be allowed to write up in integrity or read down in integrity.
4. That means they are completely separate. An integrity label has nothing to do with a confidentiality label.

Lecture 21:
1. Because Biba Integrity is analogus to BLP, it is the opposite of *-property  and Simple security policy.
2. One does not dominate the other in integrity.
3. No, an access is allowed only if allowed by BLP and Biba rules.

Lecture 22:
1. The subject cannot filter bad information. If the subject reads lowsy information, then the integrity of the subject floats down. 
2. No, not all subjects are considered trustworthy. The more information you read that is below your integirty level, the lower you integrity level.
3. The subject has the common sense to filter bad information.
4. Yes

Lecture 23:
1. No, SD deal with confidentiality, ID deal with integrity
2. The system controllers need to move objects from development to production.
3. No
4. Strict Integrity

Lecture 24:
1. They are concerns for any reasonable commercial integrity model, different
from biba or blp.
2. Bank balances, checks, etc
3. Candy in a bowl on a counter.
4. They have their own set of rules. ex:
C: ALl TPs must be certified as integrity-preserving
C: Assignment of TPs to users must satisfy separation of duty
C: The operation of TPs must be logged
E: Only certified TPs can manipulate CDIs 
E: Users must only access CDIs by means of TPs for which they are authorized
E: The identity of each user attempting to execute a TP must be authenticated.
5. (user, TP, {CDI set})

Lecture 25:
1. Conflict of interet. That consultant might have information about United
Airlines that would benefit American Airlines.
2. Yes, you can move between conflict classes, but not within conflict
classes. 
3. Once you access a conflict class, you are not allowed to access any
files in that class, but you are allowed to go out of that class and access
whatever.
4. In BLP you can only read down, but in the Chinese Wall Simple security
rule, a subject can read an object only if the object is within the wall or
belongs to an entirely different conflict of interest class. In BLP you can
only write up, but the Chinese wall *-property says that access is permitted
by the simple security rule and no object can be read which is in a different
company dataset than the one for which write access is requested, and contains
unsanitzed information.

Lecture 26:
1. Makes manageging more manageable, easier.
2. authorized roles: it is allowed to fill at various times. active roles: a subset of authorized roles, which it currently occupies.
3. Role authorization: A subject's active role must be an authorized role for that subject. Transaction authorization: A subject can execute a transaction only if the transaction is authorized for one of the subject's active roles.
4. RBAC is generally more flexible than standard access control policies. It's easier to administer, permissions are appropriate to the organization, it recognizes that a subject often has various functions within the organization, it allows a subject to transition between roles without having to change identities

Lecture 27: 
1. In realistic systems, most subjects don't have access to any objects. It would be a huge matrix
2. Maintain a set of rules to compute access permissions on the fly based on attributes of subjects and objects. Sotre the permissions with objects. This is called an access control list.  Store the permissions with subjects. This is called a capability-based system.

Lecture 28:
1. Sender knows an answer, the receiver believes the sender has an answer, the sender wants to transfer the information as efficiently as possible to resolve uncertainty.
2. Why would one want to quantify the information content of a
message. To make clear of the message to resolve uncertainty
3. Why must the sender and receiver have some shared knowledg
e and an
agreed encoding scheme? They have to have agreed on a coding scheme to know which bit means yes and which means no.
4. We're worried about the bandwidth of a channel so we want to send information as efficiently as possible.
5. Should just be 1 bit as long as the sender and receiver both know which bit means yes and which means no.

Lecture 29:
1. n-bits, 4 bits, 7 bits
2. The receiver could be predicting a specific time from the sender, so "the attack is at" would be unnecessary information. The message could be shortened depending on what the receiver knows.
3. 4bits because 2^4 = 16 different messages
4. 8 bits
5. You dont know in advance what the message is about, how many possible messages could be sent.

Lecture 30:
1. a) a binary digit (discrete) b) a quantity of information (continuous). The information content of a message is measured in bitbs and the capacity of a channel in bitbs per second.
2. M1 = 000, M2 = 001, M3 = 010, M4 = 100, M5 = 011, M6 = 101, M7 = 110, M8 = 111
3. 5 messages that aren't message 10 yields 25 bits, plus 995 bits because 995 will be message 10. This is more of a calculation of the average.
4. If you know the probability of messages, then you know how often that message will be sent. Instead of multiplying, you would add.
5. M1 = 00#@, M2 = 00%1, M3 = 0^10, M4 = &100
6. Having the receiver know as much information as possible so that the sender will not have to send as much. Having every message be the same. Have a very efficient way for the sender and receiver to communicate with each other.

Lecture 31:
1. "2468642"
2. 1: 0, 2: 1, 3: 010, 4: 11, 5: 10, 6: 101
3. So the receiver is able to recover unambiguously what the sender was intending to send.
4. So you can completely recover the entire original sequence of symbols from the transmission. there is no loss of information. 
5. Morse code is not streaming, There is a break between each letter, the receiver cannot distinguish the letters.

Lecture 32:
1. h = -8(1/8 x log1/8)
2. h = -(1/5 x log1/5 + 4/5 x log1/5)
3. It gives us a lower limit of the coding efficiency. You cant do any better than the encoding that matches the entropy.

Lecture 33:
1. Instead of flipping it once, we flip twice. We get different probabilities of different outcomes. It helps us do better than 1bit/symbol
2. When we get HH, we only use 1 bit, when we get HT we use 2 bits, and everything else 3 bits. The probability of us getting a HH or HT are higher than TT and/or TH.
3. p = -(1/4log1/4 + 1/4log1/4 + 1/6log1/6 + 1/6log1/6 + 1/12log1/12 + 1/12log1/12
5. 1: 0, 2: 10, 3: 110, 4: 1110 5:11110 6: 111111
6. There is no need to encode a sequence of rolls.
