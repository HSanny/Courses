Name: Sonny David Marton
EID: sdm2755
CSUsr: smartone
Email: sonnymarton@yahoo.com



CS361 Questions: Week 2

These questions relate to Modules 4, 5, 6 and 7. Type your answers and submit
them via email to Dr. Young by 5pm on Thursday, June 19.

The questions marked with a dagger (†) require external research and may be more
extensive and time consuming. You don’t have to do them for the assignment but, but
you may want to do them to increase your knowledge of the subject matter.


Lecture 17

1. If a computer system complies with the BLP model, does it necessarily
comply with non-interference? Why or why not?

	It does not comply with non-interference, because in BLP there is a possibility of
	High level interfering with Low level through cover channels, which does not meet
	non-interference.

2. What would the NI policy be for a BLP system with subjects: A at (Secret: Crypto),
B at (Secret: Nuclear)?

	Neither can interfere with the ofther since one does not dominate the other.

3. Can covert channels exist in an NI policy? Why or why not?

	Yes, but ONLY IF the covert channel transmits information from the lower subject
	to the higher and NOT vise versa, since the second case would allow the higher
	subject to interfere with the lower object (transmiting information down).

4. If the NI policy is A-> B, in a BLP system what combinations of the
levels “high” and “low” could A and B have?

	A:	low	|	low	|	high
	
	B:	high	|	low	|	high



Lecture 18

1. Why do NI policies better resemble metapolicies than policies?

	The policies of NI are much more abstract and hard to prove compared to the other
	policies we have looked at. There are still steps needed to prove that as a whole
	the policies meet the metapolicy.

2. What would be L’s view of the following actions:
h1, l1, h2, h3, . . . , hj, l2, l3, . . . , lk

	l1, l2, l3,....., lk,...

3. What is difficult about proving NI for realistic systems?

       "- Interferences are very common in real systems
	- Most involve low-level system attributes
	- Many "interferences" are benign"



Lecture 19

1. Explain the importance of integrity in various contexts.

	In all contexts where integrity is important, there needs to be a way maintain
	integrity through evaluation of contributers and subjects of the system. Integrity
	may be important for many reasons: you need the info to be accurate, you need to
	be able to use the information without having to check over it, trusting subjects
	to edit the information, etc.

2. Why would a company or individual opt to purchase commercial software rather
than download a similar, freely available version?

	"A certified application may have more integrity than freeware downloaded form the
	Internet." Also, since the software is free and open, it could be possible that
	someone who contributed to the software left themselves a back door.

3. Explain the difference between separation of duty and separation of function.

	Sep. of duty: One critical function must be competed by several different subjects

	Sep. of function: One individual can not perform two different critical functions

4. What is the importance of auditing in integrity contexts?

	"If something bad does happen, you can go back and assign responsibility and
	perhaps, you know, role back or take care of whatever the problem was."

5. What are the underlying ideas that raise the integrity concerns of Lipner?

	- The person who is using the software, should not have written it

	- Tests are done with non-real data, which could skew results

	- Moving applications should be done in a way that keeps integrity
		- Which needs to be able to controled and audited

6. Name a common scenario where integrity would be more important than
confidentiality.

	Facebook, you likely do not care who sees your posts, however you would not like
	anyone else being able to post new posts or even editing your old/current posts.



Lecture 20

1. Give examples of information that is highly reliable with little sensitivity
and information that is not so highly reliable but with greater sensitivity.

	Highly reliable with little sensitivity: Newspaper

	Not so highly reliable but with greater sensitivity: Religious book

2. Explain the dominates relationships for each row in the table on slide 4.

	1: Expert >= Student and Physics is a superset of Physics so it dominates

	2: Novice ! >= Expert and Physics, Art is a superset of Physics so it does not
	dominate

	3: Student >= Novice and Art is a superset of nothing so it dominates

3. Construct the NI policy for the integrity metapolicy.

	A >= B then A|->B, if A dominates B then:
		- A is not able to read down to B
		- B is not able to write up to A.
	

4. What does it mean that confidentiality and integrity are “orthogonal issues?”

	This means that condidentiality and integrity are not related to eachother, one
	does not imply the other. Therefore they need to be treated seperately in a system
	that has a need for both.
	



Lecture 21


1. Why is Biba Integrity called the “dual” of the BLP model?

	Because it is simply the same as the BLP model, except that you change the way
	the dominates points in the two properties.

2. Why in the ACM on slide 5 is the entry for Subj3 - Obj3 empty?

	Because neither dominates the other, so there can be no reading or writing.

3. If a subject satisfies confidentiality requirements but fails integrity requirements
of an object, can the subject access the object?

	No, it has to meet the requirements of both integrity and confidentiality in order
	to access the object.



Lecture 22

1. What is the assumption about subjects in Biba’s low water mark policy?

	They are the lowest possible label they can be, they will slip and read stuff
	lower than themself and become contaminated with less trustworthy info.

2. Are the subjects considered trustworthy?

	No, once they have read something lower than their current label, their label
	drops to that level. 

3. Does the Ring policy make some assumption about the subject that the
LWM policy does not?

	Yes, it makes the assumption that the subject is able to weed out the bad info that
	it reads, since it is able to read everything, and that if it reads something bad
	it can see that in the context it read it in.

4. Are the subjects considered trustworthy?

	Yes, they are trustworthy and have an ability to wee out bad info.



Lecture 23

1. Are the SD and ID categories in Lipner’s model related to each other?

	Yes, SD is part of what ID is in the Intergrity side of the model. SD and SSD make
	up ID in confidentiality, and in Integrity both SD and SSD are considered one
	under ID.

2. Why is it necessary for system controllers to have to ability to downgrade?

	Because there is no obvious and easy way to have a object change labels, in this
	case to go from development to production. This ability to downgrade covers this
	case and is a hybrid of what we have seen in the earlier class that gives us an
	exception case that allows us to change labels, tranquility.

3. Can system controllers modify development code/test data?

	They are only able to modify programs under development but NOT system programs
	in development.
	

4. What form of tranquility underlies the downgrade ability?

	Weak tranquility, it gives a clear sense of one of the changes that can be made
	that will not hurt the "spirit" of the system.



Lecture 24

1. What is the purpose of the four fundamental concerns of Clark and Wilson?

	To ensure integrity in a commercial style system.

	Authentication: Only let the people who should be able to access data, to be able
	to access it.

	Audit: If something is changed and we need to revert back or we need to see who
	performed the action, then we are able to do this through the log.

	Well-formed transactions: Data is only changed in certain ways so that integrity
	is not broken with an illegal transaction or a poorly done transaction.

	Separation of duty: Preserves consitency and integrity by using the idea that
	putting your trust into two people for the same transaction is better and more
	likely to be done properly than if it was only overlooked by one person.

2. What are some possible examples of CDIs in a commercial setting?

	Passwords, schematics, plans of any sort, legal documents.

3. What are some possible examples of UDIs in a commercial setting?

	soda selection in the soda machine, color of hard hats, break room fridge.

4. What is the difference between certification and enforcement rules?

	Certification is a way that ensures that the steps are legal to the system and
	that they do not hurt the system.

	Enforcement enforces that the certification rules were followed and not worked
	around.

5. Give an example of a permission in a commercial setting.

	(John, submit parts request {fenders, bumpers, doors})



Lecture 25

1. Why would a consultant hired by American Airlines potentially have a
breach of confidentiality if also hired by United Airlines?

	He could give United Airlines inside, confidential information about American
	Airlines that he only got because he was working for American Airlines.

2. In the example conflict classes, if you accessed a file from GM, then sub-
sequently accessed a file from Microsoft, will you then be able to access
another file from GM?

	No, this breaches the *-property, you could be swapping information through
	another companies files as an intermediary. Two companies that conflict could
	go to a company that is nonconflicting to both of them and transfer information
	through this company.


3. Following the previous question, what companies’ files are available for
access according to the simple security rule?

	Microsoft, GM and one of Bank of America, Wells Fargo, or Citicorp

4. What differences separate the Chinese Wall policy from the BLP model?

	The Chinese Wall is a policy that addresses a certain type of problem, conflicts
	of interests between subjects. BLP is much more general, trying to solve
	confidentiality as a whole, while CW tries to address one problem.



Lecture 26

1. What benefits are there in associating permissions with roles, rather than
subjects?

	Assigning permissions based on roles, rather than subjects, makes it much easier
	when you are assigning permissions for a very large company that has a lot of
	subjects that need to be assigned labels. When assiging based on roles many
	subjects fall under the same role, and you are able to assign permissions to
	these larger groups. This makes assigning permissions much easier.


2. What is the difference between authorized roles and active roles?

	Authorized roles are the set of all roles it is allowed to fill at various times.

	Active roles are a subset of roles that the individual is currently occuping.

3. What is the difference between role authorization and transaction authorizaion?

	Role autorization says that any of the active roles you have must come form the
	roles that you are authorized to do.

	Transaction authorization says that any transaction you take must fall under a
	role that you is currently active for you.

4. What disadvantages do standard access control policies have when compared to RBAC?

	SAC policies are much less flexible, they must assign each subject individually
	even if multiple have the same job/role, it is hard to give permission to the
	entire or a large part of the subjects, one subject typically has one role and
	cannot have many, and it is hard for a subject to easily change permissions if
	needed EVEN IF the system allows for it.



Lecture 27


1. Why would one not want to build an explicit ACM for an access control
system?

	"Because in realistic systems most subjects don't have any access to most objects"

	Also, t is easy to compute if an access is authorized or not very easily in many
	systems on the fly. It is also likely that the ACM will be very large and very
	sparse, wasting memory when their is an easier alternative.

2. Name, in order, the ACM alternatives for storing permissions with objects,
storing permissions with subjects and computing permissions on the fly.

	1. Access control list (ACL), contains pairs of subjects and its permissions to
	that object.

	2. Capability-based system, contains pairs of objects and its permissions that the
	subject has to that object. However there needs to be some solution that checks
	that when the subject passes this that it is not faked, this has a major security
	issue.

	3. Maintain a set of rules to compute access permissions based on attributes of
	subjects and objects, simply using the rules to check them on the fly


Lecture 28

1. What must be true for the receiver to interpret the answer to a “yes” or “no”
question?

	It must be able to transmit one bit, a 0 or 1, and the reciever and sender must
	have a scheme or interpretation of what each option represents.

2. Why would one want to quantify the information content of a message?

	To make it as efficient as possible and allow the best flow of information accross
	a channel.
	
3. Why must the sender and receiver have some shared knowledge and an
agreed encoding scheme?

	They must know how to enode (if needed) and how to interpret (decode) the message

4. Why wouldn’t the sender want to transmit more data than the receiver needs
to resolve uncertainty?

	This adds uneeded data transmission in the system which just adds more noise and
	could also just be over complicating or even causing more uncertainty rather than
	resolving it.

5. If the receiver knows the answer to a question will be “yes,” how many bits
of data quantify the information content? Explain.

	One bit, so that the receiver knows that the sender got the question.



Lecture 29

1. How much information is contained in each of the first three
messages from slide 2?

	1. n bits

	2. 4 bits

	3. 7 bits

2. Why does the amount of information contained in “The attack is at dawn” depend
on the receiver’s level of uncertainty?

	If the only uncertainy were whether the attatck was at dawn or dusk: one bit

	If uncertain and it could be at any part of the day: Not sure on amount of bits
	could depend on if they wanted to know the hour, minute or even second.

	If the day was uncertain: even more bits would be needed.

3. How many bits of information must be transmitted for a sender to send one
of exactly 16 messages? Why?

	4 bits, because each bit splits the number of possible answers in half.

	16/2 = 8, 8/2 = 4, 4/2 = 2 and 2/2 = 1 and that last bit gives you your message.

4. How much information content is contained in a message from a space of
256 messages?

	8 bits

5. Explain why very few circumstances are ideal, in terms of sending information content.

	Because you do not know the number of possible messages that could be sent, so
	some other encoding scheme, like ASCII, may need to be used.



Lecture 30

1. Explain the difference between the two connotations of the term “bit.”

	The bit we are used to using is a binary digit, it is a discrete thing, a 0 or a
	1. However the bit we are now refering to is a measurement of information content
	which is a continuous quantity.

2. Construct the naive encoding for 8 possible messages.

	1. 000
	2. 001
	3. 010
	4. 011
	5. 100
	6. 101
	7. 110
	8. 111

3. Explain why the encoding on slide 5 takes 995 + (5 * 5) bits.

	For 99.5% of messages sent there is a m10 sent "0", and the other 5% will the an
	arbritrary message from m0 to m15 (excluding m10) which each take up 5 bits.

	99.5% * 1000 messages * 1 bit + .5% * 1000 messages * 5 bits
	= 995 + 25 = 995 + (5 * 5) bits

4. How can knowing the prior probabilities of messages lead to a more efficient encoding?

	It allows you to encode more efficiently by making the scheme of encoding fit the
	probablilities. The higher the probability the shorter the encoding should be for
	the message (if possible). This concept is used in Huffman Coding in real systems.

5. Construct an encoding for 4 possible messages that is worse than the naive
encoding.

	1. 100
	2. 101
	3. 110
	4. 111


6. What are some implications if it is possible to find an optimal encoding?

	The probabilities of messages are the same and the system always acts the same.



Lecture 31


1. Name a string in the language consisting of positive, even numbers.

	24886101618224618

2. Construct a non-prefix-free encoding for the possible rolls of a 6-sided die.

	1. 0
	2. 1
	3. 01
	4. 10
	5. 011
	6. 101

3. Why is it necessary for an encoding to be uniquely decodable?

	So the receiver has NO uncertainty in what the sender intended to send.

4. Why is a lossless encoding scheme desirable?

	So that information is never lost while transfering it.

5. Why doesn’t Morse code satisfy our criteria for encodings?

	It is not streaming, there are breaks in the code and it is not continuous.



Lecture 32

1. Calculate the entropy of an 8-sided, fair die (all outcomes are equally likely).

	h = -log2(1/8) = log2(8) = 3

2. If an unbalanced coin is 4 times more likely to yield a tail than a head, what
is the entropy of the language?

	Tails: 4x

	Heads: x

	5x = 1 => x = 1/5

	h = -(1/5log2(1/5) + 4/5log2(4/5)) ~= .722

3. Why is knowing the entropy of a language important?

	It gives you the optimal encoding in bits per symbol, which can be used as a goal
	for the encoding scheme you use. You can get a sense of how good your encoding
	scheme is compared to what it could be.



Lecture 33


1. Explain the reasoning behind the expectations presented in slide 3.

	HH: 3/4 * 3/4 = 9/16, appears 9 times since 9/16 * 16 = 9

	HT: 3/4 * 1/4 = 3/16, appears 3 times since 3/16 * 16 = 3

	TH: 1/4 * 3/4 = 3/16, appears 3 times since 3/16 * 16 = 3

	TT: 1/4 * 1/4 = 1/16, appears 1 times since 1/16 * 16 = 1

2. Explain why the total expected number of bits is 27 in the example presented
in slide 4.

	HH: 9 * 1 bit =  9 bits used for HH
			 +
	HT: 3 * 2 bits = 6 bits used for HT
			 +
	TH: 3 * 3 bits = 9 bits used for TH
			 +
	TT: 1 * 3 bits = 3 bits used for TT
			 =
	Total:		27 bits total
	

3. What is the naive encoding for the language in slide 5?

	1: 000
	2: 001
	3: 010
	4: 011
	5: 100
	6: 101

4. What is the entropy of this language?

	1:	6x
	2:	6x
	3:	3x
	4:	3x
	5:	x
	6:	x
	Total:  20x

	20x = 1 => x = 1/20

	h = -(6/20log2(6/20) + 6/20log2(6/20) + 3/20log2(3/20) + 3/20log2(3/20)
		+ 1/20log2(1/20) + 1/20log2(1/20))

5. Find an encoding more efficient than the naive encoding for this language.

	1: 00
	2: 01
	3: 10
	4: 110
	5: 1110
	6: 1111

6. Why is your encoding more efficient than the naive encoding?

	For 20 rolls the naive encoding takes:

	6/20 * 20 * 3 + 6/20 * 20 * 3 + 3/20 * 20 * 3 + 3/20 * 20 * 3 + 1/20 * 20 * 3
		+ 1/20 * 20 * 3 = 18 + 18 + 9 + 9 + 3 + 3 = 60 bits total

	For 20 rolls my encoding takes:

	6/20 * 20 * 2 + 6/20 * 20 * 2 + 3/20 * 20 * 2 + 3/20 * 20 * 3 + 1/20 * 20 * 4
		+ 1/20 * 20 * 4 = 12 + 12 + 6 + 9 + 4 + 4 = 47 bits total

	Therefore my encoding is more efficient since it only take 47 bits for 20
	rolls rather than the 60 with the naive encoding.



