Name: Yun Jang
EID: ysj238
CS Login: yunjang
Email: yunsjang@gmail.com

CS 361 - Question Assignment #2


Lecture 17

1) Not necessarily. This is because the BLP model allows transitive properties where as the NI policies do not allow such properties.
	Because BLP allows transitive properties, it would allow covert channels; NI policies reduce chances of covert channels by limiting
	any chances of covert channels by preventing high level subject from ever communicating with the low level.

2) The NI policy for the subjects in this question would mean neither subjects would communicate with each other as their levels are equal
	and not dominating of each other.

3) No, it wouldn't be able to exist in an NI policy because the high level subject must never communiate with the low level subject in a NI policy.
	So in the end, anything that the high level subject does should not be visible to the low level subject.

4) B is the higher subject and A is the lower; so any combination of labels would work as long as B is dominant over A.


Lecture 18

1) NI policies better resemble metapolicies than policies because it takes security in a more exclusive way. For example, if a policy states that
	L can interfere with H, it means that only L can mess with H but H cannot do anything that is visible to L. It pretty much prevents the "vice
	versa" methods from happening.

2) L's view in the action would be: l1, l2, l3, ... lk. It wouldn't be able to see anything that H is doing.

3) Interference is very common and it's impossible to prevent all of them. Additionally, some interferences are harmless as it can't act as a mean of 		transferring information. So overall, it's difficult to prove NI for a realistic system because there are too many cases that can happen and 
	too many things to check for. 


Lecture 19

1) An example would be in a work place where there are engineers working on a new device. The security guards in the front monitor engineers who
	leave to ensure they are not taking off with the commercial sensitive data. If no security guards were in place, the engineers would have freedom
	to take whatever information they please.

2) The subject would more than likely use commercial software as the object's label of trustworthiness would be significantly greater
	than a freeware.

3) Separation of Duty is where there must be an additional process in a duty to prevent breach in security. For example, if someone wanted to check out
	a tool, not only does the lender have to know but a computer system must also know it has been checked out (or another person). Separation of 
	Function is where a person cannot have a role that acts as a lender and an auditor. An example would be the person who is checking out the tools; 
	they cannot have the role of the tool auditor. Otherwise they would be able to lend out tools to a friend and then say it has been returned in the
	systems.

4) Auditing is important in integrity because it allows you to keep a log of all the actions in a system. Additionally, with those logs, you are able to
	to keep a audit trail which will allow you to recover from possible issues in a system.

5) The underlying ideas that concerned Lipner was that the workers don't actually write their own program -- they're using the programs that were
	already existant at the company. Additionally, employees are working with sensitive data which the company would not want to release to the 
	the employees and they are working on an environment that would eventually be pushed to production. While all this is happening, it is possible
	that there could be integrity issues among the employees.

6) A common scenario would be online shopping. Online shoppers are frequently storing their financial information, such as credit or debit cards, 
	that let them easily purchase things from the website. The employees who handle the account information and its data would be facing major
	integrity issue rather than confidentiality since they would have access (although encrypted) to customers' sensitive data.


Lecture 20

1) An example of highly reliable with little sensitivity would be class lectures. They have information is reliable to for learning and passing classes
	(like this class) but not exactly sensitive. However, knowing and overhearing someone's credit information isn't very reliable but it definitely
	would be listed as sensitive data.

2) Answers:
	An expert in physics would obviously dominate a student that is learning physics. So this is straight forward in terms of integrity.
	A novice that majors in physics and art would not dominate an expert in physics as the integrity of the novice is lower than of the expert's.
	A student that is majoring in arts would dominate over a person that has simply earned their high school GED.

3) An NI policy for the integrity metapolicy would be that whatever the bad (low integrity) information does, it cannot be visible to the good
	(high integrity) information. Basically, Good -> Bad. Since information of integrity should not flow up. 

4) It means that the two issues must be treated separately. Since they don't exactly relate to each other exactly (other than the BLP rules).


Lecture 21

1) It is called the "dual" of BLP because it is basically the reverse of BLP in terms of policies. The Simple Security Policy and the *-Property of
	integrity is the reverse of the BLP's policies.

2) That section is empty because the Subject has label access for Low A and B but not for the C. And since we can only interact with the 
	objects that have the same security labels, the subject is unable to read or write.

3) No, it cannot. It must meet both confidential and integrity labels otherwise its access to the object is rejected.


Lecture 22

1) Biba's LWM Policy pretty much assumes that its subjects will not know whether information is good or bad. So if it does end up reading
	bad information, it will be forced to float down in security labels.

2) Basically, the LWM Policy does not consider its subjects trustworthy at all.

3) The Ring Policy makes the assumption that its subjects have common sense to avoid bad information, unlike the LWM policy. This gives the 
	Ring Policy subjects more freedom in terms of reading.

4) Basically, the Ring Policy considers the subjects trustworthy and does not enforce strict measures to prevent them from making intentionally
	or accidentally accessing bad information.


Lecture 23

1) Yes. The SD is the confidentiality part of Development, where programs are under development. ID is the integrity part of Development.

2) Because moving from development to production requires the system to change the objects' labels. The downgrade ability gives the system 
	controller just that.

3) No because the System Controller does not have the same security labels of confidentiality and integrity like the Development Code/Test Data does.

4) It would be the Weak Tranquility property that underlies the downgrade ability as it is within the "spirit" of system security and can change
	during the lifetime of the system.


Lecture 24

1) The ensure that commercial integrity is maintained in a way that is secure and cannot be manipulated and maintains consistency.

2) A possible example of constrained data items (CDI) is private user information on a shopping site such as Amazon. Their credit and bank information
	would be kept private to the employees as that is sensitive data. Another would be your social security number or bank information in a work place. The company would need to ensure that your personal information is kept constrained in a way.

3) Examples of unconstrained data items (UDI) would be public information on Amazon, such as the number of items you sold, what you have sold, and 
	your ratings, etc. This is visible to both users and the company to act as a rating system. Another would be your employee information to be used
	within the company. The company would release your information within the company to contact you or some other business related matters.

4) Certification makes sure that whatever subject is trying to perform some sort of action involving integrity, that they must have the proper
	permissions to perform that action. Enforcement ensures that those certifications are met in order to perform any sort of action.

5) An example of a permission would be a user trying to add a credit card information to a shopping site. 
	An example as a set of triples: (userOne, addCardInformation, {nameOnCard, cardNumber, securityCode}).


Lecture 25

1) There would be a potential breach of confidentiality as the consultant may have accessed American Airlines files and then gave that 
	company's information to the United Airlines.

2) Yes, because the file from GM is not within the same conflicting class. Microsoft is a different conflict class that is not within 
	GM's conflicting class.

3) The companies' files that are available for access according to the simple security rule are the company's files that are "within the Wall."
	For example, if you accessed Ford's company files, then you would only be able to access Ford's company files and not of GM's or Chrysler's.

4) The differences between Chinese Wall and BLP is that the Chinese Wall is designed especially for a specific problem. Additionally, the access
	control policy of the Chinese Wall is dependent on the history of past accesses. BLP has no such polciy and relies on the security labels.


Lecture 26

1) The benefits are that it is more appropriate for a commercial setting in general and the permissions are all associated with a 
		job/function/role which makes it a lot easier to comprehend.

2) Authorized roles are the roles that a subject is allowed to do at various times. Active roles is a role that the subject is currently doing.

3) Role Authorization is where a subject's active role must be an authorized role to the subject. Transaction Authorization is where a 
		subject can only execute a transaction only if the transaction is authorized for one of the subject's active roles.

4) The standard access control policy is not as easy to administer and it is more troublesome to assign permissions in a larger group. 
		RBAC allows subjects to be assigned a "role" which is basically assigning them certain permissions (so you can see that it would be 
		easier in larger company groups).


Lecture 27

1) An explicit ACM is way too expensive and unnecessary. On top of that, most systems the subjects don't have access to most objects.

2) The ACM alternatives are: Access Control Lists (ACL), Capability-Based Systems, and maintain a set of rules based on the attributes
			of the subjects and objects.


Lecture 28

1) The receiver must know what the sender is saying when it sends a "yes" or "no." It must know how interpret the information that 
		is coming in order to use it.

2) One would want to quantify information content of a message in order to be able to send more than one messages at a time. 
		Basically, this allows greater amount of data to be sent.

3) The sender and receiver must have shared knowledge and an agreed encoding scheme in order to understand where the amount of information 
		is coming in and how to read it due to security.

4) Sending more data than the receiver need will not resolve uncertainty. If the receiver does not know the encoding scheme of the 
		data that the sender is sending, it won't be resolved.

5) It would still require a single bit of information. This is because even though it knows the answer will be "yes", the receiver 
		will still know that there can be two forms of answers that can come in based on the shared knowledge with the sender 
		(which is either a yes or a no).


Lecture 29

1) Answers:
		In the first message, there are n-bits of information contained.
		The second contains a 4-bits of information.
		In the third, there are 7-bits of information.

2) It depends on the receiver's level of uncertainty as there could be a varying amount of information that could answer the 
			message by the sender. For example, if it was simply a question of dawn or dusk, then it would require a single bit. 
			If it required a specific time, it would require whatever number of bits to signifiy a specific time of the day. And so on.

3) It requires 4 bits. This is because 4-bits allows 16 different possible pieces of information that the sender can send. 

4) There would be 6-bits of information content contained in a message from a space of 256 messages.

5) Very few circumstances are ideal because not every case the sender sends is as straightforward as some examples 
		(the level of uncertainty is not always low for the receiver). 


Lecture 30

1) The first definition is that a bit is a discrete binary digit. The second is that it is a quantity of continuous information.

2) For 8 possible messages, the naive encoding would be to use only 3 bits. 

3) It takes 995 messages because message 10 happens 99.5% of the time. The other five is because since message 10 occurs so frequently,
	we allocate another bit to the front of all the other bits since they occur less and we can save some bit overhead. And the (5 * 5) 
	occurs because there are 5 other messages that occur that have 5 bits on them (giving us a total of 1020 bits instead of 4000).

4) It is because you basically know how often a certain message will appear in a sequence of messages. Allowing you to use the extra bits
	on messages that are less frequently obtained.

5) You could just move a single bit to the rest giving us 1 bit on message 0 and 3 bits on message 1, 2, and 3. On average, that'll end up 
	being 10 bits total (if every single message was received once). With the naive encoding, it would be 8 on average.

6) The implication for finding an optimal encoding would be that you would get the best bit encoding for that language resulting in
	the lowest "on average" of bits used.


Lecture 31

1) Say the language only uses positive, even numbers (2, 4, 6, 8). A possible string in that language would be "2468642."

2) A non-prefix-free encoding for a six sided die would just be the naive encoding (000, 001, 010, 011, 100, 101).

3) There must be a unique decodability because otherwise you may end up with different information during the transmission. This will cause
	information to be corrupted or unusuable.

4) Lossless is preferable as it allows us to go back and recover the entire original sequence that was sent during the transmission.

5) Morse code does not satisfy our criteria because it is not streaming. There are breaks in each letters.


Lecture 32

1) The entropy would be shown by the equation: h = -(1/8 * log(1/8) + ... + 1/8 * log(1/8)) = 3.

2) Since tail is 4 times more likely, that means tails will occur 4/5 and heads will occur 1/5.
	The formuala gives us: h = -(4/5 * log(4/5) + 1/5 * log(1/5)) = 0.217.
		
3) It gives you the lowest number of possible bits of encoding for that language. Basically, it'll give you the most optimal encoding.


Lecture 33

1) It is because of the result of each flip is independent of each other. And since each head on the coin was three times more likely
		than the tail, it came out to be that HH was (3/4 * 3/4) = 9/16.

2) The total expected number of bits was 27 because of the different encoding that was used instead of the naive encoding. Since the HH 
		outcome happened more frequently, it only required a single bit (while others required 2 or 3 bits of information).

3) The naive encoding is 3 bits as there are six possibilities and we need 3 bits to cover them.

4) The entropy is: h = -( 2(6/20 * log(6/20)) + 2(3/20 * log(3/20)) + 2(1/20 * log(1/20)) = 0.691.

5) The naive encoding requires 60 bits to get the information across. My encoding (where the most likely uses a single bit, the next 
		most likely uses 2-bits, and so on) only requires 36 bits. This gives me an efficiency of 0.6.

6) My encoding is more efficient as it uses less bits on the more likely options. This lead to me only having to use 36 bits of information
		to encode the example given on slide 5 -- giving me an efficiency of 0.6 bits instead of the 3-bits of naive encoding.