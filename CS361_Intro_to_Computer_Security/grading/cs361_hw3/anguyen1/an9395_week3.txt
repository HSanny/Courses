Andrew Nguyen
an9395
anguyen1
anguyen11@utexas.edu

Lecture 34
1) If the channel's capacity is C bits/sec, then no matter how much info is
   being produced only C bits can be transfered in a second. The average
   transfer rate is limited by the communication medium.

2) Increasing the redundancy allows the receiver to more certain of the
   message that the sender is trying to convey. It provides more chances
   for a clear message to make it through the noise.

Lecture 35
1) -log(1/10)

2) There is a lot of redundancy in natural languages. 

3) Zero-order model assumes all symbols are equally likely. First-order 
   model calculates entropy with the probabilities of each symbol. Second-
   order model takes into account the likelihood of a symbol after another
   symbol. Third-order model uses the probabilities of a symbol after two
   symbols. 

Lecture 36
1) Prior probabilities are sometimes impossible to compute, because there
   might not be any reliable prior data from which to predict probabilities.

2) Some observers have more prior knowledge than others. So if a message
   contains info that they already know, then there was no information
   gained. However, if they did not already know what was in the message, 
   then they gained whatever the contents of the message was.

3) As redundancy goes up, the encoding efficiency moves further away from
   entropy. When there is no redundancy at all, the encoding efficiency is
   exactly the entropy.

Lecture 37
1) The encryption is made up of numbers and symbols, but no letters. I assume
   that there is a symbol for the 26 letters of the English alphabet and one
   more symbol for space. 

2) Keys are optional, because sometimes it is possible to encrypt or decrypt
   a message without the key.

3) It should have no effect on the content. 

4) A cryptoanalyst could use the redundancies inherent in a language to
   try to decode an encrypted message. They know which letters are most 
   likely to appear and which letters are most likely to appear together.

Lecture 38
1) P

2) C

3) Patterns might indicate frequently used words or phrases and may lead to
   some information being gleamed from the symbols in those patterns.

4) Knowing which symbols in a language are used most frequently, may make it
   easier to find out which symbols in the encryption are associated with
   which symbols in the language.

Lecture 39
1) It might take too much time to try every possible key.

2) A key that is a bit string of length n has 2^n possibilities. Searching
   linearly will find the correct key on average half way through all of
   the possible keys. Thus an average search time of 2^(n-1) operations.

3) Almost all modern ecryption algorithms use substitution and transposition
   in some combination.

4) Confusion is the transformation of plaintext. Diffusion is the spreading
   of a section of transformed text throughout the ciphertext.

5) Confusion. It's probably easier to descramble a diffused text, especially
   if you have a some information about what the content of the message
   should be. 

Lecture 40
1) Both monoalphabetic and polyalphabetic substitution involve subsituting
   one symbol for another symbol. However, while monoalphabetic substitution
   does this uniformly, polyalphabetic substitution does uses different
   substitutions depending on which part of the plaintext you are in.

2) The key in a simple substitution cipher is something that specifies the
   mapping from plaintext symbol to ciphertext symbol.

3) A plaintext with k symbols will be encoded into a ciphertext with k
   symbols. For the first symbol in the plaintext there are k possible
   symbols that it was substituted for. The second, k-1 possible symbols.
   The third, k-2 possible symbols, and so on. Thus there are a k! possible
   mappings from plaintext to ciphertext.

4) The key in a Caesar Cipher is the size of the shift.

5) 25

6) No

7) Use the letter in the ciphertext and the letter in the key to find the
   letter in the plaintext.

Lecture 41
1) There are 26^3 possible 3-letter combinations. Thus there are 17576 
   possible decryptions for "xyy"

2) If we assume that it is a simple substitution, then the y's correspond to
   the same letter, and x corresponds to a different letter than y. So there
   are 26 possible letters for x and 25 possible letters for y. 26 * 25 = 
   650.

3) Yes, but you have to change the cipher everytime.

Lecture 42
1) Even if the attack has access to the ciphertext and knows that the sender
   is using a one-time pad, the corresponding plaintext could be anything.

2) If you know anything about a key, then you can eliminate some of the 
   plaintext. Thus to be a perfect cipher, the key needs to be random.

3) The key distribution problem is how do the sender and the receiver tell 
   each other the key without an attacker finding out. If there is a secure
   channel to communicate then why not just use that. If there is no secure
   channel then there is no way to guarantee that an attacker will not
   intercept the key.

Lecture 43
1) The downside of encryption by transposition is that it doesn't replace
   the characters. They still appear with the same frequency as in the
   plaintext.

Lecture 44
1) Symmetric

2) Key distribution is the problem of sharing keys  between a sender and a
   receiver. Key managment is the problem of making sure that a set of keys
   is kept safe and that the correct key is being used.

3) No because a different key is used to decrypt S's messages.

4) It depends on the situation. Symmetric keys are easy to generate and are
   of shorter length. In a public key system, keys are hard to generate and
   are much longer than keys in a symmetric encryption system. However, 
   public keys can be distributed easily while symmetric keys cannot.

Lecture 45
1) Block encryption makes it easier to do polyalphabetic substitution or
   transformations.

2) If an encryption algorithm is malleable, then changing the ciphertext can
   result in meaningful changes in the plaintext. This would allow an
   attacker to alter the message so that the receiver reads an incorrect
   message without knowing it.

3) Homomorphic encryption allows for controlled changes to the ciphertext
   resulting in meaningful plaintext. This allows for chaining services
   while keeping data safe betwen those services.

Lecture 46
1) subBytes, mixColumns, and addRoundKey. It replaces each byte in the array
   with a value from a lookup table. After some shifting, the matrix is
   altered some by multiplication and then XOR'd with a key.

2) shiftRows. It shifts the ith row in the state by i.

3) Decryption takes longer because the inverting the mixColumns step takes
   more time. 

4) The message is turned into 128-bit blocks. These blocks then undergo 
   several rounds of transformations.

5) More rounds in AES would make it even harder for an attacker to crack the
   encryption.

Lecture 47
1) A disadvantage of using ECB is that identical blocks in the plaintext
   yield identical blocks in the ciphertext because the same key is used.

2) Change the blocks before they are encrypted. An example of this is CBC.

3) In CBC, an attacker is able to observe changes to ciphertext over time
   and can spot the first block that is changed. Also, the attacker can
   derive information about two plaintext blocks if he finds two identical
   ciphertext blocks.

4) In key stream generation, the cipher is used as a pseudorandom number
   generator to generate a key stream. The stream can then be used like a
   one-time pad. Standard block encryption simple reuses the same key over
   and over again. 

Lecture 48
1) The decryption key

2) One-way functions are easy to compute if but difficult to invert. This
   applies to public keys because they can be used so that it is easy to
   decrypt a message if you have the key, but very hard to do so if you do
   not.

3) Public key systems don't care who has the encryption key, and distribute
   it freely. They just need to keep the decryption key safe.

4) {P}k-1

5) Asymmetric algorithms take much longer to encrypt than symmetric 
   algorithms because they depend on more complex operations.

Lecture 49
1) Yes. In RSA, both keys work for encryption and decryption.

2) It is easy to multiply two prime numbers, but hard to factor the product.
   This provides the one-way function for RSA.

3) Yes. It will just take a lot of time, especially if the primes are large.

4) They don't have the private decryption key.

5) Anyone has access to the public encryption key so anyone can impersonate
   B and send an encoded message.

6) Only, B has access to its secret key so only it could encode the message
   with its secret key.

7) To decrypt it, you need the public key which anyone has access to.

8) Use a symmetric algorithm and keep the key between only A and B.

Lecture 50
1) So that it is easy to look up.

2) In weak collision resistance, for a particular m it is difficult to find
   m' s.t. they share the same hash. In strong collision resistace, it is
   hard to find any pair of unique messages that share the same hash.

3) Preimage resistant means that given a hash, it is hard to find the
   original message. Second preimage resistant means that given a message 
   and its hash, it is hard to find a different message with the same hash.

4) It would take an average of 1.25 * 2^64 values to find a collision.

5) It would take an average of 1.25 * 2^80 values to find a collision.

6) Cryptographic hash functions aren't used for confidentiality because a 
   hash value might have many possible messages that it could be read as.

7) Changing any bit in M results in a change to H(M).

8) B could send a message encoded using A's public key and a hash of the
   message. Now only A can ensure that it is the same message via the hash
   and decrypt it using its private key.

Lecture 51
1) No because S doesn't know R's private key.

2) Yes. If done in the other order, an attacker could use S's public key to
   see the encrypted message, but he will have no way to see the contents.
   And the attacker cannot falsify a message using R's public key, because
   he still doesn't have access to S's private key.

3) No. There is an extra encryption using S's public key.

4) Confidentiality and authentication

Lecture 52
1) Nothing. They still need secret number b to find the key.

2) Then if they knew p, they could listen in to find (g^b mod p) and solve
   for the key.

3) Then if they knew p, they could listen in to find (g^a mod p) and solve
   for the key.
