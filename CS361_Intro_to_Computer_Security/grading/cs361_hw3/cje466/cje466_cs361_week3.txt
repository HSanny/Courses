Cristhian Escobar
UTEid: cje466

		CS361 Questions: Week 3


*****************************************************************************
############################ Lecture 34 ######################################
*****************************************************************************

1. Why is it impossible to transmit a signal over a channel at an average rate
   greater than C/h?

   Definition: Fundamental Theorem of a Noisy Channel (Shannon): Let a
    discrete channel have a capacity C and a discrete source an
    entropy h (bits per second). If h < C there exists a coding system
    such that the output of the source can be transmitted over the
    channel with an arbitrarily small frequency of errors.

  Answer: Since C denotes the number of bits that can be transmited over a given channel,
  then the on average higher then what the channel can hanndle.


2. How can increasing the redundancy of the coding scheme increase the reliability
of transmitting a message over a noisy channel?

  -> By increasing redundance it helps transmit the message across at a lower frequency. The 
  more noisy the channel the less that can be transmitted.


*****************************************************************************
############################ Lecture 35 ######################################
*****************************************************************************

1. If we want to transmit a sequence of the digits 0-9. According to the zeroorder
   model, what is the entropy of the language?

  ->  h = -(log base 2 of (1/10)) ==>   -3.3219  ==> 3.32 bits per symbol

2. What are reasons why computing the entropy of a natural language is difficult?

  ->Computing the entropy of a natural language is difficult and
   requires complex models because natural languages consist a a very large set of 
   symbols that produces a extremely large amount of possible combinations.

3. Explain the difference between zero, first, second and third-order models.
	zero: This gives an approximation to the entropy. But the underlying
        assumption is clearly false.
    first: Assuming that all symbols are independent of one another, but
       follow the probabilities above, the entropy is 4.219 bits per symbol.
       This is the “first-order” model of English. (page 5 from slides)
    second: The assumption of independence (zero memory) is also incorrect.
       Some letters follow other letters frequently; others not at all.


*****************************************************************************
############################ Lecture 36 ######################################
*****************************************************************************

1. Why are prior probabilities sometimes impossible to compute?
	-> Because The information content of a message is relative to the state
      of knowledge of an observer.

2. Why is the information content of a message relative to the state of knowledge
   of an observer?
   -> If the information content of a message is equal to the length of the 
   encoded message, there is no redundancy.

3. Explain the relationship between entropy and redundancy.
	->Note that entropy can be used to measure the amount of
      “redundancy” in the encoding. Redundancy has to do with the encoding scheme.


*****************************************************************************
############################ Lecture 37 ######################################
*****************************************************************************
1. List your observations along with their relevance to cryptography about
   Captain Kidd’s encrypted message.

  -> The underlying language in the message could be english, or moorse code.
  The numbers are either folloed by other numbers or symbols. Looks like it could
  be a sentence in english.

2. Explain why a key may be optional for the processes of encryption or decryption.
  -> When the encryption key is the same as the decryption key the key isn't
   really ncessary. It could be the case that its uniquely encodable.

3. What effect does encrypting a file have on its information content?
   ->A good encryption is suppose to presrve the contents of the file.

4. How can redundancy in the source give clues to the decoding process?
   ->Redundancy is the enemy of secure encryption because itprovides leverage to the attacker.


*****************************************************************************
############################ Lecture 38 ######################################
*****************************************************************************
1. Rewrite the following in its simplest form: D(E(D(E(P)))).
   ->     = D(E(D(C)))
   ->     = D(E(P)
   ->     = D(C)
   ->     = P

2. Rewrite the following in its simplest form: D(E(E(P,KE),KE),KD).

	->  = D(E(C,KE),KD)
  	->	= D(C^2,KD)
  	->	= C

3. Why might a cryptanalyst want to recognize patterns in encrypted messages?
	-> Because this could potentially rebeal what the pattern is trying to say.

4. How might properties of language be of use to a cryptanalyst?
   -> Encryption is designed to obscure the meaning of text.
      Redundancy is the enemy of secure encryption because it
      provides leverage to the attacker.


*****************************************************************************
############################ Lecture 39 ######################################
*****************************************************************************
1. Explain why an encryption algorithm, while breakable, may not be feasible
to break?
	-> Because sometimes the amount of times it takes to computy all the possible combinations is 
	just too much due to the entropy of the language.	

2. Why, given a small number of plaintext/ciphertext pairs encrypted under
key K, can K be recovered by exhausteive search in an expected time on the
order of 2n−1 operations?


3. Explain why substution and transposition are both important in ciphers.
	-> substitution: in which each symbol is exchanged for another (not
				necessarily uniformly), and
	transposition: in which the order of symbols is rearranged.
	
	It might seem that these are too naive to be effective. But almost
    all modern commercial symmetric ciphers use some combination of
     substitution and transposition for encryption.

4. Explain the difference between confusion and diffusion.
	-> Confusion: transforming information in plaintext so that an
                   interceptor cannot readily extract it.
       Diffusion: spreading the information from a region of plaintext
                  widely over the ciphertext.

5. Is confusion or diffusion better for encryption?

	-> It depends on what your overall goal is and what you think it's more inportant
	in terms of security. Both confusion and diffusion are important, diffusion us more difficult
	to trace because of the way the random spread.

*****************************************************************************
############################ Lecture 40 ######################################
*****************************************************************************
1. What is the difference between monoalphabetic and polyalphabetic substitution?
	->A substitution cipher is one in which each symbol of the plaintext
	is exchanged for another symbol. If this is done uniformly this is called a 
	monoalphabetic cipher or simple substitution cipher.
	If different substitutions are made depending on where in the
	plaintext the symbol occurs, this is called a polyalphabetic
	substitution.

2. What is the key in a simple substitution cipher?
   -> A simple substitution cipher is an injection (1-1 mapping) of the
      alphabet into itself or another alphabet.

3. Why are there k! mappings from plaintext to ciphertext alphabets in simple
substitution?
   -> A simple substitution is breakable; we could try all k! mappings
      from the plaintext to ciphertext alphabets. That’s usually not
      necessary.

4. What is the key in the Caesar Cipher example?
	->The Caesar Cipher is a monoalphabetic cipher in which each letter
	is replaced in the encryption by another letter a fixed “distance”away in the alphabet.
	
5. What is the size of the keyspace in the Caesar Cipher example?
   -> For example, A is replaced by C, B by D, ..., Y by A, Z by B, etc.

6. Is the Caesar Cipher algorithm strong?
 	-> Yes

7. What is the corresponding decryption algorithm to the Vigenere ciphertext
example?
	Vigen`ere Tableau

*****************************************************************************
############################ Lecture 41 ######################################
*****************************************************************************
1. Why are there 17576 possible decryptions for the “xyy” encoding on slide 3?
	->Because of 32-bits rised to the 3 for the number of possibilities.

2. Why is the search space for question 2 on slide 3 reduced by a factor of 27?
	Because 3^3 = 27 and 3 iw the number of possible encoding 

3. Do you think a perfect cipher is possible? Why or why not?
	No if time wasn't an issue and we could run all the possible permitations and
	try them to try to figure out the time. That right now it has a exponential time
	complexity.

*****************************************************************************
############################ Lecture 42 ######################################
*****************************************************************************
1. Explain why the one-time pad offers perfect encryption.
	-> A one-time pad, invented by Miller (1882) and independently by
	Vernam and Mauborgne (1917), is a theoretically perfect cipher.

2. Why is it important that the key in a one-time pad be random?
	-> 	The idea is to use a key that is the same length as the plaintext,
	and to use it only once. The key is XOR’d with the plaintext.

3. Explain the key distribution problem.

 -> Given the need to communicate securely, how do the sender and
	receiver agree on a secret (key) that they can use in the algorithm.
	If sender and receiver already have a secure channel, why do they need the key?

	If they don’t, how do they distribute the key securely?
	This is the key distribution problem.


*****************************************************************************
############################ Lecture 43 ######################################
*****************************************************************************
1. What is a downside to using encryption by transposition?
	-> Because it preserves the symbols of a text, transposition
	preserves letter frequencies but not digrams, trigrams, etc.

*****************************************************************************
############################ Lecture 44 ######################################
*****************************************************************************
1. Is a one-time pad a symmetric or asymmetric algorithm?
	-> asymetric

2. Describe the difference between key distribution and key management.
	-> Key distribution: how do we convey keys to those who need them
	to establish secure communication. Key management: given a large number 
	of keys, how do we preserve their safety and make them available as
	needed.

3. If someone gets a hold of Ks, can he or she decrypt S’s encrypted messages?
Why or why not?
	-> Each subject S has a publicly disclosed key KS (“S’s public key”)
     that anyone can use to encrypt, and a privately held key K−1
	 S (“S’sprivate key”).

4. Are symmetric encryption systems or public key systems better?
	-> Depends on the on what your goal is. If you have extremely confidential
	information you might want to spend some of your resources in a encrypted sytem.
	Else you can use public keys and you will be just fine.


*****************************************************************************
############################ Lecture 45 ######################################
*****************************************************************************
1. Why do you suppose most modern symmetric encryption algorithms are
block ciphers?
	->Because they are designed to process large volumes of text quickly, they use
	machine operations (arithmetic, bitwise, table lookup) that are
	cheap and easy to implement.

2. What is the significance of malleability?
	-> That it runs a risk of vulnerability because of the type of encrypture

3. What is the significance of homomorphic encryption?
	->Homomorphic encryption is a form of encryption which allows specific types of 
	computations to be carried out on ciphertext and generate an encrypted result which, 
	when decrypted, matches the result of operations performed on the plaintext. (From Wiki)



*****************************************************************************
############################ Lecture 46 ######################################
*****************************************************************************
1. Which of the 4 steps in AES uses confusion and how is it done?
	subBytes: for each byte in the array, use its value as an index
		into a 256-element lookup table, and replace byte by
		the value stored at that location in the table.
	shiftRows: Let Ri denote the i th row in state. Shift R0 in the
		state left 0 bytes (i.e., no change); shift R1 left 1
		byte; shift R2 left 2 bytes; shift R3 left 3 bytes.
	mixColumns: for each column of the state, replace the column by
		its value multiplied by a fixed 4×4 matrix of integers
	addRoundKey: XOR the state with a 128-bit round key derived
		from the original key K by a recursive process.
2. Which of the 4 steps in AES uses diffusion and how is it done?
	->addRoundKey: XOR the state with a 128-bit round key derived
		from the original key K by a recursive process.

3. Why does decryption in AES take longer than encryption?
	-> Because of the key generations, and the matrix multiplication take a while.

4. Describe the use of blocks and rounds in AES.
	-> Basically the blocks ensure the it won't be possible to decode without the key.

5. Why would one want to increase the total number of Rounds in AES?
	-> To increase the complexity of times a text/key 


*****************************************************************************
############################ Lecture 47 ######################################
*****************************************************************************
1. What is a disadvantage in using ECB mode?
	->Identical blocks in the plaintext yield identical blocks in the ciphertext.

2. How can this flaw be fixed?
	->Using Cipher Block Chaining

3. What are potential weaknesses of CBC?
	->An attacker able to observe changes to ciphertext over time will be able 
	to spot the first block that changed.

4. How is key stream generation different from standard block encryption
modes?
	-> The key is randomize. In key stream generation modes the cipher is used more as a
	pseudorandom number generator. The result is a key stream that
	can be used as in one-time pad. Decryption uses the same key stream.


*****************************************************************************
############################ Lecture 48 ######################################
*****************************************************************************
1. For public key systems, what must be kept secret in order to ensure secrecy?
	->Decription key needs to be secret
2. Why are one-way functions critical to public key systems?
	->because easily computed, but difficult to invert without additional information.

3. How do public key systems largely solve the key distribution problem?
	-> By making the encryption process more generic in having one type of encoding.

4. Simplify the following according to RSA rules: {{{P}K−1}K}K−1.
	-> Anyone can decrypt the file as long as someone signed it.

5. Compare the efficiency of asymmetric algorithms and symmetric algorithms.
	->Asymmetric algorithms are generally much less efficient than symmetric algorithms.


*****************************************************************************
############################ Lecture 49 ######################################
*****************************************************************************
1. If one generated new RSA keys and switched the public and private keys,
would the algorithm still work? Why or why not?
	->Yes. Encryption with private key is a private information

2. Explain the role of prime numbers in RSA.
	-> The use of mutiplication of prime numnbers makes it difficult to recreate the key

3. Is RSA breakable?
	-> No 

4. Why can no one intercepting {M}Ka read the message?
	-> No, missing key

5. Why can’t A be sure {M}Ka came from B?
	-> no signature

6. Why is A sure {M}K−1 b originated with B?
	->Its encrypted with B's key

7. How can someone intercepting {M}K−1 b read the message?
	->Can be decrypted using public key

8. How can B ensure authentication as well as confidentiality when sending a
message to A?
	->Needs to pairs of keys to decrypt

*****************************************************************************
############################ Lecture 50 ######################################
*****************************************************************************
1. Why is it necessary for a hash function to be easy to compute for any given
data?
	->The hash value is sometimes called a message digest. Cryptographic hash 
	functions are used to protect integrity.

2. What is the key difference between strong and weak collision resistance of
a hash function.
	-> Strong and weak meet at the hash function

3. What is the difference between preimage resistance and second preimage
resistance?
	->

4. What are the implications of the birthday attack on a 128 bit hash value?
	->

5. What are the implications of the birthday attack on a 160 bit hash value?
	->

6. Why aren’t cryptographic hash functions used for confidentiality?
	->

7. What attribute of cryptographic hash functions ensures that message M is
	bound to H(M), and therefore tamper-resistant?
	->

8. Using RSA and a cryptographic hash function, how can B securely send a
   message to A and guarantee both confidentiality and integrity?
	->


*****************************************************************************
############################ Lecture 51 ######################################
*****************************************************************************
1. For key exchange, if S wants to send key K to R, can S send the following
message: {{K}KS−1}K−1 R? Why or why not?
	-> No because there isn' certanty that the message will arrive safe. 
2. In the third attempt at key exchange on slide 5, could S have done the encryptions
in the other order? Why or why not?
	-No because they do not share private keys
3. Is {{{K}KS−1}KR}KS equivalent to {{K}K−1 S}KR?
	->No
4. What are the requirements of key exchange and why?
	-> confidentiality and authentication



*****************************************************************************
############################ Lecture 52 ######################################
*****************************************************************************
1. What would happen if g, p and gamodp were known by an eavesdropper
	listening in on a Diffie-Hellman exchange?
	-> it  would happen if g, p and gamodp were known by an eavesdropper
		listening in on a Diffie-Hellman exchang

2. What would happen if a were discovered by an eavesdropper listening in on
a Diffie-Hellman exchange?
	->would happen if g, p and gamodp were known by an eavesdropper
	listening in on a Diffie-Hellman exchang

3. What would happen if b were discovered by an eavesdropper listening in on
a Diffie-Hellman exchange?
	-> Nothing happened.