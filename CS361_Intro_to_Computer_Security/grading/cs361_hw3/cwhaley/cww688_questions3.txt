Name: Colt Whaley
EID: cww688	
CS Login: cwhaley
Email: coltwhaley@yahoo.com

Lecture 34
1. C is the bandwidth of the channel and h is the entropy of the language.
The only way to increase this value would be to increase C or decrease h, both of which are defined
and cannot be changed.
2. For example, if it is really loud and you are trying to talk to a friend, you may have to repeat
the message a couple times before they get the full message. Same goes with a noisy channel, by
increasing the redundancy of the transmission you ensure that the receiver has more chances to catch
the full message.

Lecture 35
1. h = -(log(1/10))
2. Letters have tendencies to show up because of other letters so the probability of a letter
changes depending on the previous letter or letters.
3. Zero order is the naive encoding where all have the same probability.
First is the probablity of the letters
Second is the probability of doubles 
Third the probability of triples and so on...

Lecture 36
1. For example, the academy awards best picture. There may be 5 nominees but they probably aren't
equally likely to win. Who decides that the chances or of winning and how do you decide?
2. If the observer knows that there is only two possible outcomes in a pool of 128 then it can be
encoded with 1 bit instead of 7
3. Entropy can be used to messure the redundancy. If the message length == entropy there is no
redundancy.

Lecture 37
1. There is a lot of repetitive character strings showing up, which leads to believe it may be a 
simple replacement cipher.
2. A key is only necessary to encrypt and decrypt. If you just want to encrypt, aka a hash you dont
need a key.
3. It should have none.
4. These redundancies would show up in the encryption.

Lecture 38
1. P
2. E(P,Ke)
3. It helps them recognize what kind of encryption algorithm is being used.
4. They can infer the source language of the plaintext by recognizing patterns in the ciphertext.

Lecture 39
1. It would take far too long to break, that doesn't mean that given enough time that it wouldn't be.
2. On average when using linear search, the element is found halfway through so dividing 2^n by 2
yields 2^(n-1)
3. They are relatively inexpensive operations that can drastically alter the plaintext.
4. Confusion ensure the interceptor has difficulty reading the ciphertext while diffusion tries to
hinder the interceptors ability to gain information from small portions of the message by spreading
it across the ciphertext.
5. Both are necessary for an effective encryption.

Lecture 40
1. Monoalphabetic replaces all instances of a character with the same new character while
polyalphabetic replaces the character based on its placement in the string.
2. What is used to determine which characters replace what.
3. Each character is only replaced by one other character so the character-space decreases by one
each time a character is replaced.
4. The displacement of each character.
5. k!
6. No, because when you crack one character you have cracked all of them.
7. Look for the ciphertext character in the row of the key character and which ever column it is in
is the plaintext character.

Lecture 41
1. Don't know what kind of substitution cipher is being used so each character could be replaced by
any other or 26^3= 17576
2. There's only 2 different characters in the plaintext and each is replaced by one new character
which yields 26x25 = 650
3. Yes, that doesn't mean it is going to be a very efficient way of encrypting data.

Lecture 42
1. By knowing the algorithm and ciphertext, you get no closer to the plaintext than if you didn't know
either.
2. Otherwise certain plaintexts could be eliminated based on the algorithm that generates the key.
3. How do you securely distribute keys, if it is a secure channel why not just send the data instead?

Lecture 43
1. It preserves letter frequencies.

Lecture 44
1. Symmetric
2. Distribution = how to securely give keys to users
   Management   = how to make sure the keys are safe and available when needed
3. If the message was encrypted with Ks-1, otherwise no.
4. It depends on the system

Lecture 45
1. Immune to tampering by the interceptor and high diffusion.
2. An interceptor can tamper with the message and retain the same ciphertext.
3. It allows multiple services to be completed without risking the sensitivity of the data

Lecture 46
1. subBytes, changes the byte with a table, addRoundKey, xors a key with the ciphertext
2. shiftRows, changes the rows, mixColumns, multiplies by a 4x4 matrix
3. The multiplication matrix inverse uses more expensive integer multipltication than the original
4. The plaintext is encrypted over a series of rounds making the ciphertext less and less
distinguisable from the plaintext.
5. Makes the ciphertext more secure.

Lecture 47
1. The ciphertext still resembles the plaintext.
2. Xoring the previous block with the current one, CBC
3. Content leak and observed changes to blocks by an observer.
4. Uses a PRNG to do a one-time pad.

Lecture 48
1. The individuals private keys.
2. It is easy for individuals to see who signed the file
3. A public key and a private key.
4. {p}K-1
5. Asymettric are usually less efficient as they have more complex keys.

Lecture 49
1. yes, because you can sign either direction.
2. The encryption algorithm requires factoring large primes.
3. Yes, but takes a very long time.
4. It can only be opened with a's private key.
5. It was signed with a's public key that anyone can know.
6. It is signed with b's private key that only b knows.
7. Open it with b's public key.
8. Sign it first with a's private key, then b's public key. since it is signed inside by a's private
then it must have come from a.

Lecture 50
1. It usually has to process a large amount of data to produce a hash.
2. weak = find any message that arent the same that produce the same hash
  strong= find any message that produce the same hash
3. can't go backwards from hash to preimage
4. on average, after 1.25sqr(2^128) hashes you will see a duplicate.
5. on average, after 1.25sqr(2^160) hashes you will see a duplicate.
6. They are one way.
7. Binds the bytes together
8. (P(Kb-1))Ka and send the hash value inside the file.

Lecture 51
1. No because S doesn't have R-1
2. No, then anyone could tamper with the inner ciphertext.
3. No, because the receiver would need both R and S private keys to open.
4. confidentiality and intergrity

Lecture 52
1. Nothing
2. Could determine the secret
3. Could determine the secret
