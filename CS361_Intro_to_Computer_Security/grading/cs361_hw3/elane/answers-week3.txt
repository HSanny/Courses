Name: Eric Lane
EID: el9297
CS Login: elane
Email: e.lane@utexas.edu

Questions-Week3

Lecture 34:
    1)  You can't beat the entropy, you can only get arbitrarily close to it.
    2)	The receiver can check again for any information it missed.
Lecture 35:
	1)	-(1/10)log(1/10)
	2)	You have to assume context of the characters. The context is always 
		different. There is also a lot of redundancy in natural language.
	3)	Zero assumes all symbols are equally likely, first takes the 
		probability of each symbol into account, and higher order models assume
		different combinations of symbols have their own probabilities.
Lecture 36:
	1)	Some messages are truly random.
	2)	The obeserver has to have a way of decoding the message.
	3)	If the information content of a message is equal to the length of the 
		encoded message, there is no redundancy.
Lecture 37:
	1)	Repeated symbols, 
	2)	You don't always need the key to transform the message.
	3)	It makes the information "less useful" to eavesdroppers.
	4)	You can begin to see if characters are being substituted.
Lecture 38:
	3)	Redundancy helps a cryptanalyst to recognize patterns, which can then
		be used to decipher a language.
	4)	Language tends to have a lot of redundancy and repeated symbols.
Lecture 39:
	1)	It can take an extraordinarily long time to check all possible combos.
	2)	You can exhaustively try all the keys, where each digit is represented 
		as a 1 or a 0 (hence the 2^n).
	3)	Many commercial symmetric ciphers use substitution and transposition.
	4)	Confusion is tranforming info, diffusion is spreading it out.
	5)	Both have their purpose.
Lecture 40:
	1)	Monoalphabetic substitution is simple substitution, where symbols are
		substituted uniformly. Polyalphabetic is when characters are 
		substituted non-uniformly.
	2)	"A table or other scheme that exhibits the mapping"
	3)	Each letter can be substituted with every other letter in the alphabet.
	4)	The distance away from the original letter.
	5)	k letters in the alphabet.
	6)	Yes, it is pretty weak.
	7)	Looking up in the table what the corresponding letter is based on the 
		key.
Lecture 41:
	1)	There are 26^3 possible options, one letter for each symbol.
	2)	If you know it is a simple substitution cipher, it reduces the space.
	3)	Yes, you just have to have a way to reduce the available info.
Lecture 42:
	1)	It offers no information that would reduce the search space.
	2)	It is basically impossible to determine what key should be used.
	3)	The sender and receiver both have to agree on a secret key. The keys
		have to be transmitted securely.
Lecture 43:
	1)	It has a greater space complexity than substitution.
Lecture 44:
	1)	Symmetric
	2)	Distribution is how to get the keys to where they need to go, and
		management is keeping them safe and available.
	3)	It depends on whether the encryption is symmetric or assymetric.
	4)	It varies from system to system.
Lecture 45:
	1)	Difficult to tamper with and more difficult to decipher.
	2)	If you change the ciphertext and see a change, that can give you info
		on how to decipher it.
Lecture 46:
	1)	MixColumns. for each column of the state, replace the column by its 
		value multiplied by a fixed  matrix of integers.
	2)	ShiftRows. Let Ri denote the ith row in state. Shift R0 in the state 
		left 0 bytes (i.e., no change); shift R1 left 1 byte; shift R2 left 2 
		bytes; shift R3 left 3 bytes. This does not affect the individual byte 
		values themselves.
	3)	All of the steps are inverted, and especially slows down the mixColumns
		step.
	4)	Each message is encoded 128 bits at a time, and each step has multiple
		repetitions.
	5)	It confuses and diffuses the data even more.
Lecture 47:
	1)	Identical blocks in plaintext yield indentical blocks in the ciphertext.
	2)	Randomize the blocks before they are encrypted.
	3)	You can watch changes over time to figure out how the text is being 
		randomized, and compare changes between to identical blocks.
	4)	In key stream, the cipher is a randomly generated key, rather than it 
		being uniform.
Lecture 48:
	1)	The private or secret key.
	2)	You don't want someone else to be able to decrypt it without additional
		info, aka the private key.
	3)	The secret key is unique to a system, while the public key does not need
		to be protected.
Lecture 49:
	1)	Yes, because you have generated new ones.
	3)	RSA is theoretically breakable, but infeasible to break.
	4)	They need the private key in order to do so.
	5)	Everyone can have the public key.
	6)	B is the only one with that key.
	8)	By having two sets of keys.
Lecture 50:
	1)	You want it to be fast but still secure.
	2)	With weak resistance, you have access to 1 message already.
	3)	Second preimage deals with more than one message.
	4)	You can find a match quickly.
	5)	It is a little harder to find a match.
	6)	Hash functions make changes apparent rather than keeping them from 
		occurring.
	8)	Use the key for confidentiality and a hash function for integrity.
Lecture 51:
	1)	You wouldn't want to, because then the key is out in the open.
	2)	No, unless the sender and receiver were switched.
	4)	Confidentiality and authentication.
Lecture 52:
	1)	Nothing, the values do not need to be protected.
	2)	Nothing, unless the eavesdropper also knew B.
	3)	Nothing unless the eavesdropper also knew A.
