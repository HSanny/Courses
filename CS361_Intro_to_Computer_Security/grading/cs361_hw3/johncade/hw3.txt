John-Cade Griffin
CS f361 Security
EID: jcg3335


LECTURE 34

1. Why is it impossible to transmit a signal over a channel at an average rate greater than C/h?

Because you are limited to the capacity of the channel C and you cannot improve on the entropy h of a language

2. How can increasing the redundancy of the coding scheme increase the reliability of transmitting a message over a noisy channel?

no matter how noisy the channel is, if your message is redundant enough you can ensure that the message gets through because eventually with enough repetitions, the entire message will be recieved

LECTURE 35


1. If we want to transmit a sequence of the digits 0-9. According to the zero-order model, what is the entropy of the language?

	h = -(log(1/10))

2. What are reasons why computing the entropy of a natural language is difficult?

there are so many factors that go into figuring out the probabilites of each letter and all natural languages have a lot of redundancy

3. Explain the difference between zero, first, second and third-order models.

Zero: Assuming all characters are equally likely
First: Assuming all characters are independent 
Second: Computing the likelihood if digrams
Third: Computing the likelihood of trigrams




LECTURE 36


1. Why are prior probabilities sometimes impossible to compute?

knowing exactly what the entropy is for any observer is often complicated and contextual

2. Why is the information content of a message relative to the state of knowledge of an observer?

Different observers may have different knowledge of the information content, changing the probabilities

3. Explain the relationship between entropy and redundancy.

entropy can be used to measure the amount of redundancy in an encoding, if the information content of a message is equal to the length of the encoded message there is no redundancy




LECTURE 37


1. List your observations along with their relevance to cryptography about Captain Kidd’s encrypted message.

there seems to be a relatively high frequency of 8's, and the language seems to consist of the numbers 0-9 and puncuations

2. Explain why a key may be optional for the processes of encryption or de- cryption.

there may be other ways to decript a message aside from a key

3. What effect does encrypting a file have on its information content?

the information content is hopefully preserved, just hidden

4. How can redundancy in the source give clues to the decoding process?

the attacker can gain some leverage with redundancies to decode the message




LECTURE 38


1. Rewrite the following in its simplest form: D(E(D(E(P )))).

	P

2. Rewrite the following in its simplest form: D(E(E(P,KE),KE),KD).

	E(P,KE)

3. Why might a cryptanalyst want to recognize patterns in encrypted messages?

frequency of symbols might be something to abstract out of a message, since redundancy is an enemy of encryption

4. How might properties of language be of use to a cryptanalyst?
 In order to find weaknesses, or to determine approprieate keys




LECTURE 39

1. Explain why an encryption algorithm, while breakable, may not be feasible to break?

 The time it would take to break an algorithm could take 100s of years or a very long time, and by the time it was broken, the information would not be of value

2. Why, given a small number of plaintext/ciphertext pairs encrypted under key K, can K be recovered by exhausteive search in an expected time on the order of 2n−1 operations?
 
 because there are 2^2n-1 possible combinations

3. Explain why substution and transposition are both important in ciphers.

substitution - taking a symbol from plaintext and replacing it

transposition- scrambling the symbols (moving them around)
most modern encryption techniques use some combonation of these operations

4. Explain the difference between confusion and diffusion.
confusion - taking a symbol in plaintext and replacing it with something else to create confusion for the attacker 

diffusion - taking the info content and either moving it somewhere else or smearing it around 

5. Is confusion or diffusion better for encryption?

it depends on the plaintext

LECTURE 40


1. What is the difference between monoalphabetic and polyalphabetic substitution?

monoalphabetic substitution is where you replace one characeter with the same same character throughout the encryption

polyalphabetic is where you do not replace symbols uniformally but based on where they are in the plaintext


2. What is the key in a simple substitution cipher?

The key is just a 1-1 mapping of the previous characters from the plaintext to the new characters in the encoding


3. Why are there k! mappings from plaintext to ciphertext alphabets in simple substitution?

 Because there a k characters in the plaintext so there is a finite number of tables

4. What is the key in the Caesar Cipher example?

Letter Alpha = Letter Alpha + 2

5. What is the size of the keyspace in the Caesar Cipher example?

25

6. Is the Caesar Cipher algorithm strong?

 probably not

7. What is the corresponding decryption algorithm to the Vigenere ciphertext example?

reverse the chart using the key to find the original letter




Lecture 41

1. Why are there 17576 possible decryptions for the “xyy” encoding on slide 3?

(Probability) 26 letters in the english alphabet, 3 different slots, so 26^3 possibilities


2. Why is the search space for question 2 on slide 3 reduced by a factor of 27?

because you have two y's in the encoding


3. Do you think a perfect cipher is possible? Why or why not?

yes it is mathematically possible, just extremely difficult





Lecture 42

1. Explain why the one-time pad offers perfect encryption.

it produces the same number of keys as possible plaintexts

2. Why is it important that the key in a one-time pad be random? 

because the key when X'ORd with the encoding essentially decodes the encoding. If its a one time pad you know the space of possible plain texts is 2^k

3. Explain the key distribution problem.

if you have a secure channel, why do you need a key? or why even encode? if you do not have a secure channel, how do you send the key?






Lecture 43

1. What is a downside to using encryption by transposition?

Alone transposition is fairly weak, you can determine the frequency of characters thus you can gain more insight into what the potential message might be.




Lecture 44

1. Is a one-time pad a symmetric or asymmetric algorithm?

symmetric

2. Describe the difference between key distribution and key management.

Dist.: if I dont have a secure channel, how do I distrute the key? a problem for symmetric encryption

Management: managing the public key and private key for an asymmetric system


3. If someone gets ahold of K s,can he or she decrypt S’s encrypted messages? Why or why not?
 
 Not really sure what this question is asking

4. Are symmetric encryption systems or public key systems better?

Depends on the context in which they are used, public key generation is expensive, but distributing a symmetric key without a secure channel can be risky



Lecture 45


1. Why do you suppose most modern symmetric encryption algorithms are
block ciphers?

files are so large it would be extremely expensive to encrypt each character one at a time, its easier to buffer. Also most modern algorithms use transposition along with substitution.

2. What is the signiﬁcance of malleability?
 you can essentially change one bit in the ciphertext it can change the plaintext

3. What is the signiﬁcance of homomorphic encryption?

you can create secure voting systems, collision resistant hash functions and private info retrieval schemes


Lecture 46


1. Which of the 4 steps in AES uses confusion and how is it done?

Subytes


2. Which of the 4 steps in AES uses diffusion and how is it done?

mixColumns for eatch column of the state, replace the column by its value multiplied by a fixed 4X4 column


3. Why does decryption in AES take longer than encryption?

the mixcolumns step r3equires mult each column by a fixed array

4. Describe the use of blocks and rounds in AES.

different block sizes can be used in AES while there are an associated number of rounds for each block size

5. Why would one want to increase the total number of Rounds in AES?

if you were to expand the keylength


Lecture 47


1. What is a disadvantage in using ECB mode?
identical blocks in the plaintext yeild identical blocks in the ciphertext

2. How can this ﬂaw be ﬁxed?

randomize the plaintext blocks before they are encrypted

3. What are potential weaknesses of CBC?

if someone is watching the encryption over time, they can see where the first change was made

if you have two ciphertext blocks then you can xor those together and get some info about the plaintext blocks


4. How is key stream generation different from standard block encryption
modes?
the ciphers is used more as a pseudorandom number generator, the result is a key stream that can be used like a one-time pad




Lecture 48
1. For public key systems, what must be kept secret in order to ensure secrecy?

the private key

2. Why are one-way functions critical to public key systems?

a function which is easy to compute which is difficult to invert.

3. How do public key systems largely solve the key distribution problem?

because you can openly distribute a public key without the need of a secure channel

4. Simplify the following according to RSA rules: {{{P}K−1}K}K−1.
 P{K-1}

5. Compare the efﬁciency of asymmetric algorithms and symmetric algorithms.
symmetric algorithms are more effecient than asymmetric algorithms




Lecture 49

1. If one generated new RSA keys and switched the public and private keys, would the algorithm still work? Why or why not?

yes because the newly generated keys are based on a one way function

2. Explain the role of prime numbers in RSA.
prime numbers are used to create unique encrypted messages

3. Is RSA breakable?

yes
4. Why can no one intercepting {M}Ka read the message? 

no one else could have created it

5. Why can’t A be sure {M}Ka came from B?

 because anyone might have A's public key


6. Why is A sure {M}K originated with B?

because no-one besides b has that private key

7. How can someone intercepting {M}K−1 read the message?
 with the public key

8. How can B ensure authentication as well as conﬁdentiality when sending a message to A?
encrypt the message with B's private key and then encrypt with A's public key



Lecture 50

1. Why is it necessary for a hash function to be easy to compute for any given data?

because hashing should be O(1)

2. What is the key difference between strong and weak collision resistance of a hash function.

A function f is (strong) collision resistant if it is hard to find two messages m1 and m2 such that f(m1)=f(m2).

A function f is second preimage resistant if, given an input m1, it should be hard to find m2≠m1 such that f(m1)=f(m2). This is sometimes called weak collision resistance.

3. What is the difference between preimage resistance and second preimage resistance?

preimage resistant: given h, it is hard to find any m such that h = f(m)

second preimage resistant: given an input m, it is hard to find m2 != m1 st f(m1) = f(m2)  

4. What are the implications of the birthday attack on a 128 bit hash value?

If a function f(x) yields any of H different outputs with equal probability and H is sufficiently large, then we expect to obtain a pair of different arguments x1 and x2 with f(x1)=f(x2) after evaluating the function for about 1.25H‾‾√ different arguments on average.

so 1.25*sqrt(2^64) before you find a collision

5. What are the implications of the birthday attack on a 160 bit hash value?

If a function f(x) yields any of H different outputs with equal probability and H is sufficiently large, then we expect to obtain a pair of different arguments x1 and x2 with f(x1)=f(x2) after evaluating the function for about 1.25H‾‾√ different arguments on average.

6. Why aren’t cryptographic hash functions used for conﬁdentiality?

 Because they are better suited in terms of integrety. 

7. What attribute of cryptographic hash functions ensures that message M is bound to H(M), and therefore tamper-resistant?

because of pre-image resistance, you cannot have hash values that do not match

8. Using RSA and a cryptographic hash function, how can B securely send a message to A and guarantee both conﬁdentiality and integrity?

B hashes a file and then sends it to A using A's public key


Lecture 51

1. For key exchange, if S wants to send key K to R, can S send the following message: {{K}KS−1}K −1 R ? Why or why not?


2. In the third attempt at key exchange on slide 5, could S have done the encryptions in the other order? Why or Why not?
I dont think Slide 5 is the slide BY is talking about, I think he is refferring to slide 4. And I do not beleive you could in the other order without risking violating confidentiality

3. Is {{{K}KS−1}KR}KS equivalent to {{K}K −1 S}KR?
No I do not think so
4. What are the requirements of key exchange and why?


Lecture 52


1. What would happen if g, p and g amod p were known by an eavesdropper listening in on a Difﬁe-Hellman exchange?
 doesnt matter because a and b are secret
2. What would happen if a were discovered by an eavesdropper listening in on a Difﬁe-Hellman exchange?

That would possibly lead to a possible confidentiality leak
3. What would happen if b were discovered by an eavesdropper listening in on a Difﬁe-Hellman exchange?

That would lead to a possibility of a message being leaked
