Name: Jeff Upton
EID: jau55
CS Login: jupton
Email: jeffupt@gmail.com

Lecture 34
==========

1. It's impossible to transmit a signal at a faster rate because the entropy (h) represents the maximum efficiency in which the symbols can be coded and C is the fastest rate they can be generated.

2. An encoding can be made more and more redundant to compensate for a large amount of noise in a channel.


Lecture 35
==========

1. h = -log(1/10)

2. It's difficult because the frequencies of the symbols are context dependent. We need to resort to complicated models to model the tendency for symbols to be grouped in certain ways.

3. The zero order model doesn't take into consideration any probability. The first order model takes into consideration only the probabilities of individual symbols. The second and third order models take into consideration which symbols follow others (using couples or triples of symbols respectively).


Lecture 36
==========

1. There is often know way of knowing what the prior probabilities are for a variety of messages.

2. Because the point of the message is to eliminate the amount of uncertainty that the receiver has. We can transmit less information to get the same message across if the receiver knows part of the message.

3. If the information content of a message is equal to the length of the encoded message, then there is no redundancy. The less redundancy in the message, the closer the message length is to its' entropy.


Lecture 37
==========

1. There are only a few unique symbols, so the message must be somewhat repetitive. The number 88 recurs fairly often.

2. For a simple subsitution cipher, no key is necessary if the algorithm is deterministic (eg. Add 1 to the letter)

3. The information content should be preserved.

4. If redundancy in the source appears as redundancy in the ciphertext, then the attacker can learn more about the plaintext.


Lecture 38
==========

1. P

2. E(P, Ke)

3. He can analyze the traffic and determine something about when certain messages are sent.

4. Properties of a language, such as frequency of symbols can be used by a cryptanalyst to predict the cause of patterns seen in the ciphertext.


Lecture 39
==========

1. The amount of time that it may take to break the algorithm can be much too long to be feasible.

2. Each key will have to be tried. For a key of size n, there are 2^n-1 possible keys that must be tried.

3. In combination, subsitution and transposition are very powerful and are used by nearly all modern encryption schemes.

4. Confusion means replacing a symbol in the plaintext with something else while diffusion is spreading the information content throughout the ciphertext.

5. While both are important, confusion is probably more important in encryption.


Lecture 40
==========

1. A monoalphabetic cipher uniformly replaces all ocurrences of a symbol with another, while a polyalphabetic cipher makes different subsitutions depending on where the plaintext symbol occurs.

2. The key in a simple substitution cipher is the mapping from a symbol in the plaintext to a symbol in the ciphertext. (eg. a table)

3. There are k possibilities for a mapping for the first symbol, then k -1 for the next (since the first symbol has chosen a mapping) and so on. Multiply these together to get the number of combinations and you get k!.

4. The key in the Caesar Cipher is the number of characters to shift. 

5. The keyspace is 25 for the english language. It's the number of unique symbols in the plaintext language - 1. 

6. No, the algorithm is not strong.

7. Look up the key and ciphertext symbol in the table and the plaintext value will be the entry in the table.


Lecture 41
==========

1. Each letter in the alphabet can appear in each of 3 positions, so there are 26^3 combinations.

2. Because we know now that x and y must be encoded by two different letters and that both y's are encoded with the same value.

3. I don't think a perfect cipher is possible because the ciphertext always reflects patterns in the input text.


Lecture 42
==========

1. Because every possible input could have generated a given ciphertext with some key, so no reduction of the search space is possible.

2. The key has to be random so that the attacker has no way of deducing the key from the ciphertext.

3. The key distribution problem is a practical concern where two parties interested in communicating securely must first share a key. They're unable to share the key securely without a key!


Lecture 43
==========

1. The frequencies of symbols in the plaintext are preserved.


Lecture 44
==========

1. A one-time pad is symmetric algorithm.

2. Key distribution has to do with transmitting keys to those who need them for secure communication, while key management involves the secure storage of keys.

3. No, Ks can only be used to encrypt messages for S.

4. They are not directly comparable. Symmetric encryption systems are often much faster to compute and can handle larger payloads, while public key systems solve the key distribution problem and simplify the number of keys in a system with multiple users.


Lecture 45
==========

1. Most modern symmetric encryption algorithms are block ciphers probably due to the suceptibility of modification with stream ciphers.

2. If transformations to the input produce meaningful changes in the plaintext, the algorithm is easier to reverse. A non-malleable cipher is ideal.

3. Homomorphic encryption specifies that an operation on the plaintext is equivalent to a (possibly different) operation on the ciphertext. This property can be used in various cryptosystems.


Lecture 46
==========

1. The subBytes step uses confusion by replacing each byte in the state with another byte from a lookup table.

2. The shiftRows step uses diffusion by shifting the rows of the state by varying amounts.

3. The mixColumns step requires multiplication by an array that is much harder to optimize.

4. AES is an iterated block cipher, where the block is processed a number of times. Each time is called a round.

5. To further separate the ciphertext and plaintext.


Lecture 47
==========

1. Identical blocks in the plaintext yield identitical blocks in the ciphertext.

2. The flaw can be fixed by carrying some information over from block to block (eg. "randomize" the blocks before encryption)

3. It's possible to observe the first changed block after a change is made to the plaintext. There is also the possibility for content leak.

4. The cipher is used as a pseudorandom number generator.


Lecture 48
==========

1. The private (decryption) key.

2. A one way function forms the backbone of key generation. 

3. Public key systems don't have to worry about the key distribution as the public key is publicly available and the private is not ever transmitted.

4. {P}K-1

5. Symmetric algorithms are significantly faster.


Lecture 49
==========

1. Yes, because the keys can be interchanged for encryption and decryption.

2. The modulus operation with prime numbers is the one-way function used in RSA.

3. Theoretically yes, but it will take an extremely large amount of time.

4. Because the message contents can only be decrypted by Ka-1.

5. Because anyone has access to Ka and can encrypt M with it.

6. Because A can decrypt the message with Kb.

7. They can decryp the message with K's public key (Kb-1)

8. Send {{P}Kb-1}Ka


Lecture 50
==========

1. It is used in the middle of time-sensitive processes such as reading/writing and must be quick to compute.

2. In strong collision resistance, two values that are different will not hash to the same value, whereas they do in weak collision resistance.

3. Preimage resistance refers to the inability to find the input to a hash given the hashed output. Second preimage resistance refers to the fact that it is hard to find two different messages that hash to the same value.

4. An attacker would have to try 1.25 * sqrt(2^128)=2.3e19 different arguments to find a collision.

5. An attacker would have to try 1.25 * sqrt(2^160)=1.51e24 different arguments to find a collision.

6. Hash functions are non-reversible, so it is difficult to ensure confidentiality and recoverability by the intended recipient.

7. It is difficult to modify the text without changing the hash.

8. B can send {M,hash(M)}Ka


Lecture 51
==========

1. No, that would require that S knows R's private key.

2. Yes, the outer encryption would still verify that the message was sent by S. The inner encryption maintain confidentiality.

3. No, the first message is only decryptable by S.

4. Key exchange requires both confidentiality and authentication, in order for both parties to be sure that their key is secret and actually came from the other party.


Lecture 52
==========

1. Nothing, it would take a ridiculous amount of time to discover the shared secret.

2. If a was discovered, then anyone could send a message on behalf of Alice.

3. If b was discovered, then anyone could send a message on behalf of Bob.

