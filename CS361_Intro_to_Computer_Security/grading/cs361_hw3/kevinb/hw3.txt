Name: Kevin ByersEID: kb25543CS Login: kevinbEmail: Kevin.byers.tennis@gmail.com
			CS361 Questions: Week 3The questions marked with a dagger (†) require external research and may be more extensive and time consuming. You don’t have to do them for the assignment but, but do them to increase your competency in the class.Lecture 341. Why is it impossible to transmit a signal over a channel at an average rate greater than C/h?You have to consider the time for the messages are produced and sent, which is why you can always get within epsilon of the entropy.2. How can increasing the redundancy of the coding scheme increase the reliability of transmitting a message over a noisy channel? Redundancy reduces the effect of noise in the channel, because lost data can be recovered if there are redundancies built in.Lecture 351. If we want to transmit a sequence of the digits 0-9. According to the zero-order model, what is the entropy of the language?–  (log1/10)  2. What are reasons why computing the entropy of a natural language is difficult?Computing the entropy of a natural language is difficult because of redundancies and efficiency matching.3. Explain the difference between zero, first, second and third-order models. Zero Order assumes all letters of the alphabet are equally likely to appear.  First Order assumes symbols are independent from each other, but follows probabilities for each symbol appearing.  Second Order computes the probabilities for common digrams.  Third Order computes the probabilities for common trigrams.Lecture 361. Why are prior probabilities sometimes impossible to compute?Certain events are favored or are of little interest, which is hard to factor. 2. Why is the information content of a message relative to the state of knowledge of an observer? If the observer is not very knowledgeable regarding the contents of the message, it could easily be misinterpreted.  If an observer receives a 1 or 0, but knows one means attack and 0 means hold off, then there is a lot of content per bit as opposed to some random observer just seeing a 0 or 1.3. Explain the relationship between entropy and redundancy.Entropy can be used to measure the redundancy of a message.  A message has no redundancy if the information content is equal to the length of the encoded message.Lecture 371. List your observations along with their relevance to cryptography about Captain Kidd’s encrypted message.The number 48 appears a lot, which must decode to be some common form of language when giving directions to a specific location.2. Explain why a key may be optional for the processes of encryption or decryption. If the encryption scheme is very simple or reused often, the sender/receiver may be able to encode/decode without using a key.3. What effect does encrypting a file have on its information content?It gets rid of the information content to anyone without the ability to decrypt the file.4. How can redundancy in the source give clues to the decoding process?Certain symbols are reused more often than others in specific contexts, which make the file easier to decode.Lecture 381. Rewrite the following in its simplest form: D(E(D(E(P)))).P2. Rewrite the following in its simplest form: D(E(E(P, KE), KE), KD).C3. Why might a cryptanalyst want to recognize patterns in encrypted messages?They can get clues on how to decipher the encrypted text by using common properties of the language being used.4. How might properties of language be of use to a cryptanalyst? A cryptanalyst can get a good start assuming the most used symbol in a language is a common used letter of that language and then piece in the rest (a_ would usually be at, as, or an etc).Lecture 391. Explain why an encryption algorithm, while breakable, may not be feasible to break? Theoretically, a cryptanalyst could break almost any encryption algorithm using brute force, but it would not be time efficient.2. Why, given a small number of plaintext/cipher text pairs encrypted under key K, can K be recovered by exhaustive search in an expected time on the order of 2^(n-1) operations?Many ciphers use a n-bit string as a key and 2^(n-1) is all of the possibilities of an n-bit string.3. Explain why substitution and transposition are both important in ciphers.They are the simplest building blocks of encryption and the use of both of them combined in some way makes decryption pretty difficult.4. Explain the difference between confusion and diffusion. Confusion transforms information in plaintext so that an interceptor cannot readily extract it, but diffusion spreads the information from a region of plaintext widely over a ciphertext.5. Is confusion or diffusion better for encryption?Confusion and diffusion significantly contribute to protection the message from decryption by an interceptor.Lecture 401. What is the difference between monoalphabetic and polyalphabetic substitution?Polyalphabetic uses substitution depending on where the symbol occurs in the plaintext, but monoalphabetic substitutes uniformly.2. What is the key in a simple substitution cipher?A 1-1 mapping specified by the encryption.3. Why are there k! mappings from plaintext to cipher text alphabets in simple substitution?After each attempt, there are k – 1 options left, which gives you k * k-1 * k-2 ... * 1 number of mappings.4. What is the key in the Caesar Cipher example?The number of shifted positions.5. What is the size of the key space in the Caesar Cipher example?266. Is the Caesar Cipher algorithm strong?No, because brute force does not take very long to decode the Caesar Cipher.7. What is the corresponding decryption algorithm to the Vigenere cipher text example? Subtract the corresponding letter in the key from the ciphertext to get the value of the letter in the plaintext.Lecture 411. Why are there 17576 possible decryptions for the “xyy” encoding on slide 3? It is 26^3, because there are three letters with 26 possible substitutions for each.2. Why is the search space for question 2 on slide 3 reduced by a factor of 27? The cipher for last letter will be the same as the second to last, and they will be different than the first letter (so get rid of 26 + 1 possibilities).3. Do you think a perfect cipher is possible? Why or why not?Yes, because there can be as many possible keys as plaintexts.Lecture 421. Explain why the one-time pad offers perfect encryption. Every possible plaintext could be the pre-image of that cipher text under a plausible key.2. Why is it important that the key in a one-time pad be random? Being able to eliminate certain keys would reduce the total number of possible keys, making that total smaller than the total number of possible plaintexts.3. Explain the key distribution problem. If the sender and receiver already have a secure channel, then they don’t need an encryption, but if the channel is not secure and they send the key, then the interceptor will have the key and be able to decrypt the message.Lecture 431. What is a downside to using encryption by transposition?Letter frequencies are preserved in a transposition.Lecture 441. Is a one-time pad a symmetric or asymmetric algorithm? Asymmetric2. Describe the difference between key distribution and key management. Key distribution deals with how to convey keys to those who need them to establish secure communication.  Key management deals with preserving key’s safety and making them available as needed dealing with large numbers of keys.3. If someone gets a hold of Ks, can he or she decrypt S’s encrypted messages? Why or why not? No, they can encrypt the message using Ks, but not decrypt it.4. Are symmetric encryption systems or public key systems better?Public key systems are better if you want to resolve the key distribution problem.Lecture 451. Why do you suppose most modern symmetric encryption algorithms are block ciphers?It is more difficult to alter the integrity of the text without detection and information from one plaintext symbol is diffused into several different ciphertext symbols.2. What is the significance of malleability? A malleable encryption algorithm would have low integrity, because the message could be specifically changed.3. What is the significance of homomorphic encryption?It allows specific types of computations to be carried out on cipher text and generate an encrypted result which, when decrypted, matches the result of operations performed on the plaintext.Lecture 461. Which of the 4 steps in AES uses confusion and how is it done? mixColumns replaces the column for each column of the state by its value multiplied by a fixed 4x4 matrix of integers.2. Which of the 4 steps in AES uses diffusion and how is it done? shiftRows shifts the specific row to the left by the given number of that row.3. Why does decryption in AES take longer than encryption? Inverting the MixColumns requires multiplying each column by a fixed array, which takes more time.4. Describe the use of blocks and rounds in AES.AES uses 128-bit, 192-bit, or 256-bit blocks of data to encrypt with 10, 12, or 14 rounds (respectively) of an action performed on a block with the intention of encrypting it.5. Why would one want to increase the total number of Rounds in AES? It would make it much harder to decrypt.Lecture 471. What is a disadvantage in using ECB mode? Identical blocks in the plain text result in identical blocks in the cipher text.2. How can this flaw be fixed?By using some sort of diffusion.3. What are potential weaknesses of CBC? An attacker able to observe changes to cipher text over time will be able to spot the first block that changed and if an attacker finds two identical ciphertext blocks, they can derive information about two plaintext blocks using the relation between the two identical ciphertexts.4. How is key stream generation different from standard block encryption modes? Key stream generation modes are used more as pseudorandom number generator. The result is a key stream that can be used as in one-time pad. Decryption uses the same key stream.Lecture 481. For public key systems, what must be kept secret in order to ensure secrecy?The decryption key2. Why are one-way functions critical to public key systems? You want it to be easy to compute, but difficult to invert without additional information.3. How do public key systems largely solve the key distribution problem? You can share the public key, without caring whether or not it is intercepted over a non-secure channel.4. Simplify the following according to RSA rules: {{{P}K-1}K}K-1.{P}K-15. Compare the efficiency of asymmetric algorithms and symmetric algorithms.Asymmetric algorithms are generally much less efficient than symmetric algorithms, because asymmetric algorithms need to identify one-way functions.Lecture 491. If one generated new RSA keys and switched the public and private keys, would the algorithm still work? Why or why not?Yes, because the keys are chosen to fit the specific formula ((P^e)^d mod n = P).2. Explain the role of prime numbers in RSA.An interceptor has to factor large prime numbers, which is very difficult.3. Is RSA breakable?Yes, but it is very difficult especially with large prime numbers.4. Why can no one intercepting {M}Ka read the message?Only someone with A’s private key can decrypt the message.5. Why can’t A be sure {M}Ka came from B?It was sent using a public key that is easy to get and use to encrypt.6. Why is A sure {M}K−1b originated with B?Only B’s private key can encrypt that message.7. How can someone intercepting {M}K−1b read the message?Using the easy to get public key.8. How can B ensure authentication as well as confidentiality when sending a message to A?Send an authentication message using B’s private key to encrypt and then send the message using A’s public key to encrypt.Lecture 501. Why is it necessary for a hash function to be easy to compute for any given data?So that two different messages don’t have the same hash.2. What is the key difference between strong and weak collision resistance of a hash function.Strong collision resistance has very few of the same hash values, weak collision is hard to get the same hash value from two different initial values.3. What is the difference between pre-image resistance and second pre-image resistance?Pre-image resistance means given h, it is hard to find any m such that h = f (m), but second pre-image resistance means it is hard to find m2 does not equal m1 if f (m1) = f (m2).4. What are the implications of the birthday attack on a 128 bit hash value?An average of 1.25(sqrt(2^128-1)) arguments will have unique hash values. 5. What are the implications of the birthday attack on a 160 bit hash value?An average of 1.25(sqrt(2^160-1)) arguments will have unique hash values. 6. Why aren’t cryptographic hash functions used for confidentiality?In a secure communications system, the correct transmission of messages may override confidentiality concerns.7. What attribute of cryptographic hash functions ensures that message M is bound to H(M), and therefore tamper-resistant?A cryptographic hash function “binds” the bytes of a file together in a way that makes any alterations to that file apparent.8. Using RSA and a cryptographic hash function, how can B securely send a message to A and guarantee both confidentiality and integrity?They can hash the function, ensuring integrity and then send the hash function using A’s public key to ensure confidentiality.Lecture 511. For key exchange, if S wants to send key K to R, can S send the following message: {{K}KS−1}K−1R ? Why or why not?No, because they do not have R’s private key.2. In the third attempt at key exchange on slide 5, could S have done the encryptions in the other order? Why or why not?Yes, because anyone could use S’s public key to decrypt the first layer of the message, but they would still need R’s private key to decrypt the rest of it.3. Is {{{K}KS−1}KR}KS equivalent to {{K}K−1S}KR ?No4. What are the requirements of key exchange and why?Confidentiality and authentication to ensure mutual suspicion is eliminated.Lecture 521. What would happen if g, p and ga mod p were known by an eavesdropper listening in on a Diffie-Hellman exchange?They could pretend to be Alice and/or they could decode Bob’s response to Alice.2. What would happen if a were discovered by an eavesdropper listening in on a Diffie-Hellman exchange?They would have Alice’s secret number, but without p and g, it would be very difficult to figure out the final key between Bob and Alice..3. What would happen if b were discovered by an eavesdropper listening in on a Diffie-Hellman exchange?They would have Bob’s secret number, but without p and g, it would be very difficult to figure out the final key between Bob and Alice.