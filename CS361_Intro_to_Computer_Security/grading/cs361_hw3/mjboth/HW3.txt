Name:     Michael Both
EID:      mjb3299
CS Login: mjboth
Email:    mjboth@earthlink.net

Lecture 34
1) If a signal is transmitted, on average, greater than C/h than it is either being sent faster than the channel can allow or it has an encoding more efficient than theorectically possible.

2) The message will reliably get through.


Lecture 35
1) h = 3.3219

2) The information from language is not read by each indiviual letter but by groups of letters and their organization.  So there is not definite way for computing entrophy when there are too many ways to calculate the probablity of letters/groups of letters/phrases.

3) Zero-order looks at each character of the language equally. First-order checks the likelihood of each character showing up. Second-Order is about groups of two characters and thier probability. Third-order is groups of 3 characters, etc.


Lecture 36
1) Information, its uncertainty, and its entropy are all relative to the knowledge of the observer.

2) How much the observer knows determines the uncertainty.

3) Entropy determines the redundency of an encoding.  If the length of the message matches its entropy, then there is not redundency.


Lecture 37
1) There are no letters in the text, it's all numbers and symbols

2) A key may just assist in the encryption/decryption method.

3) It converts a plaintext message into a cyphertext to hide a message that may not be read by unwanted recievers.

4) Redundency can give clues to what a character may mean if it shows up numerous times in a message.


Lecture 38
1) P

2) E(P, K)

3) Common patterns in a message can help determine what that part of the message means

4) Languages have parts that are used very commonly and can help determine what common parts of a message may be.


Lecutre 39
1) It may takes months, years, decades, or even longer to break.

2) With each digit of the key the possible keys that can be used is doubled, thus doubling the time it takes to find the correct key.

3) They can realy scramble up a message by swapping a symbol and moving to a different location in the message to create confusion and diffusion.

4) Confusion is good for making it difficult for an interception to retrieve information from a message, so that would be better for encryption.


Lecture 40
1) Monoalphabetic is a simple swap of symbols, polyalphabetic determines what the substitution symbol is depending on the loctation in the plaintext the swapped symbol is.

2) A cipher table that explains which symbol to swap with which plaintext symbol.

3) The alphabet of the plaintext can only be so large.  There is only a finite possible number of cipher symbols to swap with.

4) Each letter is replaced by the letter two spots away in the alphabet.

5) 26

6) No

7) The decryption is done is a rearranged version of the cipher table, using the code key and the cipher text.


Lecture 41
1) There are 26 letters to use and 3 letters to encrypt.

2) If it is a simple substitution then we can cut out the possibility that the repeated letter might have a different cipher letter, so its cut down to less than 26^2.

3) No, there always seems to be some clues in the cipher that give hints to what the plaintext might be.


Lecture 42
1) Without knowing the ciphertext and the key, the plaintext could be anything.

2) If an attacker has a clue as to what the key is, and be one step closer to breaking the cipher text

3) The sender and the receiver have to have the key, but they need to send it without possibility of interception.


Lecture 43
1) The symbols are rearranged in a repeating patterns, there is no substitution.  All an interceptor needs is to start rearranging the symbols to find the decoded message.


Lecture 44
1) Symmetric since the same key is used for both encrypting and decrypting.

2) Key distribution is focused on sending a key to a reciever securly to establish secure communication.  Key management is for maintaing a large number of keys securly and determine which key to use for communication with another user.

3) No, while they may have the public key, that's just the public key, everyone can have it.  It's only good for sending information to S, nothing more.  They would need S's private key to decrypt any information meant for S.

4) With symmetric encryption, you need a new key for every secure communication channel between two users as needed.  With Asymmetric, you can just hand out your public key to everyone, doesn't matter who recieves it, it's only good for sending information securly to you.


Lecture 45
1) Security, changes cannot be made to the blocks without detection

2) It allows for changes to be made to the plaintext before it was even decrypted.

3) It allows for performing valid operations on the ciphertext as if it were in its plaintext form and the operations.


Lecture 46
1) subBytes, mixColumns, addRoundKey

2) shiftRows

3) The inverse of the mixColumns step takes multiplying inversed matricies.

4) Plaintext is modified in blocks through which it goes through the 4 steps in multiple "rounds" to encrypt the data.

5) Increasing the rounds increases the confusion and diffusion of the encryption, making it more secure.


Lecutre 47
1) Similar blocks in the plaintext result in identical blocks in the ciphertext, making it easier for intruders to recieve the sent message.

2) Cipher Block Chaining adds greater confusion to the encryption.

3) Observed Changes: If an observer sees the changes to the ciphertext he can determine the first block that was changed.
   Content Leak: If an observer finds two identical ciphertext blocks he can find information about two plaintext blocks

4) An encryption algorithm is used as a random number generator to develop a key.


Lecture 48
1) The private key

2) If a message could be decrypted using the public key, then all secrecy is lost.

3) You can hand the public key out to anyone, it doesn't matter.  The information sent using it will only be viewable with whoever has the private key.

4) {P}K^-1

5) With asymmetric, there is no key distribution/ key management problem.  You only have one key and it doesn't matter who gets it, all information sent by it is still seucre.


Lecture 49
1) Yes, the encyrption key is the inverse of the decryption key, they will cancel eachother out.

2) The prime numbers determine the modulus and help in deciding the encryption key.

3) No, but it does have practical weaknesses

4) The message is encrypted by the public key

5) The public key could belong to anyone A has given it out to, which is what makes it "public"

6) The message has been encrypted by B's private key, something only B would have

7) It will still be just as garbled, unless the had B's public key

8) Encrypting it with A's public key will ensure that ONLY A will read the message.


Lecutre 50
1) It needs to quickly comupte and convert (relatively large) data into a fixed size.

2) Weak Collision Resistance is when, given two messages it is diffcult to find a hash function that will hash the two messages to the same hash value.
   Strong Collision Resistance is when, given any two messages, identical or not, it is difficult to find a hash function that will hash the two messages to the same hash value.

3) Preimage resistant is where its hard to find a hash function that converts a message to a given hash value.
   Second Preimage Resistant is where its hard to find a hash function that converts two different messages to identical hash value.

4) you'll have to look through 1.25 * 2^64 before finding a collision

5) 1.25 * 2^80 before finding a collision

6) They're used for integrity, changing the message will change the hash value.

7) The bytes of a file are binded together to make any alterations apparent through the hash value.

8) B can send the encrypted file with the hash function in it along with the hash value that it should produce, if the hash function does not produce the same value on the file, the whole thing is dropped and sent again.


Lecture 51
1) No, S would need R's private key to use that on the message.

2) Yes, it would just be foolish becuase then anyone with S's public key could figure out S's private key.

3) No, the first message has S's public key covering it.

4) Confidentiality so no one else knows the key, and Authentication so no one else sends their own key for communicating.


Lecture 52
1) They still wouldn't know  g^b * mod p  so the key would remain secure.

2) They wouldn't know b, the key is still secure.

3) They wouldn't know a, the key is still secure.
