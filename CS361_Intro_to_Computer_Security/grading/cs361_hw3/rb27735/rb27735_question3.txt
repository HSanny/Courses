Name: Ruben Baeza
UTEID: rb27735
CS login: rb27735
email: ruben.baeza@utexas.edu

CS361 Questions: Week 3

The questionsmarked with a dagger (†) require external research and may be more
extensive and time consuming. You don’t have to do them for the assignment but,
but do them to increase your competency in the class.

Lecture 34

1. Why is it impossible to transmit a signal over a channel at an average rate
greater than C/h?
	Because the communication medium will always have a capacity that it cannot
	exceed. This capacity is the symbols per second that the channel can transmit
	and draws from the fact that an encoding cannot be more efficient than its
	entropy, effectively giving it a bound by entropy.

2. How can increasing the redundancy of the coding scheme increase the reliability
of transmitting a message over a noisy channel?
	Because despite the noise, if the encoding is redundant, then we can afford
	to lose parts of the message without losing the meaning of the message.

Lecture 35

1. If we want to transmit a sequence of the digits 0-9. According to the zero order
model, what is the entropy of the language?
	h = -(log 1/10)

2. What are reasons why computing the entropy of a natural language is difficult?\
	Because the frequencies of the symbols that make up natural languages are
	not independent of each other. Some symbols follow others more frequently
	than the rest and some cannot follow others at all.

3. Explain the difference between zero, first, second and third-order models.
	Zero order assumes that all symbols in a language are equally likely.
	First order assumes that all symbols are independent of one another.
	Second order adds digrams, or the likelihood that a pair of letters occurs
	together to the equation to determine likelihood.
	Third order adds likelihood of trigrams to determine likelihood.
	
	
Lecture 36

1. Why are prior probabilities sometimes impossible to compute?
	Because entropy is relative to each particular observer. One cannot be certain
	of the knowledge of the receiver.

2. Why is the information content of a message relative to the state of knowledge
of an observer?
	Because the sender needs to transmit enough information to make the receiver
	understand the message. The only way to do that is for the sender to relieve
	the uncertainty of the receiver so it depends on the receiver's knowledge.

3. Explain the relationship between entropy and redundancy.
	It is inverse. As redundancy in a message increases it's information content
	decreases.

Lecture 37

1. List your observations along with their relevance to cryptography about
Captain Kidd’s encrypted message.
	The message contains 22 different symbols. This can be used to decide what
	kind of/how many symbols the encoding uses. Most likely English.
	The ';' symbol is used very often. Usually at word's lengths. this can help
	to decrypt a message if it is a space.

2. Explain why a key may be optional for the processes of encryption or decryption.
	The encryption might already be known or inherent in the program.
	
3. What effect does encrypting a file have on its information content?
	The file is still carrying the message, except it is now like it is being
	transmitted through a noisy channel.

4. How can redundancy in the source give clues to the decoding process?
	One can use patterns of the souce language to determine the encryption key.

CS361 Questions: Week 3 2

Lecture 38

1. Rewrite the following in its simplest form: D(E(D(E(P)))).
	E(P) = C, D(C) = P, E(P) = C, D(C) = P so this is: P

2. Rewrite the following in its simplest form: D(E(E(P,KE),KE),KD).
	E(P,KE) = C, E(C,KE) = x, D(x, KD) = C

3. Why might a cryptanalyst want to recognize patterns in encrypted messages?
	In order to help them break the encryption by making inferences based on the 
	source of the encrypted message.

4. How might properties of language be of use to a cryptanalyst?
	They can help decipher a message. For example, say i before e except after c can
	be called a property of English. Then if we are able to determine i, then we can
	look for patterns that might help us discern e and c.

Lecture 39

1. Explain why an encryption algorithm, while breakable, may not be feasible
to break?
	Because of the time it would take to break it. For example 128 bit encryption
	could take 2^128 attempts at guessing the key. On the other hand, if trying to
	decipher the encryption, then the possibilities of how many bits represent a
	single symbol would be too large. Also, it is impossible to know when we have
	broken an encryption unless all keys have been tried since it is possible other
	keys can produce a meaningful message.

2. Why, given a small number of plaintext/ciphertext pairs encrypted under
key K, can K be recovered by exhausteive search in an expected time on the
order of 2n−1 operations?
	Because we know the input and output of the keys, so we can simply try
	the combinations of keys that are possible based on the pairs.

3. Explain why substitution and transposition are both important in ciphers.
	Because they cause confusion and make patterns harder to notice.

4. Explain the difference between confusion and diffusion.
	Confusion is to transform a message into another message of the same source.
	Diffusion is spreading the plaintext message over meaningless pieces of 
	the message.

5. Is confusion or diffusion better for encryption?
	Both are necessary.

Lecture 40

1. What is the difference between monoalphabetic and polyalphabetic substitution?
	Monoalphabetic substitution is when a symbol of plaintext is exchanged for another
	symbol of plaintext at each and every occurrence of the symbol.
	Polyalphabetic is when a symbol can be replaced by various other symbols depending
	on factors such as where the symbol to be substituted is located.

2. What is the key in a simple substitution cipher?
	the mapping from substitutee to substituter.

3. Why are there k! mappings from plaintext to ciphertext alphabets in simple
substitution?
	Because every symbol can only be substituted for one other symbol. Therefore
	in a k-symbol language we know that each symbol has k possibilities, and when 
	one is found, the rest have k-1, and then k-2 ....k!.

4. What is the key in the Caesar Cipher example?
	The key is the letter that comes n positions before the symbol in the alphabet.

5. What is the size of the keyspace in the Caesar Cipher example?
 1.

6. Is the Caesar Cipher algorithm strong?
	No.


7. What is the corresponding decryption algorithm to the Vigenere ciphertext
example?
	the decryption algorithm is to line up the key and the ciphertext.
	Then we look for the column of the letter in the key until we find the 
	row with the letter  in the ciphertext.
	Then we simply look at what letter corresponds to that row and we have the
	plaintext.
	
CS361 Questions: Week 3 3

Lecture 41

1. Why are there 17576 possible decryptions for the “xyy” encoding on slide
3?
	Because there are 26 possible letters that each of the three letter could
	represent since we don't know if it's a simple substitution.

2. Why is the search space for question 2 on slide 3 reduced by a factor of 27?
	Because we know that two of the letters are the same so now the x can represent
	one of 26 letters, but we know the y's will represent a different letter than the
	x but they will both represent the same letter.

3. Do you think a perfect cipher is possible? Why or why not?
	Yes, one that is completely random and not replicable or useable more than once.

Lecture 42

1. Explain why the one-time pad offers perfect encryption.
	Since, it is only used once it cannot be replicated. Also since it is the same
	length as the plain text then the key will be impossible to crack.

2. Why is it important that the key in a one-time pad be random?
	That way it cannot be replicated easily.

3. Explain the key distribution problem.
	For the perfect one-time pad encryption, the sender and receiver both need the key.
	But how can they agree on a key and do it securely if they need the key to first
	establish a secure channel.

Lecture 43

1. What is a downside to using encryption by transposition?
	The original text is given and so is the occurrence of every symbol in the original
	text.

Lecture 44

1. Is a one-time pad a symmetric or asymmetric algorithm?
	Symmetric

2. Describe the difference between key distribution and key management.
	Key distribution is securely sending the keys needed to all parties involved.
	Key management is keeping all keys for a user secure and available at all times.

3. If someone gets a hold of Ks, can he or she decrypt S’s encrypted messages?
Why or why not?
	No, because that is only an encryption key that works to encrypt a message 
	to S.

4. Are symmetric encryption systems or public key systems better?
	They depend on the number of users that will need the keys, if the number
	can change, but generally symmetric encryption systems are cheaper.

Lecture 45

1. Why do you suppose most modern symmetric encryption algorithms are
block ciphers?
	they do not give away any information to the viewer making it harder to find
	patterns in the ciphertext.

2. What is the significance of malleability?
	Malleability can lead to further ways of securing information.

3. What is the significance of homomorphic encryption?
	Allows complex mathematical operations to be performed on the ciphertext without
	compromising the encryption.

CS361 Questions: Week 3 4

Lecture 46

1. Which of the 4 steps in AES uses confusion and how is it done?
	shiftRows. It shifts the rows of information by i bytes, where i is the
	position of the row.

2. Which of the 4 steps in AES uses diffusion and how is it done?
	mixColumns. Mixes the columns by taking its value and multiplying by a matrix
	of integers.

3. Why does decryption in AES take longer than encryption?
	undoing the matrix multiplication is expensive.

4. Describe the use of blocks and rounds in AES.
	Blocks are used in 128 bits. This means that the plaintext is split up into 128
	bit blocks that are then encrypted. This splits plaintext values at random
	places.
	Rounds are used to encrypt the information various times thereby hiding the 
	information more deeply.

5. Why would one want to increase the total number of Rounds in AES?
	For further security. Trying to break AES with various rounds will
	be too expensive to try a brute force approach.

Lecture 47

1. What is a disadvantage in using ECB mode?
	identical blocks in the plaintext yield identical blocks in the ciphertext.
	This can be used to find patterns and break the encryption.

2. How can this flaw be fixed?
	Randomizing blocks before encryption.

3. What are potential weaknesses of CBC?
	"An attacker that can observe changes to ciphertext over time will be able
	to spot the first block that changed" - Dr. Young Lecture 47- slide 4.
	If one is able to find two identical blocks of ciphertext then they can
	use those to derive information about the plaintext.

4. How is key stream generation different from standard block encryption
modes?
	The cipher is used as a random number generator, producing a one-time pad
	encryption.

Lecture 48

1. For public key systems, what must be kept secret in order to ensure secrecy?
	the private key

2. Why are one-way functions critical to public key systems?
	because they are easy to compute, thus inexpensive, but cannot be cracked
	without further information.

3. How do public key systems largely solve the key distribution problem?
	The encryption of the key depends on complex operations.

4. Simplify the following according to RSA rules: {{{P}K−1}K}K−1.
	{{P}K-1} = encrypted P.

5. Compare the efficiency of asymmetric algorithms and symmetric algorithms.
	Symmetric algorithms are cheaper and faster than asymmetric algorithms since
	asymmetric algorithms' encryption can take 1000s of times more computations than 
	those for symmetric algorithms. Symmetric algorithms use simple operations for
	encryption unlike asymmetric algorithms. 

Lecture 49

1. If one generated new RSA keys and switched the public and private keys,
would the algorithm still work? Why or why not?
Yes, but it could be compromised.

2. Explain the role of prime numbers in RSA.
	They are used in encryption using (P^e)^d mod n = P. So to break it one would have
	to factor P^e. While the intended receiver should already know d and simply has
	to calculate (P^e)^d mod n.

3. Is RSA breakable?
	Yes, but it is very expensive to do all the calculations that it isn't plausible.

4. Why can no one intercepting {M}Ka read the message?
	The decryption can only occur with the private key.

CS361 Questions: Week 3 5


5. Why can’t A be sure {M}Ka came from B?
	The public key could work for anybody with the key to send a message to A.

6. Why is A sure {M}K−1 b originated with B?
	Because only the private key could make a message that the public key can decrypt.

7. How can someone intercepting {M}K−1 b read the message?
	Only by having the private key or breaking the encryption.

8. How can B ensure authentication as well as confidentiality when sending a
message to A?
	Using A's public key to encrypt a message, and then B's private key to encrypt
	it again. Then A can use B's public key to decrypt and A's private key to decrypt
	the final message.

Lecture 50

1. Why is it necessary for a hash function to be easy to compute for any given
data?
	They are used for integrity so they must be quick.

2. What is the key difference between strong and weak collision resistance of
a hash function.
	Strong means that collisions are less likely to happen even with the same value.
	weak means that collisions are less likely to happen with different values.

3. What is the difference between preimage resistance and second preimage
resistance?
	preimage resistant basically means it is hard to find a value that will evaluate
	to h in the function.
	second preimage is when it is hard to find two different values that evaluate
	to the same thing.

4. What are the implications of the birthday attack on a 128 bit hash value?
	This means that after a certain number of different arguments we will
	eventually be able to obtain a collision.

5. What are the implications of the birthday attack on a 160 bit hash value?
	The same but less likely as 128.

6. Why aren’t cryptographic hash functions used for confidentiality?
	They are simple to compute and thus simple to invert.

7. What attribute of cryptographic hash functions ensures that message M is
bound to H(M), and therefore tamper-resistant?
	seal

8. Using RSA and a cryptographic hash function, how can B securely send a
message to A and guarantee both confidentiality and integrity?
	Use a hash to hash the message, then encrypt using A's public key.

Lecture 51

1. For key exchange, if S wants to send key K to R, can S send the following
message: {{K}KS−1}K−1
R
? Why or why not?
No, it would need to be {{K}KS-1}KR to assure confidentiality. 

2. In the third attempt at key exchange on slide 5, could S have done the encryptions
in the other order? Why or why not?
No, anybody would have been able to decrypt it that had access to S's public key.

3. Is {{{K}KS−1}KR}KS equivalent to {{K}K−1
S
}KR?
No, only those with S's private key can decrypt the second one because the outer
encryption is done with S's public key.

4. What are the requirements of key exchange and why?
confidentiality and authentication and exchanging the keys carefully.
If one is not careful either confidentiality or integrity can be compromised.
Authentication is to ensure that the key came from the right person.
Integrity is to ensure only the right person can decrypt the key.

CS361 Questions: Week 3 6

Lecture 52

1. What would happen if g, p and g^a mod p were known by an eavesdropper
listening in on a Diffie-Hellman exchange?
	The listener could only compute g^B mod p which would still be useless without B.

2. What would happen if a were discovered by an eavesdropper listening in on
a Diffie-Hellman exchange?
The listener could compute the number 8^15 mod 23 but no way to know b = 15.

3. What would happen if b were discovered by an eavesdropper listening in on
a Diffie-Hellman exchange?
The listener could comput 19^6 mod 23 but no way of knowing a = 6.
