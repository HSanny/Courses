Name:Trevor Thackston
EID:ttt733
CS Login:ttt733
Email:trevor.thackston@gmail.com

Lecture 34
1. C/h assumes a perfect encoding and the fastest possible transmission rate (no noise to slow it down)
2. Have to send messages multiple times to get the right message through noise.

Lecture 35
1. ~3.3219
2. Letters are dependent on the context in a natural language
3. 0 assumes all symbols are equally likely, 1 assumes symbols are independent of one another, 2 computes the likelyhood of symbols based on two-letter combinations, 3 computes probability based on three-letter combinations

Lecture 36
1. Multiple potential receivers could know different things about the possible contents of a message.
2. A message has finite possible contents based on what the receiver knows.
3. Higher redundancy typically means a higher entropy.

Lecture 37
1. Not all parentheses are matched so they're likely a swapped symbol too
2. Ciphers and other methods can encrypt a language without a key
3. None
4. Easily detectable redundancies can give clues to the meaning of certain symbols

Lecture 38
1. P
2. D(E(C, KE), KD)
3. Determine weaknesses in the language
4. Help them infer some meaning from the message without breaking the algorithm

Lecture 39
1. Computers may not be fast enough to break them with a reasonable speed
2. Only have to check between the known pairs against K
3. In combination they are very powerful and hard to reverse engineer
4. Confusion makes it difficult to extract information from plaintext and diffusion makes it necessary to look across multiple parts of the text
5. Neither are better necessarily

Lecture 40
1. Polyalphabetic substitution takes into account the position of the symbols being substituted.
2. Another plaintext string
3. Each letter in the plaintext can be mapped to any character in the alphabet that hasn't already been mapped.
4. monitorstogotothebathroom
5. 25 or 26
6. Probably not
7. reverse lookup on the table

Lecture 41
1. 26 possibilites for each letter
2. We know a simple substitution cipher was used so the two ys must be the same.
3. Yes, it would be difficult to prove that it isn't possible for it to exist

Lecture 42
1. Knowing that the XOR method is used and knowing the cypher text doesn't remove any possibilites
2. Working backwards from any knowledge about the key could eliminate some possibilites
3. It can be just as hard to transmit the key securely as it is to transmit the message

Lecture 43
1. It can be easy to determine that a transposition cipher has been used by checking probabilities in the cipher text agianst probabilities of symbols/trigrams/digrams in the original language.

Lecture 44
1. Symmetric
2. Key distribution is getting the keys out securely, management is keeping the keys secure where they're stored
3. No, doesnt have S's private key
4. Depends on the context and how many people are in the system

Lecture 45
1. More effective and computers are fast enough to account for the slowness
2. Changes on the ciphertext having predictable effects on the plaintext can lead to the meaning of the decoded message being different if someone intercepts and alters the ciphertext
3. It is malleable by design

Lecture 46 
1. addRoundKey, derives a new key from the original one through a recursive process
2. shiftRows, moves the position of data by adjusting rows
3. The matrix multiplication in encryption can be simplified and made faster in the implementation because the matrix contains lots of small numbers whereas the inverse array in decryption is harder to simplify multiplication with.
4. Rounds are repeat cycles to further change the encoded message, blocks are arrays of bytes being encrypted or decrypted
5. Mangle the encrypted text more and make it harder to reverse without knowing the key

Lecture 47
1. Identical blocks in plaintext yield identical blocks in ciphertext
2. Effectively randomize plaintext blocks before encrypting them
3. Content leaks and watermarking attacks
4. Produces random-appearing streams of bits rather than chaining blocks together

Lecture 48
1. Private keys
2. They're difficult to invert
3. People only need to know public keys and their own private keys, which don't need to be sent out.
4. {P}k^(-1)
5. Symmetric algorithms are much more efficient

Lecture 49
1. Yes, either can be used for encryption as long as the other is used for decryption
2. It's difficult to factor the primes out of large numbers
3. Yes
4. Nobody has the private key to decrypt it
5. Anyone could have B's public key
6. Only B has B's private key
7. Anybody could use the public key to decrypt
8. Have two sets of keys, one for authentication and the other for privacy

Lecture 50
1. To make encryption fast
2. Strong means that no collisions at all exist, Weak lets us choose the data
3. Second preimage resistance is weak collision resistance, preimage resistance is strong collission resistance
4. Means that collissions can be detected in a feasible amount of time
5. Collisions couldn't reliably be detected quickly with modern technology
6. There are better encryption scemes for confidentiality
7. Altering the encrypted text at all changes the whole message
8. Use RSA to encrypt the message and a send a hashed copy of the encrypted message that A can use to check the validity of the encrypted message he receives

Lecture 51
1. No, doesn't know R's private key
2. If it was done through RSA
3. No, latter does not provide authentication
4. Nobody but the owner of the receiver's private key should be able to strip the encryption away

Lecture 52
1. Nothing, probably could not retrieve A based on what they knew within the lifetime of the universe
2. Messages could be decrypted or spoofed
3. Messages could be decrypted or spoofed
