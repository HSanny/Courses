Ariel Sibille
as53547
ariels
arielsibille@gmail.com

Lecture 53
1. Because you wouldn't want somebody to repeat the same transaction multiple times from one instance of the signature. 
2. Public key encryption is expensive and the hash of a message will always be a fixed, finite, short value.
3. R gains the unforgeable, authentic, non-repudiation, tamperproof, and non-reusable assurances.

Lecture 54
1. It vouches that a party's public key is the correct key for that party, creating trust between parties. 
2. The hash binds Y to its key. 
3. In order to assure that neither item has been corrupted.
4. Then Z could be receiving messages that it assumed were from X but were actually from some other party with X's private key.

Lecture 55
1. Credential-checking. 
2. To ensure that after the credential is needed, it expires and can't just be used forever.
3. The information has been tampered with or the certificate is not valid. **

Lecture 56 
1. Simple Security, MLS, Diffie-Hellman.
2. Then the entire purpose of the protocol may be null or will simply not work.
3. Because you need to be able to reach inside of Ivan's box to remove your lock.
4. XOR all three messages.  
5. XOR messages 2 and 3. 
6. XOR messages 1 and 2. 
7. Protocols are difficult to design and easy to get wrong because generally you focus on the intended behavior of the system and it's difficult to think of unintended uses of them. 

Lecture 57
1. Protocols are important in the context of the internet because they regulate communication, and the internet is a communication pathway.
2. Cryptographic protocols are important on the internet because users would generally like their information to remain confidential, especially when completing financial transactions.
3. The protocol assumes that there is a public key infrastructure in place, and that each party has a reliable version of the other party's public key.
4. Each party needs to be satisfied that the other party has the key and uses it, and that the parties are who they say they are.
5. Yes, if each party is who they say they are then the key will be properly transmitted. 
6. If you get ahold of A's message and encrypt it you can send it to B, then B will cancel its private and public keys and you can just decrypt your own key when it sends the message back.

Lecture 58
1. Because of the temporal nature of protocols. Also, unnecessary messages are a point of weakness.
2. Because that's inefficient.

Lecture 59
1. An attack on a protocol depends on the purpose of the protocol;  if the attack violates system security but not the protocol then it does not constitute an attack on the protocol.
2. An attacker can use a message from some time ago and resend it to repeat a message over and over again, disrupting legitimate information or repeating transactions that should not be repeated.
3. An attack wherein an attacker simply inserts message into the flow of information is an attack wherein the attacker does not gain information. 
4.  An attacker cannot generate an arbitrary message, it cannot use keys that it does not have. 
5. Because of the distributed nature of the system.

Lecture 60 
1. Yes, but the messages would not be guaranteed to be fresh and A and B could not verify whether they both had the key. 
2.
1. The sender is identifying A and B to S and giving S a nonce.
The receiver can believe that A and B are parties that want to communicate and S is a nonce.
2. S is telling A its nonce, the identity of B (for verification), the key for A and B to use, and a message to send to B containing the key.
A can believe that the message is fresh, the key is between A and B, and that sending the message to B will allow B to reveal the key between A and B.
3. A is telling B its identity and the value of the key between them.
After this message, B can assume that A is the party sharing the key and that the key is the value included.
4. B is telling A its nonce.
After this message A can assume Kab works on messages from B.
5. A is telling B its nonce, minus one.
After this message B can assume Kab works on messages from A.

Lecture 61
1. As long as the attacker made it past the stage with S, they don't need Kas anymore. 
2. It depends on the strength of the encryption.
3. I may make a very strong Kas, such that it becomes unreasonable to expect the key to be broken.

Lecture 62
1. It guarantees that the key will be fresh and that B will have the key, but there is no guarantee to B that A will have the key.  
2. A and B don't necessarily know that they both have the key at the end of the protocol as opposed to Needham-Schroeder.
3. Adding anything into the message will fix the protocol, as it will prevent it from just being a function within a function. 

Lecture 63
1. Because a flawed protocol is dangerous and compromises the system if it does not meet its specifications.
2. Belief logic is a method of protocol analysis that dictates what parties in the protocol are supposed to be able believe about the state of the system from the messages they have received.
3. Beliefs come in with the parties that are using the program and define what the program is intended to accomplish for both of those parties. 

Lecture 64
1. Modal logic is standard propositional, predicate logic with additional primitives and rules of inference built in to reason about a particular domain.
2. If A believes that it shares a key with B and sees a message X encrypted with the key it shares with B, then it will infer that the message was encrypted and therefore sent by B.
3. If A believes that X is new and that B said X, then A believes that B believes X because X functions as a statement of belief from B.
4. If A believes that B is an authority on X and believes that B believes X, then A should believe X because B should be trusted about X.
5. Idealization translates the messages into BAN logic statements. It is useful for figuring out what purpose exactly a message serves and eliminating parts of the protocol that only serve as vulnerabilities to the system.

Lecture 65
1. Because plaintext can be forged by an attacker.
2. Because it reflects what a step is trying to communicate, not necessarily what it communicates completely.
3. It forces people to write down their assumptions as they go through the messages.
