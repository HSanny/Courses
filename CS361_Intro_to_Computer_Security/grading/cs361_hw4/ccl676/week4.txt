Connor Lirot
ccl676

Week 4 Questions

Lecture 53
1. If it were reusable, then unauthorized parties could assume the identity of the signer by reusing the signature
2. Because public key encryption is expensive to apply and the message could be aribtrarily long, but the hash is a fixed value
3. unforgeable, authentic, no repudiation, tamperproof, non reusable

Lecture 54
1. They provide certificates and assurance for the parties who need them
2. To authenticate the fact that X sent the message
3. To prove that Y and Ky were unaltered before X signed them
4. Someone else could sign the hash if the key was actually someone else's key

Lecture 55
1. Some unimpeachable authority first certifies another party to be an authority
2. Because it might be unsafe to unconditionally certify someone without a time bound
3. That would mean the received value was altered

Lecture 56
1. X.509, digital signatures
2. If one step is ingored, then the protocol hasn't been completed, so everything is invalid
3. Because if neither party knows the key of the other, they both must make and remove their own keys
4. An evesdropper who stores the three messages can XOR combinations of them to extract M
5. Same method
6. Same method
7. It's hard to know what angle an attacker can attack from

Lecture 57
1. You don't know if a party you're interacting with is authentic, so you need protocols to provide safety and assurance
2. They provide unicity, integrity, authenticity, confidentiality, non-repudiation of origin, and non-repudiation of receipt
3. A and B both have each other's public keys
4. A shares with B a secret key K, and each party is authenticated to the other
5. Yes because the outer encryption provides confidentiality, and the inner encryption provides authenticity
6. If a third party sends B A's message but with their own key on the end, B will encrypt it again, but the two inner encryptions will cancel out, so the two remaining encryptions could be easily removed as well

Lecture 58
1. If there are unnecessary steps, you could just leave them out and accomplish the same goals with less work
2. If it's encrypting items that could be sent in the clear, then it's wasting time and resources to do that

Lecture 59
1. It's hard to know ahead of time how someone could attack a protocol because there aren't a finite number of ways to do so
2. The two parties communicating could get confused and misunderstand each other
3. Yes. A replay attack could be like that. You might replay previous messages without knowing what the messages actually meant. You could just do it to mess with the parties communicating
4. The attacker can't just arbitrarily send messages because it has to seem to satisfy the protocol to fool the involved parties
5. So that parties can communicate without prior planning

Lecture 60
1. No because otherwise it would be subject to replay attacks
2. 1 - A says he wants to communicate with B. S believes that this message is fresh. 2 - S says A and B now have this key. A believes this. 3 - A says that they have this key. B believes this because it is certified by S. 4 - B says that he got the message, and A believes that the message is fresh. 5 - A says he got B's message and B believes that is fresh because of the nonce - 1

Lecture 61
1. Because people can use Kas to communicate with S
2. Not really because protocols are designed with the assumption that the keys have integrity and are held confidentially
3. Regularly check that keys have not been compromised by having parties verify that they did in fact send the messages that were received

Lecture 62
1. That they are authentic and talking to each other
2. B doesn't know for sure that A has the key at the end of Otway-Rees
3. By using a different protocol

Lecture 63
1. You need to verify a protocol because if it's not verified, it wouldn't be able to provide you assurance
2. Reasoning about a protocol by considering what certain parties believe at certain steps of the protocol
3. The parties believe certain things at certain points in the protocol, and protocols terminate with all parties having a set of beliefs about the interaction that just took place

Lecture 64
1. Logic where you use operators to express beliefs
2. If A believes that A and B share a key, and A receives a message encrypted with that key, then A believes that B sent that message
3. If A believes X is fresh and A believes B once said X, then A believes that B believes X
4. If A believes that B is an authority over X, and A believes that B believes X, then A believes X because A trusts B
5. It is a way to get from protocol steps to logical inferences. We need it because it helps us see what goals are being accomplished and what vulnerabilities exist.

Lecture 65
1. You can't really infer anything from plaintext because anyone could say it at any time
2. Because the parties can assume certain things will happen when other things happen
3. You can expose vulnerabilities using BAN proofs because you're looking at it from a different point of view. You can be surprised with what you find when you carry out the proofs.