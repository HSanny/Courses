Questions Week 4

Even Hvatum
UT EID: eah2322
CS Login: ehvatum
Email: ehvatum@utexas.edu

Lecture 53

1. If a digital signature was reusable then we would lose non-repudiation and authenticity, meaning that some other entity would be able to send messages with S's signature if they were able to strip it off the original message that S signed.

2. Hashing the message first is more efficient when signing and prevents the message from having to be split, meaning that a receiver could be unaware if he received the whole message or not. It also makes the transmission more tamperproof.

3. R knows for sure that the message isn't forged since only S can sign it with his private key, he is able to verify the authenticity with S's public key, using S's private key provides non-repudiation since only S can use that key, the message is tamperproof since only R can strip off the outer encryption, and finally the signature is not reusable since it is bound to the message.

Lecture 54

1. Certificate authorities vouch for the accuracy of the binding between a public key and the owner's identity to allow a third party to confirm that the public key belongs to the owner it is dealing with.

2. Only X can use its private key so this is a way for X to vouch for the validity of Y's certificate.

3. Hashing the public key and message allows Z, the one communicating with Y, to hash the message and key he receives to compare it with the hash that X produced to ensure that neither the key or message were tampered with after X certified them.

4. If Z did not have a trustworthy public key for X then Z would not be able to trust X's vouching for Y's certificate and should not send them any sensitive messages or trust messages sent from them.

Lecture 55

1. At the root of a chain of trust must be some entity which is so above reproach that they can be trusted to provide certificates for other entities. In other words, at the root exists a completely trustworthy party.

2. The validity interval prevents a once trustworthy entity from using an outdated certificate long after anyone verified their trustworthyness. It forces re-certification periodically.

3. If the hash and received value did not match, it is possible that either the message or the key were tampered with and should therefore not be trusted.

Lecture 56

1. Previously discussed protocols include RSA, public key asymmetric security, symmetric key security, and the one-time pad.

2. If one step is ignored an eavesdropper may be able to decode the messages or the messages may be un-decipherable for both of the parties attempting to communicate.

3. If the ciphers don't commute then there is no way for the original sender to remove his cipher when he receives it back from the receiver who also applied his cipher to it.

4. If one XOR's the original message from A to B with the message that B sends back, then one ends up with B's key. You can then use this key to XOR with the message that A sends back to B after removing his cipher which will give you the message unencrypted.

5. XORing the message that B sends to A with the final message that A sends back to B will yield A's key.

6. XORing the original message from A to B and the message that B sends back to A will yield B's key.

7. It is difficult to design a protocol that is unbreakable for an attacker but guarantees that both of the approved parties are able to communicate freely without loss of information or trust. Along these same lines, the subtleties in the design may leave the protocol vulnerable to attack.

Lecture 57

1. Protocols allow communication between two entities, one of the fundamental functions of the internet and a cornerstone of its design.

2. Cryptographic protocols allow for this communication while preserving confidentiality and authenticity over a public network.

3. It is assumed that A and B both have a trustworthy public key for the other.

4. The goal of the protocol is for A and B to communicate a key and verify that the other received that key confidentially.

5. Yes the goals are satisfied. Both parties now have the key and they know that the other party was the one that sent them the key.

6. B cannot be sure that A knows that he received the key. A must compare the keys to ensure no tampering has occurred.

Lecture 58

1. The more unnecessary steps or messages, the more susceptible the protocol is to a principal missing a step or message, confusion, or errors. Superflous messages also provide an attacker or eavesdropper with more information to use. The idea is to minimize exposure and to give a would-be adversary the least amount of data to work with.

2. Encrypting a message that could be sent in the clear is an unnecessary drain on system resources and exposes the keys and ciphers to an attacker or eavesdropper on the communication without benefit.

Lecture 59

1. Even if there are no noticeable consequences, any attempt to subvert the protocol is an attack. It is a difficult question to answer since almost anything can constitute an attack.

2. If an attacker has access to previously sent but legitimate messages then he can resend them and the receiver will believe they are legitimate since the authentication is a success and act on the information in the message which may now be long outdated.

3. Yes, a replay attack for example does not provide the attacker with any information other than perhaps the behavior of the recipient. An interleaving attack also fails to provide the attacker with any information while still subverting the protocol.

4. Attaching signatures and authentication to messages means that a receiver may easily ignore anything that fails to provide the proper authentication meaning that an attacker is forced to come up with a better way or truly disturbing the communication between two entities.

5. Protocols must be asynchronous since the different receivers won't even know that a protocol has been started until they receive a message. They must also be able to send and receive a variety of messages at any time whenever they need to so they can't be forced to be locked into some synchronized communication protocol.

Lecture 60

1. No, the N-S Protocol is based on the use of nonces.

2. For each step:
	1. A informs S that he would like to communicate with B and gives nonce Na. S is entitled to believe that A wants to communicate with B using nonce Na.
	2. S confidentially informs A that he received the request and provides a key for A and B to use to communicate as well as an ecryption of the message and key for B to decipher. A now believes he has a secure way to communicate with B and provide authentication.
	3. A informs B that he wants to communicate using the encrypted message S provided as authentication. B believes that he has a key to use with A's communication and that the message is authentic.
	4. B informs A of his nonce. A believes B's message is fresh.
	5. A informs B of a new nonce. B now believes the communication is fresh.

Lecture 61

1. If the attacker had stored {Kab, A}Kbs from S's response to A while the attacker had A's key then he'd be able to send that encrypted message to B and establish communication since there is no way for B to verify that it is a fresh message and not an old reused one.

2. Yes, asking that question is fair. One should never assume that keys will never be compromised and one should plan accordingly to minimize the consequences.

3. As the protocol designer, addressing these flaws should include ensuring that there is a nonce attached to every communication, especially the one that a receiver may take as an indication of the attempt for new communication to be set up.

Lecture 62

1. The O-R Protocol guarantees both A and B that the key generated by S is a fresh one.

2. O-R guarantees that the message from S is fresh which N-S does not.

3. Using a nonce or some kind of unique session identifier would prevent B from accidentally allowing C to extract his original communication with A.

Lecture 63

1. Verification ensures that a protocol achieves its intended function or goal. Basically, verification is certifying the correctness of a protocol.

2. Belief Logic is the reasoning about what the different principals in the system should be able to infer from the messages they receive.

3. Beliefs are the assumptions the system operates on and that which the programmer may rely on to dictate the rules and behavior of the system. It is what the program takes to be true.

Lecture 64

1. Modal logic is based on a set of symbols or rules that have some set meaning. It is exclusive in the sense that if one is true, then the opposite is false. It formalizes the beliefs from Belief Logic.

2. If A believes that he and B share a secret key that only the two of them know and that he can currently see a message X encrypted by that key then he believes that B sent message X.

3. If A believes that X is a fresh message and that B once said X, then X must be a fresh message from B and therefore A believes that B believes X to be true.

4. If A believes that B has jurisdiction (or control) over X and he able believes that B believes the message X is true, then he also believes X is true since B would have changed it otherwise.

5. Idealization is the removal of superflous message content in an attempt to reduce it to its intended semantics. It is intended to remove all content that does not contribute to the beliefs of the recipient and that can be forged.

Lecture 65

1. Plaintext can be forged so it is omitted since it serves no purpose in the semantics.

2. The protocol makes some strong assumptions that are not necessarily the safest to make in terms of security. These assumptions are what the N-S protocol is criticized for.

3. By analyzing the protocol step by step, one can see where assumptions are made that have no basis in anything the principals can see so far. Notably, it fails to match the inference rules provided by the BAN protocol as laid out earlier as some components are missing meaning that we are making an unsafe assumption.