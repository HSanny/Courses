Name: Jacob Harvey
EID: jlh5585
CS Login: jlharv	
Email: jacoblharvey@utexas.edu




CS361 Questions: Week 4
The questions marked with a dagger (†) require external research and may be more
extensive and time consuming. You don’t have to do them for the assignment but,
but do them to increase your competency in the class.
Lecture 53
1. Why is it important for a digital signature to be non reusable?
So you can have accountability. Signature should be bound to the document

2. Why is it the hash of the message typically signed, rather than the message
itself?

fHas to be tamper proof
3. What assurance does R gain from the interchange on slide 4?
He knows the message is from A, because it's encrypted with A's private key

Lecture 54
1. What is the importance of certificate authorities?
So they can verify certificates and companies, make sure the company is actually the company

2. In the example on slide 5, why does X sign the hash of the first message
with its private key?
So when Y can certify that it's X sending the message, via decoding it with X's public key
3. Why is it necessary to have a hash of Y and Ky?
Double check Ky goes with Y
4. What would happen if Z had a public key for X, but it was not trustworthy?
Nothing, could compare new hash made with X's public key against the message. checks for corruption

Lecture 55

1. What happens at the root of a chain of trust?
say X is the root, X sends his public key to everyone. To make a certificate, X hashes Y's identitiy and key with his private key, so everyone with X's key can confirm Y's identity

2. Why does an X.509 certificate include a “validity interval”?
To make sure the certificate hasn't expired, to prevent someone from using an expired key to scam people

3. What would it mean if the hash and the received value did not match?
That it's a fake certificate, and to not trust the sender

Lecture 56
1. What are some protocols previously discussed?
SSL, certificates

2. What may happen if one step of a protocol is ignored?
The whole communication "chanel" could be compromises, and the message, the private keys, or the integrity could be compromised also

3. Why must the ciphers commute in order to accomplish the task in slide 4?
In order to communicate over a hostile environment, protocols have to use public-key systems. It's the problem of the "lock box," where A must send (M)Ka to B, B send (M)Ka)Kb back to A so A can send (M)Kb to B to decode

4. Describe how an attacker can extrac\t M from the protocol in slide 6.
If he has all three of the messages between A and B, he can XOR them together to get all three compononets. 1 and 2 together to get Kb, 2 and 3 together to get Ka, all of them to get M

5. Describle how an attacker can extract Ka from the protocol in slide 6.
#4
6. Describle how an attacker can extract Kb from the protocol in slide 6.
#4
7. Why are cryptographic protocols difficult to design and easy to get wrong?
Lecture 57
1. Explain the importance of protocols in the context of the internet.
	The internet is an open, hostile envrionemtn in which protocols are necessary to protect and secure information flowing through the internet

2. Explain the importance of cryptographic protocols in the context of the internet.
at #1

3. What are the assumptions of the protocol in slide 6?
Assumes that A and B are actually A and B, that the keys are fresh, and there's no way for someone to intercept the message and do a man in the middle attack. Assumes there's a public key infrastructure in place

4. What are the goals of the protocol in slide 6?
To securely send a key between A and B. No, weak to man in the middle. 

5. Are the goals of the protocol in slide 6 satisfied? Explain.
No, could be expired message, could be a man in the middle, 

6. How is the protocol in slide 6 flawed?
Man in the middle could trick A and B

Lecture 58
1. Why is it important to know if a protocol includes unnecessary steps or
messages?
Kind of like principle of least priviledge and weakest link. By using excess processes, a protocol could make unneccessary holes in the security. Also, usually step 2 depends on step 1. 

2. Why is it important to know if a protocol encrypts items that could be sent
in the clear?
To make sure you don't send unencrypted messages over the internet and get the whole communication compromised?

Lecture 59
1. Why might it be difficult to answer what constitutes an attack on a cryptographic
protocol?
Very hard to tell if a protocol has been compromised. B only know what it recieves, and same with A, and S. The attack usually won't leave signs of the protocol being compromised, especially when it's just listening. 

2. Describe potential dangers of a replay attack.
Could get an old key, and use that to trick the other computer into starting a new communication. 

3. Are there attacks where an attacker gains no secret information? Explain.
Yes, there could be attacks in which data is compromised or the connection is lost, which both could be done without accessing the data. 

4. What restrictions are imposed on the attacker?
Can't be an arbitrary attack. Has to be clever and mostly undetectable. Protocols limit the attacker's potential, limit the ability to control the message infrastructure

5. Why is it important that protocols are asynchronous?
Principle of least privilidge. In case one of the keys or parties is compromised, the protocol tries to limit the damage done by making each computer only visible to it's own messages


Lecture 60
1. Would the Needham-Schroeder protocol work without nonces?
No, an attacker could use a replay attack to grab an old message, send it later, and get a valid key back (if nonces aren't used). Could use this to make a man in the middle attack too

2. For each step of the NS protocol, answer the two questions on slide 5.
1a A tells S it wants to start a link with B, needs info to send to B
1b Entitled to believe that this is a new communication from A, in that, if Na is a new nonce
2a sends necessary information to start a communication with B. same nonce to verify, B is the identity, and the new key both should use.
2b Believed that it's the same S from before (trust) due to Na, believe Kab is between A and B
3a Wants to start a new communication by sending a message only B can decode
3b That A has been in contact with S and is a verified source since message was encrypted with Kbs
4a Sends a new message confirming it got the previous message and wants to start a new communication channel
4b Know's the message was recieved by B, since it was decoded and now encrypted between A and B
5a Sends confirmation that it recieved the message
5b it can communicate with A
Lecture 61
1. As in slide 5, if A’s key were later changed, after having Kas compromised,
how could A still be impersonated?
Yes, B would never know that A's keys were changed, and the attacker C could send B C's keys, acting like it is A. 

2. Is it fair to ask the question of a key being broken?
Yes, want to see how much information would be leaked in the case of a breach.

3. How might you address these flaws if you were the protocol designer?
Add another authentication step between B and S, confirming A's identity. Maybe include a type of nonce in there too

Lecture 62
1. What guarantees does Otway-Rees seem to provide to A and B?
A verification step between the two via S. S controls exchanging keys and verification

2. Are there guarantees that Needham-Schroeder provides that Otway-Rees
does not or vice versa?
No, man in the middle can still happen somehow (slide 3).

3. How could you fix the flawed protocol from slide 4?
Use a third party to verify A and B for the other. Use another protocol

Lecture 63
1. Why is the verification of protocols important?
To make sure you're not using an expired protocol that could be flawed or compromised. Protocols often go for years with major security flaws.

2. What is a belief logic?
It's a modal logic that's used to reason what the principles can believe after they recieve a message

3. A protocol is a program; where do you think beliefs come in?
From a principle's view, it's very hard to know with 100% certainty where a message came from and if it's malicious. Protocols use various exchanges and keys to try and augment this problem, but at a certain point, A just has to believe that S is not the attacker, etc. 

Lecture 64
1. What is a modal logic?
A type of formal logic that uses boolean logic and a small set of primitive belief statements 

2. Explain the intuition behind the message meaning inference rule.
It states that A believes that A and B share key, and if a message comes encrypted with that key, A can assume that the message came from B. 


A believes, AB share a key, A recievesa  message encrypted with that key, 

3. Explain the intuition behind the nonce verification inference rule.
Builds on the one above, just states that if A gets a "fresh" message from B, then B believes the message at this time

4. Explain the intuition behind the jurisdiction inference rule.
A believes that B is an authority on type X, and if A believes B, then A believes X. Basic inference

5. What is idealization and why is it needed?
Idealization is to analyze the protocol and determine the goals of each step and what the reciever can ascertain from that step. 

Lecture 65
1. Why do you think plaintext is omitted in a BAN idealization?
Assuming plaintext means the message being sent(?): It's not relevent to the protocol's goals and security.

2. Some idealized steps seem to refer to beliefs that will happen later in the
protocol. Why would that be?
They explain the step's purpose and the eventual goal the steps are working towards, have end goals for each principle. The logic should work towards those goals

3. One benefit of a BAN proof is that it exposes assumptions. Explain that

By breaking down each step into modular logic, it's easier to distinguish if there's an assumption or something that's not needed. It shows how each reasoning comes about, and why each principle believes in what it does. If there's a step that comes from no where, an assumption was made

