Joseph Hernandez
jh43967
j_hernandez10@utexas.edu

Lecture 53
1)
  It is important because you don't want people to be able to remove
  the signature then be able to edit a message and put it back on again.

2)
  A hash of the message is used because the message can be arbitrairily 
  long while a hash is a fixed length and can be much shorter than the
  message.

3)
  That only S could have signed it, a third party can verify the signature
  S can't say that it didn't sign it, R know it is tamperproof because 
  only R can decode it, and the signature is not reuseable.

Lecture 54
1)
  They are a third party that allows for confidence in knowing that a 
  public key is binded to only one party.

2)
  X signs it as a way of showing that it certifies the hash which it
  it signed.

3)
  It is necessary because it binds the party and its' key together to one specific hash for that party to be verified with.

4)
  If Z had a non trustworthy key for X then it would mean that it could not
  trust verifications that are signed by the key it has for X.

Lecture 55
1)
  It is grounded by an unimpeachable authority in trust.

2)
  It includes a validity interval because certificates have to be updated
  so the verifier can make sure that it is giving its' stamp of approval
  to the same party it originally gave it to.

3)
   If the hash values do not match each other than someone has tampered 
   with the certificate or the party who you are in contact with is not
   who they say they are.

Lecture 56
1)
  RSA,one way functions, symetrical protocols are some we have dicussed.

2)
  If one step is ignored than there is no way to verify that it either
  got to who it was meant to or who it was sent by.

3)
  They must commute otherwise their would be no way for the sender to
  remove their lock from the messag.

4)
  They could do it by XORing message 3 with message 2 to remove the lock that b has on message two then XOR the result of that with message 1 to remove the lock that A has on the message.

5)
  XOR the result of question 4 with message 1.

6)
  Message 1 XOR message 2 XOR with the result of question 4.

7)
  Cryptographic protocols are difficult to design and easy to get wrong
  because you have to consider the mathimatical properties of the actions
  and consider how someone could use different steps of your protocol
  against the protocol itself.

Lecture 57
1)
  Protocols are important on the internet because there needs to be a
  defined way in which people comunicate and verify each other and the 
  actions which people take.

2)
  The importance of cryptographic protocols in the internet are important
  because you want a way to ensure that someone is who they say they are
  and that someone cannot edit or view messages you send as well as make 
  sure that someone can deny interacting with you on the internet.

3)
  The protocol assumes that they is a public key system in place and that
  each party has a reliable verion of the others' public key.

4)
  The goal aare that a message is sent securely and that A knows it got to
  B and B knows that A sent the message.

5)
  The goals are satisfied because under the assumptions only A and B
  are allowed to read each message and verify that the other either
  sent or read it.

6)
  The protocol is flawed because there is no guarenteed that the message
  has not been altered by B when it was sent back to A.

Lecture 58
1)
  It is important to know if certain steps are unncessary steps or
  messages because there is no point to include them if they do not 
  advance the goal of the protocol.

2)
  It is important to know if it encrypts things that do not have to
  because the encyption could slow down the overal process and if a
  step doesn't advance a goal there is no need to do it.

Lecture 59
1)
  It might be hard to figure out what constitues an attack on a 
  cryptographic protocol because you can't always know every new 
  way someone comes up with to attack your protocol.

2)
  The danger of a replay attack is that you can confuse both parties
  about what the intitial interaction was about and potential have a
  party reperform something or do some unwanted behavior.

3)
  Yes such as a denial of service attack which is just meant to interrupt
  the interaction between one party and its' customers.

4)
  The attacker cannot send arbitrary messages in the protocol because
  that would mean that the attacker already has acess to the secure
  channel.

5)
  It is important because the nature of messages on the internet is of
  an asynchronous nature and it is not assumed that someone always knows
  when they are participating in a protocol until it recieves a message.

Lecture 60
1)
  No it would not work without the nonces because then it would be
  susceptible to replay attacks.

2)
  s1)I'm A and I want to send a message to B here is a new nonce. Reciver
     knows that A wants a new key to talk to B.
  s2)Okay A here is your key,the nonce, the person this lets you talk
     to and what you need to send them. Reciever knows that it was send
     from S.
  s3)It is saying here is the key that I want you to use to talk to me.
     Reciever is entilted to believe that A wants to talk with it using
     the key and that the keys was created by S and it is in step 3 of
     NS.
  s4)B is letting A know that it recieved the key and can use it. The 
     reciver can believe that B got the key and that B wants to know 
     it A can use the key as well.
  s5)A wants to tell B that it can also use the key and recieved Bs' 
     latest message. B can assume that the protocol is now finsihed
     and that it can securely talk with A.

Lecture 61
1)
  A could still be impersonated by someone who cracks what Kab is and
  then initiates a conversations with B.

2)
  It is fair to a certain extent depending on the level of encryption
  used, and at the very least it is fair to at least consider and be 
  aware of such a situation.

3)
  I would address the flaws by adding a nonce to message three and also
  by changing the keys subjects have with S on a regular basis.

Lecture 62
1)
  Otway Rees guarrentees that S knows that the real A and B want to 
  talk to each other.

2)
  It does not guarentee that A and B have the recieved the same key and
  can use it to communicate.

3)
  I would try to fix the flaw by adding in some form of third party to
  verify that A wants to and is talking to B. So some form of Otway-Rees.

Lecture 63
1)
  Verification protocols are important because they give a way for
  people to reason on the security of the protocol they are looking 
  at to see whether or not it suits their purposes.

2)
  A logic that allows you to reason about what the principles are
  entitled to believe after recieving a message.

3)
  Beliefs come in with what each step in the program is assuming a
  previous step is sending it and the form in which it is being sent.

Lecture 64
1)
  A modal logic is a type of logic which allows someone to infer
  something about a change from one state to another and formalize it.

2)
  The intuition is that if A knows they share a key and a sees 
  something encoded with that key then it must come from B.

3)
  The intuition is that if A thinks something is fresh and that
  it B is the one who sent it then that means B must also believe that 
  the thing sent is fresh.

4)
  The intuition is that if A thinks B is an authority on something and
  A knows that B believes in something  then that means that A can also
  believe in that something.

5)
  Idealization is the conversion of a message into what the step
  is ideally trying to accomplish belief wise.

Lecture 65
1)
  I think plaintext are ommited from BAN so that it does not influence
  the idealization of steps in a protocol.

2)
  If some steps refer to beliefs that will happen late in a process then
  that means that the later step is assumed to have to happen.

3)
  With assumptions exposed it allows someone to gain insight in what is
  necessary for a protocol to work and how soon those assumptions are 
  made within a protocol.