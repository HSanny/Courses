Name: Jeff Upton
EID: jau55
CS Login: jupton
Email: jeffupt@gmail.com

Lecture 53
==========

1. A reusable signature could be used to sign a document that the authenticated user didn't intend. A signature should be bound to the document.

2. Because public key encryption is expensive and a message may be arbitrarily long, the hash is a fixed size.

3. The message is unforgeable, authentic, no repudciation,tamperproof and non reusable.


Lecture 54
==========

1. A certificate authority validates the binding between a public key and an identity.

2. So that others are able to validate that the message came from X and noone else.

3. So that we can validate that Y and Ky were not altered.

4. Z would be unable to verify that messages signed by X were authentic.


Lecture 55
==========

1. The identity of subordinates in the chain is validated. The root of the chain must be implicitly trusted.

2. A validity interval introduces the notion that a certificate can expire and alleviates the authority from having to vouch for an identity indefinitely.

3. The contents of the certificate are not to be trusted and the identity/public key pairing should not be trusted.


Lecture 56
==========

1. Key exchange, communication on the internet.

2. The security of the entire process can be compromised.

3. It must be possible to remove the encryption in the same order it was applied.

4. Simply XOR all messages together to get M.

5. Once you have M, XOR it with the first message to get Ka.

6. Once you have M and Ka, XOR both of those with the second message.

7. The flaws in protocols can be very subtle.


Lecture 57
==========

1. Nearly every facet of the internet involves some protocol. HTTP, TCP, etc.

2. Cryptographic protocols are often necessary in the internet in order to maintain confidentiality and authenticity.

3. There's a PKI in place and A and B have the correct public keys assigned to them.

4. The goals are to share a secret key that only A and B know about and can use to send messages securely.

5. No, see step 6 - a third party can obtain access to the key.

6. A third party can send an intercepted message encrypted with its own public key and get the private key of one of the parties.


Lecture 58
==========

1. Efficiency - unnecessary steps or messages can lead to vulnerability and decrease the speed of the system.

2. Efficiency - encryption takes time and unnecessary encryption provides a possible vulnerability as an attacker can get both sides of the specified encryption (plaintext and ciphertext).


Lecture 59
==========

1. There are many difficult questions about a protocol, like what are the possible consequences of a leaked key?

2. An attacker can cause the system state to be affected in some known way.

3. In a replay attack, the attacker doesn't have any secret information, but can cause the system to behave in a certain way.

4. The attacker can't generate a message with a key that it doesn't have.

5. No party in the protocol has any visibility into the protocol except through messages it sends or received. In addition, a party doesn't know it's participating in the protocol until a message is received.


Lecture 60
==========

1. No, the nonces are the mechanism by which the party can determine the freshness of a message.

2. 
  a. A wants to communicate with B securely and this nonce can be used in the response.
  b. S sends the generated key to A and a message that it can send to B so B has the key.
  c. A tells B the key that can be used for secure communication, vouched for by S.
  d. B tells A that it has a key and an encrypted nonce.
  e. A tells B that the nonce it sent was able to be decrypted and a response was sent in kind. 


Lecture 61
==========

1. The attacker could simply generate a new key and send it to B. {Kab, A}Kbs

2. Yes, if the key is leaked there is still an advantage to limiting the damage caused.

3. I would add a nonce to the last two messages so that both A and B know that the key is actually fresh.


Lecture 62
==========

1. That a key has been established that they can both use to securely communicate.

2. Needham-Shroeder provides the guarantee that both A and B have the key, while Otway-Rees does not.

3. We could add a nonce to the message protocol so that the inner message could not be replayed.


Lecture 63
==========

1. Protocols are very difficult to get correct, for this reason a formal verification can ensure correctness.

2. A system that allows reasoning about a protocol based on what a principal should be able to infer from a message.

3. Beliefs could be considered the state of "global" variables in the program.


Lecture 64
==========

1. A system of operators and predicates that allow for reasoning about a protocol.

2. If A sees a message encrypted with a K that only it and B know, then A can infer that B sent the message.

3. If A sees a fresh message from B, then A can infer that B believes the message.

4. If A knows that B is an expert on something and knows that B believes something, then A believes it too.

5. Idealization is the conversion of protocol steps to BAN logic. It is necessary to omit messages that do not contribute to the beliefs of any principals.


Lecture 65
==========

1. Plaintext is omitted since it can be forged.

2. The principals (after the first message has been received) know that they are participating in the protocol.

3. For the proof to be correct, it is possible to expose assumptions that must be made that may not be readily apparent when designing the protocol.

