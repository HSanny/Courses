Name: Kevin Nguyen
EID: kn6347
CS Login: knguyen
Email: KevinNguyenn@utexas.edu

/************************************************************/
Lecture 53 (Digital Signatures)
1. Is it important for a digital signature to be non-reusable because the signature cannot be detached and reused for another message.

2. The hash of the message is typically signed, rather than the message itself because it is expensive to utilize public key encryption, and the message could be arbitrarily long. The hash is easier to compute and access since it is a short finite value.

3. The assurance R gains from the interchange ({{M}Ks^-1}Kr) is that the message is unforgeable because only S can use Ks^-1, authentic because a third party can verify the signature with Ks, not repudiable because only S can use Ks^-1, tamperproof because only R can remove the outer layer of encryption, and not reusable because the signature is tightly bound to the message M.
/************************************************************/


/************************************************************/
Lecture 54 (Certificates)
1. The importance of certificate authorities is that they can vouch for the accuracy of the binding.

2. X signs the hash of with its private key because the receiver can verify that X certifies authority by using X’s public key to decrypt the message.

3. It is necessary to have a hash of Y and Ky so that the receiver can access the message signed by X relatively fast, instead of accessing the entire message, which could be expensive to access.

4. If Z had a public key for X but was not trustworthy, it would mean that potential tampering could occur and invalidate X’s signature. This means that Z would not allow Y to access Z.
/************************************************************/


/************************************************************/
Lecture 55 (Certificates II) 
1. At the root of a chain of trust, it contains a link to all the certificates up to the recent principal needing certification. The root is a unimpeachable authority.

2. The X.509 certificate includes a “validity interval” because it retains the freshness of the certificate, not allowing potential attackers to use the certificates for malicious gains.

3. If the hash and received value did not match, it means that the certificate is not valid.
/************************************************************/


/************************************************************/
Lecture 56 (Cryptographic Protocols)
1. Protocols previously discussed include cryptographic hash functions, key exchange, digital signatures, and certificates.

2. If one step of a protocol is ignored, it could lead to a vulnerability or a breach of a secret message.

3. Ciphers must commute in order to “reach inside” a particular encryption to undo your encryption

4. An attacker can extract M from the protocol by XORing with his own key Kb.

5. -An attacker can extract Ka from the protocol by XORing with (M and Ka) and Kb.

6. -An attacker can extract Ka from the protocol by XORing with (M and Ka) and Ka.

7.Cryptographic protocols are difficult to design and easy to get wrong because there are subtleties that can break the protocol.
/************************************************************/


/************************************************************/
Lecture 57 (Cryptographic Protocols II)
1. The importance of protocols on the Internet is necessary in order to ensure that the delivery of messages is synchronized while maintaining syntax and semantics in a distributed context.

2. The importance of cryptographic protocols on the Internet is necessary to safeguard the transmission of messages so that they are not tampered with or lost.

3. The assumptions of the protocols is that both A and B exhibit a public key infrastructure and both have a reliable and trustworthy copy of the others’ public key.

4. The goals of the protocol is to send a message so that A and B know that they share a secret key and both are authenticated to each other.

5. The goals of the protocol are satisfied to a certain extent since the protocol clearly shows its intended function of sharing a secret key, but there is a subtlety that deems the protocol flawed.

6. The protocol in is flawed because an attacker can intercept a message and use it to extract the original secret key.
/************************************************************/


/************************************************************/
Lecture 58 (Cryptographic Protocols Abstractly)
1. It is important to know if a protocol includes unnecessary steps or messages so that improvements can be made to reduce the transmissions bandwidth

2. It is important to know if the protocol encrypts items that could be sent in the clear because extra steps could be taken to strengthen the encryption of the item.
/************************************************************/


/************************************************************/
Lecture 59 (Attacks on Cryptographic Protocols)
1. It might be difficult to answer what constitutes an attack on a cryptographic protocol because there are many instances which a attack could actually be a run of the protocol and vice versa.

2. The dangers of a replay attack, where an attacker records messages and replays them at a later time, is that the confidentiality of the previous message is breached and can be used at a later time to exploit future messages

3. There are attacks where an attacker gains no secret information, as he/she might not have a secret key to access the secret information.

4. The restriction imposed on the attacker is that he/she cannot generate arbitrary messages even though the attacker has access to all of the traffic and can interject his/her own messages into the flow.

5. It is important that protocols are asynchronous because the limitations of the Internet operate on a distributed context, requiring for protocols to be asynchronous.
/************************************************************/


/************************************************************/
Lecture 60 (The Needham-Schroeder Protocol)

1. The Needham-Schroeder protocol would not work without nonces because there needs to be a mechanism for the sender and receiver to know that the incoming messages are fresh.

2. Two questions Needham-Schroeder Protocol
	A → S : A, B, Na
		Sender is providing A, B, and Na to request a shared key between the two players. Receiver is entitled to believe that the sender wants it to generate a shared key between the two players
	S → A : {Na, B, Kab, {Kab, A}Kbs}Kas
		Sender is returning Na, confirm the destination principal B, the generated shared key Kab, a package {Kab, A}Kbs for the destination principal B to unpack, all wrapped around an encryption Kas to send back to the initiator principal A. Receiver is entitled to believe that S will return with the contents it needs to generate a shared key with the destination principal.
	A → B: {Kab, A}Kbs
		Sender is sending an encryption to the destination principal that contains the shared key, a receipt from the original principal, encrypted with Kbs that destination principal B can see. Receiver is entitled to believe that it is going to receive an encrypted message that contains the shared key and the receipt from the original principal. However, the receiver cannot guarantee that the message will be fresh.
	B → A : {Nb}Kab
		Sender is sending an acknowledgement nonce back to the original principal A to let it know that it received its message. Receiver is entitled to believe that it will receive an acknowledgement from the destination principal B.
	A → B : {Nb - 1}Kab
		Sender is sending a nonce back to the destination principal B to let it know that it received its acknowledgement. Receiver is entitled to believe that it will receive the acknowledgement from original principal A.
/************************************************************/


/************************************************************/
Lecture 61 (Attacks on Needham-Schroeder)
1. A could still be impersonated by having the attacker request a shared key with B and the modified A’ key.

2. It depends if its fair to ask if a key is broken because of the strength of the encryption.
/************************************************************/


/************************************************************/
Lecture 62 (The Otway-Rees Protocol)
1. The Otway-Rees protocol guarantees that A and B are authenticated with each other and that A and B can communicate with S.

2. If the Needham-Schroeder protocol is run successfully, it guarantees that A and B acknowledge that they share a secret key. In the last step of Otway-Rees, B does not know whether A received the shared key or not. Otway-Rees guarantees that A and B establish a secure connection, while Needham-Schroeder does not guarantee that B received the message from A in the third step of the protocol since there is not nonce to verify that the message is fresh.

3. The flawed protocol from slide 4 can be fixed by introducing a timestamp or nonce to verify that the message preserves its authenticity.
/************************************************************/


/************************************************************/
Lecture 63 (Protocol Verification)
1. The verification of protocols is important because it attempts to highlight the correctness of the protocol, where there are some subtleties that render the protocols flawed.

2. A belief logic is a formal system of reasoning about beliefs. It includes a set of logical operators and rules of inference.

3. When a protocol is a program, the beliefs come in after every major step in the program, including conditionals and assignments.
/************************************************************/


/************************************************************/
Lecture 64 (The BAN Logic)
1. Modal logic is a type of logic that uses operators to express certain beliefs.

2. The message meaning inference rule says that when A and B share a key and A receives a message X that is encrypted with the shared key, then A can be sure that B also received message X.

3. The nonce verification inference says that if A trusts a fresh X message and A trusts that B uttered a message containing X, then A can be sure that B is entitled to message X.

4. The jurisdiction inference rule says that when A trusts that B owns X and A can be sure that B is entitled to message X, then A is entitled to message X.

5. Idealization is the transformation of a protocol step into a belief logic which highlights its beliefs within that step. It is important because it allows the omission of part of the message that do not contribute to the beliefs of the recipients. It also allows the analysis of the protocol to check if the intended goal is still preserved.
/************************************************************/


/************************************************************/
Lecture 65 (The BAN Logic: Needham-Schroeder)
1. Plaintext is omitted in a BAN idealization because it does not highlight any beliefs associated in that particular message.

2. Some idealized steps seem to refer to beliefs that will happen later in the protocol because a particular protocol step is intended to be a platform for the later step. This means that the earlier protocol steps aim to preserve the intended goal as the protocol goes through the process.

3. A BAN logic proof exposes assumptions because the modal operator for a particular function can be built on basic intuitions that the protocol goes in with. Using the message verification, jurisdiction, and nonce verification inference rules, deeper assumptions can be make.
/************************************************************/