Name: Luis Delgado
EID: LED625	
CS Login: LDELGADO
Email: luisdelgado24@utexas.edu
CS361 Questions: Week 4

Lecture 53
1. Why is it important for a digital signature to be non-reusable? So that it is not used by another party in a different context.
2. Why is it the hash of the message typically signed, rather than the message itself? Because public key encryption is expensive to apply and the message may be long
3. What assurance does R gain from the interchange on slide 4? The message being unforgeable, authentic, tamperproof, not reusable and non-repudiable.

Lecture 54
1. What is the importance of certificate authorities? It’s a way of a party vouching for binding between an identity and a public key.
2. In the example on slide 5, why does X sign the hash of the first message with its private key? To produce the certificate
3. Why is it necessary to have a hash of Y and Ky? To be able to compare to the other set of values of Y and KsubY to know that X is an authorized party
4. What would happen if Z had a public key for X, but it was not trustworthy? There’s a degree of uncertainty. So Z can verify with different things the validity.

Lecture 55
1. What happens at the root of a chain of trust? There’s an unimpeachable authority that everybody can trust.
2. Why does an X.509 certificate include a “validity interval”? To know how long the certificate is valid for
3. What would it mean if the hash and the received value did not match? There’s a discrepancy in validation. It should not be trusted.

Lecture 56
1. What are some protocols previously discussed?  Bell and LaPadula, Low-WaterMark 
2. What may happen if one step of a protocol is ignored? Protocol doesn’t exist anymore (invalid)
3. Why must the ciphers commute in order to accomplish the task in slide 4? To make sure no one can intercept the message 
4. Describe how an attacker can extract M from the protocol in slide 6. Xoring combinations of them 
5. Describe how an attacker can extract Ka from the protocol in slide 6. Xoring combinations of them
6. Describe how an attacker can extract Kb from the protocol in slide 6. Xoring combinations of them
7. Why are cryptographic protocols difficult to design and easy to get wrong? Because there are many tiny threats that can turn into catastrophes. 

Lecture 57
1. Explain the importance of protocols in the context of the Internet. It controls the syntax, semantics, and synchronization of communication, and is designed to accomplish a communication-related function
2. Explain the importance of cryptographic protocols in the context of the Internet. It is used to accomplish some security-related function
3. What are the assumptions of the protocol in slide 6? There is a message that is trying to be sent over a hostile environment 
4. What are the goals of the protocol in slide 6? Unicity, integrity, authenticity, confidentiality
5. Are the goals of the protocol in slide 6 satisfied? Explain. Yes, the message gets from one place to another safely but it has a flaw
6. How is the protocol in slide 6 flawed? Someone can intercept the message

Lecture 58
1. Why is it important to know if a protocol includes unnecessary steps or messages? To know whether you can skip them or not
2. Why is it important to know if a protocol encrypts items that could be sent in the clear? To find out whether all the information you are decrypting is sensitive or not

Lecture 59
1. Why might it be difficult to answer what constitutes an attack on a cryptographic protocol? There’s a lot of room for ambiguity. Are both authentication and secrecy assured? Is it possible to impersonate one or more of the parties? What tools can an attacker deploy?
2. Describe potential dangers of a replay attack. It can mess things up. It can simulate that it is in current state using information used previously.
3. Are there attacks where an attacker gains no secret information? Explain. Yes, gaining secret information is not the only way that an attacker can do some damage. It can pretend to be someone else to give a false order.
4. What restrictions are imposed on the attacker? None
5. Why is it important that protocols are asynchronous? Any party of the protocol is not going to know anything going on outside except the messages that go through it. Protocols needs to be designed so that parties know what messages mean and what they should do at that point.

Lecture 60
1. Would the Needham-Schroeder protocol work without nonces? Technically yes but the trustworthiness of each party would be lowered quite a bit.
2. For each step of the NS protocol, answer the two questions on slide 5.
Step 1) Sender is trying to say “wake up, I’m A, I want to communicate to B, here’s a nonce.” Receiver doesn’t know anything at this point
Step 2)  Server talks to B, gets B’s message and gives it to A with the nonce. After this, A may believe that B got the message successfully.
Step 3) A sends to B the additional piece of info containing the key and A’s identity encrypted with Kbs. A and B have the key but A doesn’t know that B has the key
Step 4) B generates a new nonce, encrypts it and sends it to A. “Are we on the same page?”. Uncertainty on B’s side
Step 5) A sends back a response to B saying “yes, we are.” Uncertainty resolved on both sides.

Lecture 61
1. As in slide 5, if A’s key were later changed, after having Kas compromised, how could A still be impersonated? Because the way B knows that the message is actually coming from A is by the fact that they share a secret key
2. Is it fair to ask the question of a key being broken? Depends on the strength of the encryption.
3. How might you address these flaws if you were the protocol designer? I would spend a lot of time strengthening the encryption key

Lecture 62
1. What guarantees does Otway-Rees seem to provide to A and B? Authenticating both parties to each other and to S
2. Are there guarantees that Needham-Schroeder provides that Otway-Rees does not or vice versa? Needham-Schroeder has a big weakness which is its key being not very strong
3. How could you fix the flawed protocol from slide 4? By not allowing messages to be intercepted

Lecture 63
1. Why is the verification of protocols important? To make sure that the protocol does whatever you think it does
2. What is a belief logic? A modal logic that allows you to reason what the principals in the protocol are entitled to believe after receiving a message
3. A protocol is a program; where do you think beliefs come in? When it comes to formalize the set of assumptions you make upon a certain protocol

Lecture 64
1. What is a modal logic? It’s a type of formal logic that extends classical propositional and predicate logic to include operators expressing modality.
2. Explain the intuition behind the message meaning inference rule. If A believes that A and B share a key, and A receives a message which is decrypted to that key, then A is entitled to believe that, that message must have come from B
3. Explain the intuition behind the nonce verification inference rule. If A believes that a message received is fresh, and A believes that B once said X then A believes that B believes X
4. Explain the intuition behind the jurisdiction inference rule. If A believes B has jurisdiction over X and A believes B believes X, then A believes X.
5. What is idealization and why is it needed? Turning the message sent into its intended semantics. Its purpose is to omit parts of the message that do not contribute to the beliefs of the recipients.

Lecture 65
1. Why do you think plaintext is omitted in a BAN idealization? Because all components are plaintext
2. Some idealized steps seem to refer to beliefs that will happen later in the protocol. Why would that be? Because those need to happen in order for the idealization to hold.
3. One benefit of a BAN proof is that it exposes assumptions. Explain that. You know at all times what every component’s status should be, so it’s easy to pinpoint what’s not in the right state.

