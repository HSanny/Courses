Name: Mallory Koai
EID: MJK567
CS Login: mkoai
Email: mkoai@utexas.edu

Lecture 53

1. It is important for a digital signature to be non reusable because otherwise anyone detach it and reuse it for another document, i.e., the signature must be bound to the document. A reusable signature would violate authentication.

2. The hash of the message is typically signed rather than the message itself because public key encryption is expensive to apply. In other words, a message can be arbitrarily long while its hash is a fixed-size value.

3. R knows that the message is in fact from S and no one else since the message is encrypted with S’s private key.

Lecture 54

1. Certificate authorities are higher entities that vouch for the validity of certificates. Otherwise, they ensure that the binding between a user’s identity and its public key is accurate and not forged.

2. X signs the hash of Y’s message with its private key to vouch for the contents of the message. Any receiver can now hash Y’s message and compare this with the hash value verified by X.

3. We are trying to certify the binding between Y and Ky. If either value is tampered with, the resulting hash value is likely to change. Essentially, we have a hash of Y and Ky as an additional layer of protection, i.e., to detect tampering.

4. If the public key for X is not trusted, there is no reason to trust the contents of the message.

Lecture 55

1. The root of a chain of trust has unimpeachable authority and does not need to be vouched for.

2. Certificates don’t last for a lifetime and may even become stale from disuse. A validity interval suggests possible reassessment of an entity and subsequent renewal, if so desired.

3. If the hash and received value did not match, the received value has been tampered with, rendering the certificate invalid.

Lecture 56

1. Public key encryption is an example of a protocol. Actually, any encryption algorithm involving keys is an example of a protocol since their main goal is to ensure secure communication between a sender and its intended receiver in the context of an untrustworthy environment.

2. By definition, a protocol is a “structured dialog intended to accomplish some communication-related goal”. If one step of this structured dialog is ignored, then we risk forfeiting the goal.

3. The ciphers must commute because we otherwise would not be able to undo your inner encryption if the outer one requires the other person’s private key.

4. First, it is important to note certain properties of XOR. It is both associative and commutative, and XORing a value with itself yields 0 (i.e., the values cancel out). If an attacker somehow intercepted all three messages, he could XOR all three of them to obtain the original message, M.

(M) ^ (K_a) ^ (M) ^ (K_a) ^ (K_b) ^ (M) ^ (K_a) ^ (K_b) ^ (K_a) simplifies to (M).

5. An attacker can extract K_a by XORing the second and third messages:

(M) ^ (K_a) ^ (K_b) ^ (M) ^ (K_a) ^ (K_b) ^ (K_a) simplifies to (K_a).

6. An attacker can extract K_b by XORing the first and second messages:

(M) ^ (K_a) ^ (K_b) ^ (M) ^ (K_a) simplifies to (K_b).

7. Cryptographic protocols are difficult to design because they require the ciphers to commute. Many encryption algorithms don’t have this property, and the ones that do (e.g., one-time pad) are easily breakable since the algorithm is applied more than once.

Lecture 57

1. Protocols establish ground rules for the syntax, semantics, and synchronization of communication among two or more parties. This allows the party to exchange and understand the messages.

2. The Internet connects entities in order to accomplish some (security-related) function, e.g., making an online purchase. Protocols are in place in order to give users some assurance that their transaction is secure and the involved parties are the intended ones in a hostile or insecure environment.

3. There’s a public key infrastructure in place, and each of them has a reliable version of the other’s public key.

4. The goals are making sure that the participating parties are the intended ones and each party obtains the shared key.

5. Yes and no. Each party is authenticated to the other because the inner encryption is encrypted by the other party’s private key, meaning only they could have encrypted it. However, there is no guarantee that both parties know that they each have the key. Some sort of handshake would have to be performed.

6. If the message 1 intended for B from A is intercepted, an attacker, C,  can initiate a new run of the protocol by sending the intercepted message as the encrypted “key”. B receives this message and responds appropriately. As a result, the private and public key encryptions of B cancel out, leaving {{K_a-1}c}. The attacker can then decrypt the outer encryption with his private key and strip away the inner one with A’s public key to reveal the original message. 

Lecture 58

1. I think it’s important to know if a protocol includes unnecessary steps or messages because these could potentially slow down overall transmission through a communication channel and should be removed.

2. Encrypting items that could be sent in the clear presents more overhead. Furthermore, an attacker is given an additional opportunity to intercept a message and attempt to break it.

Lecture 59

1. It’s difficult to determine what constitutes an attack because it depends on the cryptographic protocol in question and its security goals. What is the protocol trying to accomplish, and given that context, what sorts of attacks can violate those goals? For example, if the purpose of a protocol is to establish a secure channel between two parties, if it is possible to impersonate one of the parties, this obviously violates the integrity of the protocol.

2. Interjecting older, intercepted messages into the present traffic flow can confuse involved parties. Furthermore, because it was a legitimate message at one point, it may be difficult to detect.

3. Yes, there are attacks where an attacker gains no secret information. An attacker might simply want to disrupt traffic flow and confuse communicating parties without extracting any new information (e.g., a replay attack).

4. Attackers cannot just generate arbitrary messages. The messages have to be relevant and meaningful to the protocol in question (e.g., messages intercepted from previous runs of the protocol). The same applies for keys.

5. Parties often aren’t aware they are participating in a protocol until they receive a message. In general, a party’s only view of the protocol is what it sends and receives. Therefore, protocols must be designed so that parties that receive a message know exactly what to do.

Lecture 60

1. The nonces in N-S are necessary to indicate a message’s freshness. Without nonces, the protocol would be very vulnerable to replay attacks.

2. 
Step 1: 
- A tells S to wake up and generate keys for A to establish a secure channel with B.
- S believes A wants to establish a connection with B.

Step 2:
- S is saying that it has generated a new key for A and B.
- The nonce tells A that the message is fresh.

Step 3:
- The sender, A, is trying to convey to B the shared key.
- B is now aware that it is in step 3 of the N-S protocol and knows that A wants to communicate with him. It also knows that the piece originated with S because it was encrypted with K_bs.


Step 4:
- B tells A that it received the key and can use it.
- The nonce tells A that the message is fresh, and the fact that the message was encrypted with the new session key means that A knows B has the key and knows how to use it.

Step 5:
- A is telling B that it knows B has the key.
- Receiving the (nonce - 1) tells B that A was able to decrypt the message with the key, apply some function to the message, and re-encrypt it. Otherwise, A also has the key and knows how to use it.

Lecture 61

1. An intruder could still impersonate A by reusing the compromised key and passing it off as fresh (Denning and Sacco).

2. Depending on the strength of the encryption, it may be fair to ask the question of a key being broken. If the encryption is strong, we may not have to ask this question. Nevertheless, given enough time, it is always possible to break one.

3. To solve the flaw proposed by Denning and Sacco, I might protect the third message with a nonce. Otherwise, B has no indication that the message is fresh and the key is actually newly generated. In addition, I might periodically change S’s shared keys with A and B to counter the flaw presented by Bauer, et al.

Lecture 62

1. Unlike Needham-Schroeder, Otway-Rees establishes communication between A and B immediately, i.e., A corresponds with S through B instead of directly with S.

2. Steps 4 and 5 of Needham-Schroeder perform a handshake between A and B so both parties are aware that the other has successfully received the key. This is not guaranteed in Otway-Rees: B is not entirely sure that A has the key because message 4 may have been lost.

3. To fix the flawed protocol, I would include a nonce in the message. Therefore, it’s not a function within a function.

Lecture 63

1. Verification of protocols allows for a way to assess protocols and detect flaws early. 

2. A belief logic is a method that allows you to reason about what the principals in a protocol are entitled to believe after receiving a message.

3. If a protocol is a program, beliefs are the logical components associated with the preconditions and postconditions of an exchange.

Lecture 64

1. Modal logic is a standard, propositional and predicate logic with additional primitives and rules of inference built in to reason about a particular domain.

2. If A believes that it shares a key, K, with B and A sees a message X encrypted with K, then A is entitled to believe that B sent the message.

3. If A believes X is fresh and that the message came from B, then A believes that B believes X. In this context, X is not necessarily a message. Instead, it is a statement of belief.

4. If A believes that B is an authority of things of type X and A believes that B believes X, then A is entitled to believe X. 

5. Idealization is the process of converting the protocol steps into logical inferences. It is needed to iron out extraneous details and determine what a particular message is actually trying to convey to a recipient.

Lecture 65

1. Plaintext is omitted in BAN idealization because it can be forged and does not contribute to the beliefs of the recipients.

2. Some idealized steps might project what the ultimate purpose of the protocol is. For example, a step might indicate that A wants to communicate securely with B, so they might ultimately believe that they will eventually share a key.

3. Formulizing a proof forces you to write down assumptions. As you step through inference rules to formulate new ones, you may encounter surprising ones you were not expecting.

