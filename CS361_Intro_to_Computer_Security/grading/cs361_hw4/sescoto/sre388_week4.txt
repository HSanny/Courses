Name: Sergio Escoto
EID: sre388
CS Login: sescoto
Email: ses110@gmail.com

turnin --submit jimmylin cs361_hw4 sre388_week4.txt

Lecture 53
1- If a digital signature were to be reusable, then anyone could take the signature from a valid document and sign other documents with it.
2- It could be cumbersome having to send a signature that had a message that could be very large in size.
3- It is assured that the message is unforgeable, authentication, no repudiation, tamperproof, and is not reusable.

Lecture 54
1- Certificate authorities are needed to prove the binding between another person's identity and their public key.
2- So that anyone who trusts X AND has X's public key can decrypt the hash, meaning it is guaranteed that X created the hash.
3- To verify that the binding between Y and Ky is correct according to some authority (e.g. X)
4- Z would not decrypt the hash correctly, so the comparison between the given hash and the calculated hash would not match.

Lecture 55
1- The root of the chain of trust produces certificates between itself and another entity. 
2- An expiration date in the case where an entity is no longer considered trustworthy.
3- It would mean that either the issuer's public key is incorrect, or the binding between the subject's identity and their public key is incorrect.

Lecture 56
1- Diffie-Helman, BP, etc.
2- The message may not be readable by the other party or some security message may be compromised.
3- Because this is the only way it would work at the implementation level, instead of applying two locks to a strong box, it is more like enclosing a lockbox inside another lockbox.
4- To obtain M, M = (M^Ka)^((M^Ka)^Kb)
5- To obtain Ka, Ka = ((M^Ka)^Kb) ^ (((M^Ka)^Kb)^Ka)
6- Kb = (M^Ka) ^ ((M^Ka)^Kb)
7- Small subtle things that the designer didn't keep in mind could break the whole protocol.

Lecture 57
1- Protocols are needed between machines as a predictable way to send, receive and decipher messages in a synchronized manner.
2- There are sensitive transactions between principals that cannot be read by eavesdroppers and cryptographic protocols are needed to protect this sensitive data.
3- It assumes that both principals have a reliable version each other's public key and that public key infrastructure is in place.
4- Its goal is to reliably send a key to the other party to share without being eavesdropped.
5- Not entirely, the next question explains why this protocol has an attack that reveals the secret key.
6- An attacker can receive the encrypted message, then it sends the same message encrypted with their own private key and outward with A's public key. A responds with the same message encrypted with its private key and attacker's public key. Attacker can cancel out public key and private key from the message received.

Lecture 58
1- To know if it can be made more efficient by removing unneeded things or steps.
2- Some information is not sensitive and does not need to be secured.

Lecture 59
1- Because we must evaluate what vulnerabilities the protocol has, or what strategies the attacker may have to weaken the protocol
2- The attacker may store old messages and take advantage of that to decrypt newer messages that may have reused an older key
3- Some of the protocol attacks mess up the protocol, but don't reveal anything to the attacker.
4- An attacker may not be able to guess any of the contents of any message regardless of previous messages sent
5- Because they must be designed in such a way that when a party receives a message it knows what the message means and how to respond to it.

Lecture 60
1- No, the protocol requires knowing whether a message is fresh and not a replay from an earlier message to prevent replay attacks.
2- The sender is telling S to generate a key between A&B, then it sends a shared key to B.
The receiver believes that the shared key is legitimate between A & B.

Lecture 61
1- An attacker could impersonate A again if the key Kas were compromised by 
2- Yes, if the key is not generated randomly enough, it could be predictable enough for an attacker to guess.
3- No idea, it is hard to make a protocol secure in the first place.

Lecture 62
1- They both assume that at the end, both believe the other has the key.
2- The Needham-Schroeder protocol guarantees that both parties hold the keys to communicate with each other.
3- Encrypt messages in the opposite order, Public key of the other first, then the private key

Lecture 63
1- Because protocols can be notoriously difficult to get correct, so if we reason formally about their correctness, we can catch flaws.
2- A formal system for reasoning about beliefs.
3- Beliefs come in where you have to postulate some reasonable initial assumptions about the state of knowledge/beliefs of the principals

Lecture 64
1- It is a type of formal logic that extends classical propositional and predicate logic to include operators expressing modality.
2- If A believes that A shares a key with B and that A sees X_k, then A believes that B said X.
3- If A believes X is fresh and A believes B said X, then A believes B believes X.
4- IF A believes B has jurisdiciton over X and A beliees B believes X, then A believes X.
5- It is needed to get from protocol steps to logical inferences, to attempt to turn the message sent into its intended semantics.

Lecture 65
1- Because these components cannot be formalized and arent' necessary to encrypt
2- These are assumptions that would be true if steps of the protocol were followed correctly.
3- Assumptions may be incorrect if we formalize the protocol.