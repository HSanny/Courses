Name: Sonny David Marton
EID: sdm2755
CS Login: smartone
Email: sonnymarton@yahoo.com

CS361 Questions: Week 4

The questions marked with a dagger (†) require external research and may be more
extensive and time consuming. You don’t have to do them for th
e assignment but, but do them to increase your competency in the class.


Lecture 53

1. Why is it important for a digital signature to be non reusable?

	So that someone does not strip the signature from one message and attach it to
	another document. It needs to be bound to the document so that it cannot be used
	in an unauthorized way if stripped off a different document.

2. Why is it the hash of the message typically signed, rather than the message itself?

	Because public key enscryption is expensive to apply to a message, and the message
	is arbritrarily long while the hash is typically short and easier to sign.

3. What assurance does R gain from the interchange on slide 4?

	R knows that S wrote it (unforgable) since it is signed with K-1s, it can be
	verified to be authentic using Ks, R knows that S cannot lie about writing it
	since it is signed with K-1s (no repudiation), R is the only person who can
	decrypt the message because only it has the private key cooresponding to Kr
	(tamperproof), and R knows that the signature cannot be used with any other
	message (not reusable).



Lecture 54

1. What is the importance of certificate authorities?

	They are a source for one entity to get the credibility and validity of another.
	It is a KNOWN source that is has credible knowledge on the trustworthiness of
	others, and this helps an entity to decide on if can trust the other or not.

2. In the example on slide 5, why does X sign the hash of the first message with
its private key?

	So that Z knows that X was the one who created the hash.

3. Why is it necessary to have a hash of Y and Ky?

	To know that the message can be trusted and Z is reassured that the value of the
	message was not changed. Z now knows that he can trust Y.

4. What would happen if Z had a public key for X, but it was not trustworthy?

	Then he could not know if he could trust X or Y. There must be at least on common
	person that both Y and Z trust so that they are both comfortable with
	communicating with eachother.



Lecture 55

1. What happens at the root of a chain of trust?

	The root is the highest unimpeachable authority that everyone believes. All trust
	comes from the certificates that he gave to his direct subordinates and once he
	issues a certificate it is valid. It must be the roots business to be
	trustworthy, they have a strong incentive to be known by everyone as trustworthy.

2. Why does an X.509 certificate include a “validity interval”?

	To ensure that the certificate is fresh. a certificate does not need to be valid
	indefinitely, if this happened then it would be much easier for hackers to use old
	forgotten certificates. You should not trust an expired certificate since if they
	are a valid part of the system then they should have no reason that they do not
	have a fresh certificate, it is decently easy for them to obtain a new one if
	needed.

3. What would it mean if the hash and the received value did not match?

	Then the value has been changed somewhere along the path when someone intercepted
	it. It should NOT be trusted in any way, even the value that was encrypted, since
	there is any discrepency between the unhashed and the received.
	



Lecture 56

1. What are some protocols previously discussed?

	Diffie-Hellman key exxhange and how to pass a message confidentially and
	integrilly using public key encryption.

2. What may happen if one step of a protocol is ignored?

	Then you cannot ensure that the message is passed securely and if it even gets
	from one to the other.

3. Why must the ciphers commute in order to accomplish the task in slide 5?

	So that an encryption can be done in either order with the same result. 

4. Describe how an attacker can extract M from the protocol in slide 6.

	After intercepting all 3 messages he could do:

	((M ^ Ka) ^ ((M ^ Ka) ^ Kb) ^ (((M ^ Ka) ^ Kb) ^ Ka) ^ (M ^ Ka)) = Ka

5. Describle how an attacker can extract Ka from the protocol in slide 6.
	((M ^ Ka) ^ ((M ^ Ka) ^ Kb) ^ (((M ^ Ka) ^ Kb) ^ Ka))

6. Describle how an attacker can extract Kb from the protocol in slide 6.

	(M ^ Ka) ^ ((M ^ Ka) ^ Kb) = Kb

7. Why are cryptographic protocols difficult to design and easy to get wrong?

	It is hard to prove that it is correct and unbreakable. It is near impossible to
	prove it completely right because it can only be proved wrong once you find a flaw
	


Lecture 57

1. Explain the importance of protocols in the context of the internet.

	It provides a means of communication that is as reliable as possible, depending on
	the actual protocol that is chosen. Parties involved can have more confidence and
	know that it is less likely to drop a message.

2. Explain the importance of cryptographic protocols in the context of the internet.

	Same as a protocol with a sense of security. The cryptography adds security to the
	system so now the parties know that it is relaible and secure, so important and
	confidential data can be passed. The internet is hostile and insecure so it is
	needed.

3. What are the assumptions of the protocol in slide 6?

	A trust B and B trusts A. They each have the other parties public key.

4. What are the goals of the protocol in slide 6?

	To establish a common and mutual key between A and B, that they both know noone
	else has intercepted and knows. And that they are actually talking to eachother.

5. Are the goals of the protocol in slide 6 satisfied? Explain.

	They are both authenticated with eachother, but the key is not neccesarily
	secret.

6. How is the protocol in slide 6 flawed?

	Someone could intercept the message and break the key.

	C intercepts {{K}K-1a}Kb, C then send it to B as {{{{K}K-1a}Kb}K-1b}Kb. Then B 
	sends it back to C as {{{{K}K-1a}Kb}K-1b}Kc, => {{{K}K-1a}}Kc which C can decrypt
	using his private K-1c and the public key Ka, and he now has K.



Lecture 58

1. Why is it important to know if a protocol includes unnecessary steps or messages?

	Since a receiver does not 100% know if he has even decrypted the message, he must
	know how to handle certain parts of the supposedly decrypted message. They can use
	this unnecesary information to see if the message is correct.

2. Why is it important to know if a protocol encrypts items that could be sent
in the clear?

	So that the reciever knows if the information is public or private information.
	They then know how to handle to information.



Lecture 59

1. Why might it be difficult to answer what constitutes an attack on a cryptographic
protocol?

	You do not know at what point something is considered an attack. No obvious line
	has been drawn on all apects of cryptographic protocol, so you can not really know
	when something has crossed it, and becomes an attack.

2. Describe potential dangers of a replay attack.

	This could significantly slow down a system, insert useless, old information
	into the system that would have to be sorted out, this could possibly stop the
	system by overloading it, and it could cause actual information to be dropped
	because of a limited bandwidth.

3. Are there attacks where an attacker gains no secret information? Explain.

	Yes, an attackers purpose could be to slow down the system, and confuse the
	original parties of the protocol. 

4. What restrictions are imposed on the attacker?

	An attacker is able to access all of the traffic that is being sent to all of the
	parties of the protocol. There are really no restrictions, if he is able to break
	the protocol.

5. Why is it important that protocols are asynchronous?

	This way an attacker does not even know that messages are being sent until he
	intercepts a message. He does not know it exists until a message is noticed by
	the attacker. With this characteristic, an attacker must look for the system
	unless he initiates the protocol.



Lecture 60

1. Would the Needham-Schroeder protocol work without nonces?

	No, because it uses a nonce to ensure that the message is fresh and that it has
	not been used. This makes it much harder for an attacker to use an old message in
	a malicious way. It does not work like a timestamp, which is forgable. 

2. For each step of the NS protocol, answer the two questions on slide 5.

	1: - A is saying that it would like itself "A" to obtain a key with "B" and
		attaches the nonce "Na" to show that it is fresh.

	   - S believes that "A" want to get a key to communicate with "B" and S knows
		the message is fresh because "Na" has not been used.

	2: - S tells A that is has gotten the messsage and returns the nonce "Na" and that
		it has givena key with "B" called "Kab" and has attached the message
		"{Kab, A}Kb" for A to send to B.

	   - A knows that S has sent a key for the original message that had the nonce
		"Na", and the key "Kab" is meant to be used with "B", and that needs to
		send "{Kab, A}Kb" to "B" so that B can have the key.

	3: - A is saying to B that is has a key to connect B with A and that only B can
		unlock it since it is encrypted with "Kb", and that the key "Kab" is meant
		to be used with communicating with "A"

	   - B can beliece that the message was not tampered with since only S knows its
		key "Kb" and that "Kab" is a key given by S for B to communicate with "A"

	4: - B is trying to tell A that he has received the key and he is trying to ensure
		that "A" has the key and he can use it, with a fresh nonce "Nb"

	   - A believes that B nows has the key and he knows that the nonce "Nb" is fresh

	5: - A is saying to B that he can decode since he has the key "Kab", and he shows
		this by returning "Nb-1" which he could of only computed by having the key

	   - B now belives that he can trust B with the key and the "Nb-1" could have only
		been generated if A had the key "Kab". B now believes he can use Kab to
		communicate with A.



Lecture 61

1. As in slide 5, if A’s key were later changed, after having K as compromised,
how could A still be impersonated?

	The key could have already been used and S already gave the impersonator a key
	to communicate with other parties. The impersonator still has other keys with
	other parties.

2. Is it fair to ask the question of a key being broken?

	Yes, an attacker could intercept a message and simply switch a bit and not change
	anything but the key, the key would then be corrupt. I believe it is a fair
	question that should be considered.

3. How might you address these flaws if you were the protocol designer?

	Keys would have to follow a certain exact format, yet still allowing there to be a
	large number of combinations for keys. An example would be the key had to be a
	prime number, had to be an odd number, had to be an even number, etc. Or even more
	strict characterstics could be enforced.



Lecture 62

1. What guarantees does Otway-Rees seem to provide to A and B?

	They both have a key shared between themself and S. A and B already know of
	eachother. At the end, A knows that B has the key, but not vise versa.

2. Are there guarantees that Needham-Schroeder provides that Otway-Rees
does not or vice versa?

	NS ensures that at the end of the protocol that both A and B have the key and they
	both know that the other has the key.

3. How could you fix the flawed protocol from slide 4?

	By adding a nonce to the message, and both parties of the original protocol could
	add a nonce to the message, and they both know that it is not fresh. therefore it
	should not reply to the message or take some special action against it.



Lecture 63

1. Why is the verification of protocols important?

	Verification of protocols is important because a party of the system must know
	that they can believe the protocol to ensure proper communicationa and security
	(if it is cryptographic). You would not want to use a protocol if it has been
	verified. Also proper verification is very important, especially since you must
	look at the fact that there have been protocols that were only proven faulty after
	years of being in service.

2. What is a belief logic?

	"a formal system for reasoning about beliefs." It is a way of trying to prove that
	a protocol is legit by starting with beliefs you have of the protocol, then
	proving its correctnes.

3. A protocol is a program; where do you think beliefs come in?

	Beliefs come into protocols to cover the corner cases and the assumptions that
	must be made in order to prove the protocol with logic. Without beliefs it would
	be much harder to prove the protocol without doing it exhaustively. 



Lecture 64

1. What is a modal logic?

	A logic with a set of modal operations that lets you prove things by building
	primatives. It lets you prove them in a theoretical way by building formulas,
	then reasoning the formulas through inference.

2. Explain the intuition behind the message meaning inference rule.

	Since A believs that only B and itself share the key K, it is obvious that any
	message encrypted with K was sent from B, since B is the only party, besides A,
	that can encrypt with A.

3. Explain the intuition behind the nonce verification inference rule.

	Since A believes that X is fresh and A believes that B once said X, it is obvious
	that A believes that B believes X, which is fresh and sent by B.

4. Explain the intuition behind the jurisdiction inference rule.

	Since A believes B is a professional on X and A believes that B believes X, then
	it is obvious that A would believe X because of the belief that B has in X.

5. What is idealization and why is it needed?

	It is an attempt to try and find the intended semantics of a message. By doing
	this one can try and decide what the protocol is trying to accomplish. Then you
	can take the steps that do not help the intended semantics out since they are
	uneeded.



Lecture 65

1. Why do you think plaintext is omitted in a BAN idealization?

	Because it is proofed mathematically, and plaintext would likely be an exception
	which would complicate things. A proof should be able to be proved with a set of
	simple operations and the inference rules behind them, if something more is
	needed it may be an over-assumption if it needs to be written in words. The words
	should not be needed.

2. Some idealized steps seem to refer to beliefs that will happen later in the
protocol. Why would that be?

	It is a process of using all beliefs you have and they must be used in all steps,
	since it is like building up to one common goal. It does not neccessarily use the
	belief but it refers to it as it gets to actually saying the belief exclusively.

3. One benefit of a BAN proof is that it exposes assumptions. Explain that.

	Assumptions being exposed is a benefit since exposing them makes them become
	questioned for their validity. There should be no assumption that does not seem
	valid, and it if does not seem valid then it should not be used, if it was used
	then it could cause a hidden vulnerability.



