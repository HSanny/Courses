Brandon Craig
bsc526

Lecture 66
1. PGP is Pretty Good Privacy. It is a crypto system originally for encrypting email
2. He distrusted the government and thought everyone had the right to absolute privacy
3. Yes. Decoding this messages are incredibly difficult and even the government has trouble decoding it
Because having a commercial version will allow for faster updates and bug-fixes

Lecture 67
1. The sender creates their message M and a hash of the message M. Sender sends his message M and a private key signed hash(M) to the Receiver. The receiver applys the senders public key to the
hash to get the original hash and then Receiver computes their own hash value for the hash(M). If they match then it must be authentic
2. Sender creates a message M and random session key K. Encrypts M with K. Encrypts K with R's public key. Sends these two to R. He decrypts K with his private key and use K to decrypt M
3. By first applying authentication to the original message and then apply confidentiality to what results.

Lecture 68
1. Compression, Email compatibility, Segmentation
2. So the messages don't get too big. PGP uses radix-64 convserion to map groups of three octets into four ASCII characters which makes the message expand by 33%. The compression also makes the encryption stronger since compression reduces redundancy
3. Because compression algorithms all work slightly different and by signing first you dont have to worry about which version of compression is being used as they are interoperable
4. Because encrypted text contains arbitrary 8-bit octets but many email systems would interpret certain bit strings as control commands. The radix-64 conversion then maps groups of three octets into four ASCII characters to avoid this problem
5. Because some systems restrict message lengths so longer messages need to be broken into segments and mailed separately.

Lecture 69
1. Session, Public, Private, Passphrase-based keys
2. They must be associated with a single message and used only once
3. n-bit key is generated from a previous session key and two n/2-bit blocks generated based on user keystrokes, including keystroke timing. The two blocks are encrypted using E and the previous key, and combined to form the new key
4. An odd number n of sufficient size is generated randomly and tested for primality. If it is not prime then repeat with another randomly generated number until a prime is found
5. The private key is stored with a user-supplied passphrase. This is necessary so that only the authorized user can access this key

Lecture 70
1. Generate an ID likely to be unique for a given user. Use the least significant 64-bits of the key as the ID
2. Timestamp, Key ID, Public Key, Private Key, User ID
3. Timestamp, Key ID, Public Key, User ID
4. PGP retrieves receiver's encrypted private key from the private-key ring, using the Key ID field in the session key component of the message as an index. PGP prompts the user for the passphrase to recover the unencrypted private key. PGP recovers the session key and decrypts the message
5. Field that indicates how much PGP trusts that this is a valid public key for this user
6. The owner issues a signed key revocation certificate. Recipients are expected to update their public-key rings.

Lecture 71
1. Consumer problem, aka "man-in-the-middle attack", is where the attacker gets logically between the client and the service and somehow disrupts the communication. The producer problem is where the attacker produces, offers, or requests so many services that the server is overwhelmed
2. Syn-flooding is an attack that utilizes the way in which TCP connections with a server are internally handled by the server. The attacker forges the return address on a number of SYN packets and the floods the server with SYN Packets. This causes the server to continually allocate space within its internal table and the connection remains "half-open" waiting for an ACK. The attacker never sends back an ACK and thus the server over allocates space in its internal table and freezes up. This can be solved using iptables. Ive worked with this before
3. Increase the server's queue size: This is bad because it doesn't address the problem of over allocating to the internal connection table. Will still get overflown regardless of the number of connections. Shorten the time-out period: People with slower connections might not be allowed to connect which is bad. Filter suspicious packets: This is pretty hard to check whether a packet is suspicious

Lecture 72
1. Its good at preventing attacks because you can discard traffic based on possible attack patterns. Still not great though because you may also discard legitimate traffic as well
2. IDS can analyze traffic patterns and react to anomalous patterns. IDS Reacts after the attack has begun. IPS attempts to prevent intrusions by more aggressively blocking attempted attacks. This assumes that the attacking traffic can be identified
3. Over-provisioning the network: Have too many servers to overwhelm. Filtering attack patterns: somehow distinguish the attack packets from regular ones. Slow-Down Processing: Slow down how quickly requests are processed uniformly. "Speak-up" solution: Request additional traffic from all requestors to identify valid from invalid assuming that the attackers bots are already maxed-out and can't provide more

Lecture 73
1. False Positive: Behavior marked as an attack is actually harmless. False negative: a genuine attack is not detected. False negative is worse since its actually missing an actual attack. Has more impact than a False Positive.
2. Accurate: if it detects all genuine attacks. Precise: if it never reports legitimate behavior as an attack
3. Its saying its easy to do either one or the other but not both at once.
4. An error in thinking where if presented with related base rate information and specific information, people tend to ignore the generic information for the specific. Relates to IDS as it can be used to measure the effective-ness of the system and the false alarm rate is the limiting factor for the performance of an IDS

Lecture 74
1. Attempted to infect unpatched machines with its from the 1st to the 19th of the month by generating a random list of IP addresses and using that to generate targets. From the 20th to the 28th it would launch a DoS flooding attack on www1.whitehouse.gov. Also defaced some webpages with the words "Hacked by Chinese"
2. Flaws in design especially the static seed. Machine could be disinfected by simply rebooting it. 
3. Memory residant means that it was only within the computers memory. Not on hard disk. This implies that its data was volatile and lost on reboots.
4. Used a random seed in the random number generator so it affected many more machines/hosts. Wrecked havoc on additional devices

Lecture 75
1. Used the same kind of propogation technique by trying to copy itself to a bunch of different machines. 
2. In order to try to affect as many machines as possible with the highest probability that it will continually find new hosts to infect. 
3. Wanted to install a "backboor" into the infected machines, becomes dormant for a day, and then reboots the machine. Allows for root-level access and the execution of any code, so the machines could be used as zombies.
4. Could result in a high number of infected machines and the users would not be aware of their machine being infected. 
5. They learned that nine out of ten breaches took advantage of a vulnerability for which a fix was available at least 6 months prior. That means that not patching your machines greatly increases your chances of becoming infected

Lecture 76
1. Because it makes sure that secure products are up to standards and do not have any obvious flaws to them. Keeps up the level of quality for products. 
2. A set of requirements defining security functionality which makes sure that certain functionalities must be implemented. A set of assurance requirements which makes sure that QA of functionality is there. A methodology for determining that the functional requirements are met. A measure of the evaluation result indicating the trustworthiness of the system
3. Because they are physical devices and so they may be trying to address different levels of security
4. Level 1: Basic security, at least one appoved algorithm or function. Level 2: improved physical security, tamper-evident packaging. Level 3: strong tamper-resistance and countermeasures. Level 4: complete envelope of protection including immediate zeroing of keys upon tempering

Lecture 77
1. Its a criteria for evaluating secure systems
2. Its common in that many countries use it and develop their own country-specific documents
3. Because different nations have different concerns and needs of secure systems
4. Security Target is a document that contains the security reqs of a product to be evaluated, and specifies the measure offered by the product to meet these reqs. Protection profile is a formal descriptions of security for a class of systems

Lecture 78
1. The overall goal is to define what is considered a secure for this system. 
2. 
3. To map threats/assumptions to security objectives/reqs

Lecture 79
1. Overal goal is to define what is required for this specific system that need to be evaluated
2. Security target is for a specific system to be evaluated. Protection profile is for a class of systems and defines formally security

Lecture 80
1. EAL1: Functionally Tested. EAL2: Structurally Tested. EAL3: Methodologically Tested and Checked. EAL4: Methodologically Designed, Tested and Reviewed. EAL5: Semiformally Designed and Tested. EAL6: Semiformally Verified Designed and Tested. EAL7 Formally Verified Design and Tested.
2. Independent organizations such as NIST
3. Because each country has its own country-specific requirements
4. No. Because they can potentially lie about their products assurance level
5. Because they are defined by formal (mathematical) methods and each component is to be kept small and independent, thus the models would be unable to be reverse engineered.
