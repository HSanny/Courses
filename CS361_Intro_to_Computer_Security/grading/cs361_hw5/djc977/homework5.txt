Name: David Coon
EID: djc977
UTCS: djc977
email: david.coon@utexas.edu

##############################################################################
Lecture 66
##############################################################################
1. What is PGP?
	It’s a package of cryptographic algorithms that makes it easy for the everyman to use strong encryption.

2. What motivated Phil Zimmerman to develop it?
	A strong distrust of the government and a belief that everyone is entitled to privacy.

3. Does PGP provide effective security?
	Yes, it’s not unbeatable (nothing is), but it is incredibly tough to crack.

4. If PGP is freeware, why would anyone bother to purchase support?
	You may want to buy it from a provider so you can receive support while using it.

##############################################################################
Lecture 67
##############################################################################
1. Explain the PGP authentication protocol.
	Sender creates a message, hashes it, and then sign the hash with his private key and adds the hash of the end of the message. The receiver can verify the signature with the sender’s public key and recover the hash, and then they the receiver can compare the hash of the plaintext with the received hash.

2. Explain the PGP confidentiality protocol.
	Encrypt a message with a random session key, then encrypts K with the receiver’s public key and adds it to the message. The receiver then uses their private key to recover the session key and decrypt the message

3. How do you get both authentication and confidentiality?
	Apply authentication to the message and then encrypt the whole shebang. Boom.

##############################################################################
Lecture 68
##############################################################################
1. Besides authentication and confidentiality, what other “services” does PGP provide?
Compression, email compatibility, and segmentation

2. Why is compression needed?
	It makes encryption stronger since it makes redundancy less common in a message

3. Why sign a message and then compress, rather than the other way around?
	Because then your signature doesn’t depend on the compression algo

4. Explain radix-64 conversion and why it’s needed?
	It maps groups of 3 octets into 4 ascii characters so that every email client can read the information.

5. Why is PGP segmentation needed?
	It automatically segments messages that are too large into a message that is a size appropriate for sending.

##############################################################################
Lecture 69
##############################################################################
1. What are the four kinds of keys used by PGP?
	Session keys, public keys, private keys, and passphrase based keyes.

2. What special properties are needed of session keys?
	They must be unique (or very random), and must be a certain size depending on the chosen encryption algo

3. How are session keys generated?
	It uses entropy from the system (mouse movement, keystrokes, etc) to generate a random number, which is encrypted using the previous key, which makes the new key.

4. Assuming RSA is used for PGP asymmetric encryption, how are the keys generated?
	Two large primes are randomly generated and then used w/ a couple equations to create your public and private keys

5. How are the private keys protected? Why is this necessary?
	It is secured with your passphrase, so that the user can have a little bit more security on your private key in case of your system becoming compromised

##############################################################################
Lecture 70
##############################################################################
1. If a user has multiple private/public key pairs, how does he know which was used when he receives an encrypted message?
	The least significant 64 bits of the encrypting key are used as the ID for that specific key

2. What’s on a user’s private key ring?
	Timestamp of when the private key was generated, the key ID, its corresponding public key, the private key, and a user ID

3. What’s on a user’s public key ring?
	Timestamp of when it was generated, the key ID, the public key, and a user ID

4. What are the steps in retrieving a private key from the key ring?
	Uses the key ID to find the correct private key in the ring, a passphrase is used to decrypt the private key, and then you have your private key

5. What is the key legitimacy field for?
	It provides a quantified value of trust for a key based on its chain of use and user assessments

6. How is a key revoked?
	The key owner issues a signed key revocation certificate, and the recipients update their public key rings to not use it again

##############################################################################
Lecture 71
##############################################################################
1. Explain the difference between the consumer and producer problems. Which is more prevalent?
	Consumer attacks affect whoever is consuming the message, like a man in the middle attack where an attacker is getting between the sender and receiver and injecting whatever information they please. A producer problem is where the attacker floods a service with so many requests it goes down. A producer problem is more prevalent I think.

2. Explain syn flooding.
	An attacker starts a handshake protocol, and then doesn’t respond to the server’s requests. The server waits on a response and has fewer resources available while it waits. Get lots of clients attacking, and the server cannot serve genuine requests.

3. Why are the first three solutions to syn flooding not ideal?
	By increasing the size of the server’s queue, you use up more resources and don’t really fix the problem. By shortening time-out periods you may time-out on genuine requests and deny service to genuine clients. Determining legitimacy is very difficult and inaccurate to do.

##############################################################################
Lecture 72
##############################################################################
1. Why does packet filtering work very well to prevent attacks?
	If a range of IPs is known to be malicious, it’s very easy to deny all of them

2. What are the differences between intrusion detection and intrusion prevention systems?
	IDS alerts you after an attack began based on if any anomalous activity is occurring. IPS attempts to prevent attacks by aggressively and actively blocking attaching traffic.

3. Explain the four different solutions mentioned to DDoS attacks.
	Expand your network - scale your service to meet attacking demands
	Filter attacking packets - distinguish attacking packings from regular ones
	Slow down processing - slow down processing all messages, hopefully disproportionately affect attackers
	Speak Up - request additional traffic from all requestors, the attackers can’t send more data but legitimate traffic can, so you increase your overall percentage of attacking to legitimate

##############################################################################
Lecture 73
##############################################################################
1. Explain false positive and false negatives. Which is worse?
	False positive - indicating an attack when there is none
	False negative - not indicating an attack when there is one
	False negative is much worse because then you don’t know to react

2. Explain what “accurate” and “precise” mean in the IDS context.
	Accurate - being correct when you think an attack is happening
	Precise - flagging whenever an attack is detected

3. Explain the statement: “It’s easy to build an IDS that is either accurate or precise?
	attacks are rare, so you can flag whenever one is detected (precise) or really drill down to confirm that an attack is actually occurring (accurate). You can only realistically get one.

4. What is the base rate fallacy? Why is it relevant to an IDS?

##############################################################################
Lecture 74
##############################################################################
1. What did Code Red version 1 attempt to do?
	Generate a random list of IP addresses and attempt to infect those systems. On the 20th and 28th, the system used those compromised systems to DDOS ww1.whitehouse.gov and deface it with “hacked by chineese”

2. Why was Code Red version 1 ineffective?
	It used a static seed for its RNG, so identical IPs were generated for infection. The infected machines probed the same list, so it spread slowly. whitehouse.gov moved its IP address and foiled the attack

3. What does it mean to say that a worm is “memory resident”? What are the implications.
	Memory resident means that the worm exists only in the memory of the machine, so you could remove the worm by simply rebooting.

4. Why was Code Red version 2 much more effective than version 1?
	It used a randomly generated seed in its RNG, so it infected many more machines and spread much more quickly and overwhelmed many infrastructure components of the internet.

##############################################################################
Lecture 75
##############################################################################
1. How was Code Red II related to Code Red (versions 1 and 2)?
	The writer of code red II knew about code red I and included the string “CodeRedII” in the code

2. Why do you suppose Code Red II incorporated its elaborate propogation scheme?
	so that it would be difficult to remove and machines would be able to rapidly infect many other machines. Additionally, by attacking the same subnet, there is a much higher possibility of attacking similar systems and having more success.

3. What did Code Red II attempt to do?
	Essentially infect many machines and put a back door mechanism in place. The infected machines could then be used in a later botnet attack

4. Comment on the implications of a large population of unpatched machines.
	It allows for copycat attacks and more subsequent attacks

5. Comment on the report from Verizon cited on slide 6. What are the lessons of their study?
	Many attacks can be foiled by simply patching your machine and staying up to date on your updates.

##############################################################################
Lecture 76
##############################################################################
1. Why is a certification regime for secure products necessary and useful?

2. Explain the components of an evaluation standard.

3. Why would crypto devices have a separate evaluation mechanism?

4. Explain the four levels of certification for crypto devices.

##############################################################################
Lecture 77
##############################################################################
1. What is the Common Criteria?

2. What’s “common” about it?

3. Why would there be any need for “National Schemes”?

4. Explain the difference between a protection profile and a security target.

##############################################################################
Lecture 78
##############################################################################
1. Explain the overall goal of the protection profile as exemplified by the WBIS example.

2. What is the purpose of the various parts of the protection profile (as exemplified in the WBIS example)?

3. What is the purpose of the matrix on slide 7?

##############################################################################
Lecture 79
##############################################################################
1. Explain the overall goal of the security target evaluation as exemplified by the Sun Identity Manager example.

2. How do you think that a security target evaluation differs from a protection profile evaluation?

##############################################################################
Lecture 80
##############################################################################
1. What are the EALs and what are they used for?

2. Who performs the Common Criteria evaluations?

3. Speculate why the higher EALs are not necessarily mutually recognized by various countries.

4. Can vendors certify their own products? Why or why not?

5. If you’re performing a formal evaluation, why is it probably bad to reverse engineer the model from the code?
