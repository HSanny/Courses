Name: Luis Delgado
EID: LED625	
CS Login: LDELGADO
Email: luisdelgado24@utexas.edu
CS361 Questions: Week 5


Lecture 66
1. What is PGP? Take the best algorithms and package them in a very good way
2. What motivated Phil Zimmerman to develop it? Zimmerman had a strong distrusts of the government, and believed strongly that everyone had an absolute right to privacy
3. Does PGP provide effective security? Yes, it uses the best available cryptographic algorithms as building blocks.
4. If PGP is freeware, why would anyone bother to purchase support? Companies don’t like using freeware because they want customer support and other commodities.


Lecture 67
1. Explain the PGP authentication protocol. You use digital messages, you sign a message and that way the other party knows it’s coming from you.
2. Explain the PGP confidentiality protocol. You take the message, generate a new session key, encrypt the message using the best symmetric encryption, you encrypt the message with the receiver’s public key. Package it and send it.
3. How do you get both authentication and confidentiality? You take these two pieces and put them together. 


Lecture 68
1. Besides authentication and confidentiality, what other “services” does PGP provide? Compression, Email compatibility, Segmentation
2. Why is compression needed? To save bandwidth
3. Why sign a message and then compress, rather than the other way around? You don’t want the signature to depend upon the compression algorithm
4. Explain radix-64 conversion and why it’s needed? It’s used to map groups of three octets into four ASCII characters; error checking.
5. Why is PGP segmentation needed? To divide long messages into different chunks and send them one at a time.


Lecture 69
1. What are the four kinds of keys used by PGP? Session keys, public keys, private keys, passphrase-based keys 
2. What special properties are needed of session keys? Enough bits depending on the chosen encryption algorithm
3. How are session keys generated? When a new session is created
4. Assuming RSA is used for PGP asymmetric encryption, how are the keys generated? You take the previous session key and two n/2-bit blocks generated based on user keystrokes, including keystroke timing. The two blocks are encrypted using E and the previous key, and combined to form the new key.
5. How are the private keys protected? Why is this necessary? You must supply the passphrase whenever you want to access it. This is to provide confidentiality.


Lecture 70
1. If a user has multiple private/public key pairs, how does he know which was used when he receives an encrypted message? You generate an id for the pair and you do an associate search to see which one matches
2. What’s on a user’s private key ring? Where you keep your own public/private keys pairs
3. What’s on a user’s public key ring? The public keys of correspondents
4. What are the steps in retrieving a private key from the key ring? PGP retrieves receiver’s encrypted private key from the private-key ring, PGP prompts the user for the passphrase  to recover the unencrypted private key, PGP recovers the session key and decrypts the message
5. What is the key legitimacy field for? It indicates the extent to which PGP trusts that this is a valid public key for this user
6. How is a key revoked? The owner issues a signed-key revocation certificate. Recipients are expected to update their public-key rings


Lecture 71
1. Explain the difference between the consumer and producer problems. Which is more prevalent? The consumer problem means attacker gets logically between the client and service and somehow disrupts the communication. The producer problem means the attacker produces so many services that the server is overwhelmed. The produce problem is more common.
2. Explain syn flooding. It happens when the attacker forges the return address on a number of SUN packets. The server fills its table with these half-open connections
3. Why are the first three solutions to syn flooding not ideal? The problems are consuming considerable resources, disallowing connections by slower clients, and having trouble to determine when a packet is legitimate or not.


Lecture 72
1. Why does packet filtering work very well to prevent attacks? Because it gets rid in its majority of any malignant packages  
2. What are the differences between intrusion detection and intrusion prevention systems? Detection can analyze traffic patterns and react to anomalous patterns while prevention attempts to prevent intrusions by more aggressively blocking attempted attacks
3. Explain the four different solutions mentioned to DDoS attacks. Over-provisioning the network (have too many servers to be overwhelmed), filtering attack packets (somehow distinguish the attack packets from regular packets), slow down processing (disadvantages all requestors, but perhaps disproportionately disadvantages attackers), “speak up” (request additional traffic from all requestors)


Lecture 73
1. Explain false positive and false negatives. Which is worse? False negatives are when a genuine attack is not detected while false positives are when a harmless behavior is misclassified as an attack. It depends.
2. Explain what “accurate” and “precise” mean in the IDS context. Accurate means it detects all genuine attacks while precise means it never reports legitimate behavior as an attack
3. Explain the statement: “It’s easy to build an IDS that is either accurate or precise? It is very hard to do both simultaneously
4. What is the base rate fallacy? Why is it relevant to an IDS? Error in thinking. It’s relevant because an error can lead to an attack.


Lecture 74
1. What did Code Red version 1 attempt to do? If the date of the attack was between the 1st and the 19th of the month, it generated a random list of IP addresses and attempted to infect the machines. From the 20th to the 28th of the month it launched a flooding attack at the White House.
2. Why was Code Red version 1 ineffective? The worm used a static seed in its random number generator and thus generated identical lists of IP addresses on each infected machine. Also, each infected machine probed the same list of machines so the worm spread slowly. Lastly, the IP address for the White House’s website was changed not long after.
3. What does it mean to say that a worm is “memory resident”? What are the implications. The worm resides somewhere in the machine’s memory. The worm is stored within the machine.
4. Why was Code Red version 2 much more effective than version 1? It had a randomly generated seed which spread the worm much more widely. 


Lecture 75
1. How was Code Red II related to Code Red (versions 1 and 2)? The writer of Code Red II knew about Code Red I, that’s all.
2. Why do you suppose Code Red II incorporated its elaborate propagation scheme? In order to spread quickly
3. What did Code Red II attempt to do? It first infects a new host, it waits to see if the system has already been infected. If not, the worm initiates its propagation mechanism, sets up a “backdoor” into the infected machine, becomes dormant for a day, and then reboots the machine. 
4. Comment on the implications of a large population of unpatched machines. That part of the population was still vulnerable to these worms.
5. Comment on the report from Verizon cited on slide 6. What are the lessons of their study? Patch a machine as soon as it becomes a possibility.


Lecture 76
1. Why is a certification regime for secure products necessary and useful? Because consumers may not know how to assess this phenomenon and so it should be done for them to establish a safe environment
2. Explain the components of an evaluation standard. A set of requirements defining security functionality, a set of assurance requirements needed for establishing the functional requirements, a methodology for determining that the functional requirements are met, a measure of the evaluation result indicating the trustworthiness of the evaluated system.
3. Why would crypto devices have a separate evaluation mechanism? It’s required by the government.
4. Explain the four levels of certification for crypto devices. Basic security, improved physical security (tamper-evident packaging), strong tamper-resistance and countermeasures, and complete envelope of protection including immediate zeroing of keys 


Lecture 77
1. What is the Common Criteria? Criteria to evaluate secure systems.
2. What’s “common” about it? It has the CC documents, the CC Evaluation Methodology, and country-specific evaluation methodologies called an Evaluation Scheme.
3. Why would there be any need for “National Schemes”? In order to be able to compare systems among countries.
4. Explain the difference between a protection profile and a security target. The first is a set of implementation-independent security requirements for a category of products or systems. The latter protects against a security target.


Lecture 78
1. Explain the overall goal of the protection profile as exemplified by the WBIS example. To provide a layer of security by using a protection front
2. What is the purpose of the various parts of the protection profile (as exemplified in the WBIS example)? Separation of powers, to divide an action into separate tasks


Lecture 79
1. Explain the overall goal of the security target evaluation as exemplified by the Sun Identity Manager example. Provide a benign, risk-free environment for users to interact
2. How do you think that a security target evaluation differs from a protection profile evaluation? Security Target Evaluation attempts to provide overall security to the system while protection profile attempts to provide security to each profile


Lecture 80
1. What are the EALs and what are they used for? The level of rigor that the evaluation attempts to target. They are used to differentiate among targets.
2. Who performs the Common Criteria evaluations? The country’s government
3. Speculate why the higher EALs are not necessarily mutually recognized by various countries. Because different countries might have different definitions of higher EALs
4. Can vendors certify their own products? Why or why not? No, because they would probably provide a biased opinion
5. If you’re performing a formal evaluation, why is it probably bad to reverse engineer the model from the code? Because it won’t turn out to be the model that you were expecting since it’s hard to reverse engineer.

Well done!

