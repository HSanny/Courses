############################################################
##    FILENAME:   Master.py    
##    VERSION:    1.0
##    SINCE:      2014-04-15
##    AUTHOR: 
##        Jimmy Lin (xl5224) - JimmyLin@utexas.edu  
##
############################################################
##    Edited by MacVim
##    Documentation auto-generated by Snippet 
############################################################


''' Program entry '''
if __name__ == "__main__":
    # read command file

    # variables
    [allClients, allServers] = [[], []]

    # process command
    if command == "startClient":
        ''' 
        startClient(i,j): Start a client with client id i, which is
        conneted to server j.
        ''' 

    elif command == "clientDisconnect":
        '''
        clientDisconnect(i): Client i disconnects with the server.
        '''

    elif command == "clientReconnect":
        '''
        clientReconnect(i,j): Client i reconnect to server j. We use this
        command after client i has disconnected with server by calling
        clientDisconnect(i).
        '''

    elif command == "pause":
        '''
        Pause the progress of the Bayou protocol, later you can continue the
        execution of the protocol.
        '''

    elif command == "continue":
        '''
        Continue after pause.
        '''

    elif command == "printLog":
        '''
        Print logs of all nodes.
        '''

    elif command == "printLogi":
        '''
        Print log of node i.
        '''

    elif command == "Isolate":
        '''
        Isolate(i): Node i is partitioned from other nodes.
        '''

    elif command == "reconnect":
        '''
        reconnect(i): Node i is connected to all other nodes. It is used when
        we try to recover the connections after we call partition(i).
        '''

    elif command == "breakConnection":
        '''
        breakConnection(i,j): Break the connection between Node i and Node j.
        '''


    elif command == "recoverConnection":
        '''
        recoverConnection(i,j): Recover the connection between Node i and Node j.
        '''


    elif command == "join":
        '''
        join(i): Node i joins the system.
        '''


    elif command == "leave":
        '''
        leave(i): Node i leaves (retires from) the system.
        '''

    # send messages to terminate the whole system
    
    
