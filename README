PAXOS Project 
=============

##### Contributors

 	**Jimmy Lin** (UTEID: xl5224)  Login: jimmylin 
 	**Calvin Szeto** (UTEID: CS37888) Login: calvins

Slip days used (this project): __0 day__ 
Slip days used (total): __0 day__

USAGE:
---------------

To better test our implementation, we design a series of new tests based on given system requirement and **pass all of them in our own machine**. The series of tests are 

	simpleTest.test (provided)
	threeNodeGap.test (provided)
	
	crashNonLeaderServer.test    
	repeatedCrash.test           
	skipManySlots.test
	timeBombLeaderAtNonZero.test
	crashRecoverBomb.test
	restartServer.test
	skipSlotsAtBeginning.test
	overlapSendMessage.test

To run the sample tests, replace test_name with the name of the test and execute the following command:

	cat tests/tests/[test_name].test | $(cat COMMAND)
	
An alternative is that you can use the RUN script designed by us, the usage is as follows:

	./RUN -t tests/tests/[test_name].test

or you can run all tests by simply typing:

	./RUN 

If your output matches the solution, NOTHING will be printed. Otherwise the lines that differ will be shown. 
The output for the run of the test will also be stored in a file temp_output after running the second command.

CodeBase Decription
------------------
Here we provide brief introduction to the java files in the src/ directory.

	Master  Provided master file as program driver
	Server
	Client
	
	Protocol
	Logging
	Util

	Leader
	Acceptor

Protocol Design
----------------

####Message Format: 

	SENDER_TYPE 
	SENDER_INDEX
	RECEIVER_TYPE
	RECEIVER_INDEX
	TITLE
	CONTENT

Problems
---------------

Sometimes there are Connection problems:

1. How to crash a server in practice? Should we use "kill" process by external system call or in the manner of message passing. In latter case, the server may not crash immediately. 
    
    Answered by TA: In theory, nothing is to be stored to stable storage. So, when we crash a server, it should lose everything. The easiest way to do this is to just kill the process.
    
2. How do we recover from crased server? What information should we make use of?

    Answered by TA: When a server is restarted by the Master, it needs to ask every other server about the state of the system. When the server is caught up on the state of the system, it will resume normal leader/acceptor actions.

3. In the timeBombLeader function, what is the precise definition paxos related messages? 

4. There should ideally be only one leader at a time. Every replica should have a leader, but only one is actively doing leader activities. Use heartbeats to determine when a leader fails, and activate the next leader. If there are more than one leaders up at a time, there should be a way to narrow it back down to one (e.g. if a server who is acting as leader receives a leader heartbeat from a server whose index is lower than his, then he will deactivate his leader).

5. Paxos sequence number == slot number. Since the spec needs it to be zero-indexed, just make the slot number zero-indexed, unlike the pseudocode. The function of cid is so that if a replica receives two "hello" messages from a single client, it knows whether that is a repeat message or actually two different messages. 

6. Ballot numbers don't have to necessarily be globally unique; the problem we want to avoid is where two replicas each have a ballot with the same number but different proposals. We can solve this problem by saying, from the point of view of the acceptor, we accept the ballot which came from the server (or client) with the higher index. 

7. Why does the pseudocode show <r', L'> instead of b? For commander?

Implementation Details
---------------

1. **Basics**: To start up all clients and servers, we use runtime.exec to **run clients and
   servers as new processes**. The arguments provided to them is clientIndex or
   serverIndex. After creating all processes, the master program waits for 
   arrivals of setup acknowledgement of created processe (servers and
   clients). Master proceeds to read the next instruction only when it
   collects all acknowledgements. 

2. **Leader Failure Detection**: **Heartbeat** is implemented. For
   the specific heartbeat configuration, see the source script
   src/Protocol.java.  Every server that does not carry the leader will create
   a **heartbeatTimer to count whether it lose the heartbeat signal for a long
   time**. If it has a long time not get the heartbeat message, it will deduce
   that the current leader has failed and propose itself to be a new leader.

3. **Leader Re-election**: **the server with lower index number possesses the
   priority**. If a server with lower index received a leader proposal from higher-index server, it will reject this leader proposal. Otherwise, it will accept that proposal. 
   
4. **All Clear Checking**: master will send message to ask all replicas and
   clients about whether they are clear about all they should know. That is,
   did they receive corresponding decision for all they have proposed. Note
   that some replicas may crash and the ultimate allClear check in master side
   will ignore those replicas that it believes to be dead.
   
5. **Crash instruction**: kill a server and then re-elect a new leader if that server carries current leader.
    
    Leader creates heartbeat thread that sends timed heartbeat to every other replica
    Replica holds global variable for lastHeartbeatReceived
    Replica creates thread for counting timeout
    On receipt of a heartbeat message, Replica updates lastHeartbeatReceived with currentTime(or attached time?)
    What happens when counter reaches timeout?
        Interrupt replica
        End counter
        replica enters leader election
        *if receive message not related to election:
            cache message in queue

6. Specific Idea for Leader Election:
        Use Heartbeats for detecting failure.
        Non-leader servers use the Bully algorithm

    After election-New Leader (when you receive all leader_proposal_acks):
        start leader thread
        execute all proposals which have not been decided
        execute all queued messages
    
    After election-Other Replicas
