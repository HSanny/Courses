package types.paths;
import visitors.PathVisitor;
import elements.SvgElement;
import types.Path;
/** 
* @module MoveTo.java
* @version 1.0 
* @since 2013-04-22
* @author Jimmy Lin (u5223173) - u5223173@uds.anu.edu.au
* 
* Edited by MacVim
* Class Info auto-generated by Snippet 
*/
public class MoveTo extends Path {
    private Point2D point;

    // Complex Constructor to organise given input
    public MoveTo (SvgElement e, String command, double[] points) {
        super(e);
        // check validity of moveto argument
        assert points.length % 2 == 0;
        // initialize those fields defined in its parent class
        assert points.length > 0;
        // assignment
        this.command = command;

        if (points.length >= 2)
            this.point = new Point2D (points[0], points[1]);
        // given coordinates.
        if (points.length > 2) {
            // directly use the first two elements of the input 
            // as new point..
            double [] newPoints = new double [points.length - 2];
            for (int i = 0; i < newPoints.length ; i ++) {
                newPoints[i] = points[i+2];
            }
            this.next = new MoveTo (e, command, newPoints);
            }
        } 

    // get x, y coordinates
    public double getAbscissa () { return this.point.getAbscissa(); }
    public double getOrdinate () { return this.point.getOrdinate(); }


    public boolean isDrawable() {
        return this.isCurrentPositionValid();
    }
    
    public String toString () {
        String str = "MoveTo:";
        str += "(" + this.getAbscissa() + "," + this.getOrdinate() + ")";
        return str;
    }

    // visitor pattern implementation
    public void acceptPV (PathVisitor visitor) {
        visitor.visitMoveTo(this);
    }
}
